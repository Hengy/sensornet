

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Sep 23 09:19:55 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F24K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           	psect	idataCOMRAM
    24  003D7F                     __pidataCOMRAM:
    25                           	opt stack 0
    26                           
    27                           ;initializer for _CONFIG_CURR
    28  003D7F  0A                 	db	10
    29                           
    30                           ;initializer for _EN_RXADDR_CURR
    31  003D80  01                 	db	1
    32                           
    33                           ;initializer for _RF_CH_CURR
    34  003D81  69                 	db	105
    35                           
    36                           ;initializer for _RF_SETUP_CURR
    37  003D82  06                 	db	6
    38                           
    39                           ;initializer for _RX_PW_P0_CURR
    40  003D83  01                 	db	1
    41                           
    42                           ;initializer for _SETUP_AW_CURR
    43  003D84  02                 	db	2
    44                           
    45                           ;initializer for _SETUP_RETR_CURR
    46  003D85  20                 	db	32
    47                           
    48                           ;initializer for _RX_ADDRESS
    49  003D86  E7                 	db	231
    50  003D87  E7                 	db	231
    51  003D88  E7                 	db	231
    52  003D89  E7                 	db	231
    53                           
    54                           ;initializer for _TX_ADDRESS
    55  003D8A  E7                 	db	231
    56  003D8B  E7                 	db	231
    57  003D8C  E7                 	db	231
    58  003D8D  E7                 	db	231
    59  0000                     _LATA	set	3977
    60  0000                     _LATAbits	set	3977
    61  0000                     _LATB	set	3978
    62  0000                     _LATC	set	3979
    63  0000                     _SSP1ADD	set	4040
    64  0000                     _SSP1BUF	set	4041
    65  0000                     _SSP1CON1bits	set	4038
    66  0000                     _SSP1STATbits	set	4039
    67  0000                     _TRISA	set	3986
    68  0000                     _TRISB	set	3987
    69  0000                     _TRISC	set	3988
    70                           
    71                           ; #config settings
    72  0000                     
    73                           	psect	cinit
    74  003E10                     __pcinit:
    75                           	opt stack 0
    76  003E10                     start_initialization:
    77                           	opt stack 0
    78  003E10                     __initialization:
    79                           	opt stack 0
    80                           
    81                           ; Clear objects allocated to COMRAM (67 bytes)
    82  003E10  EE00  F001         	lfsr	0,__pbssCOMRAM
    83  003E14  0E43               	movlw	67
    84  003E16                     clear_0:
    85  003E16  6AEE               	clrf	postinc0,c
    86  003E18  06E8               	decf	wreg,f,c
    87  003E1A  E1FD               	bnz	clear_0
    88                           
    89                           ; Initialize objects allocated to COMRAM (15 bytes)
    90                           ; load TBLPTR registers with __pidataCOMRAM
    91  003E1C  0E7F               	movlw	low __pidataCOMRAM
    92  003E1E  6EF6               	movwf	tblptrl,c
    93  003E20  0E3D               	movlw	high __pidataCOMRAM
    94  003E22  6EF7               	movwf	tblptrh,c
    95  003E24  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    96  003E26  6EF8               	movwf	tblptru,c
    97  003E28  EE00  F044         	lfsr	0,__pdataCOMRAM
    98  003E2C  EE10 F00F          	lfsr	1,15
    99  003E30                     copy_data0:
   100  003E30  0009               	tblrd		*+
   101  003E32  CFF5 FFEE          	movff	tablat,postinc0
   102  003E36  50E5               	movf	postdec1,w,c
   103  003E38  50E1               	movf	fsr1l,w,c
   104  003E3A  E1FA               	bnz	copy_data0
   105  003E3C                     end_of_initialization:
   106                           	opt stack 0
   107  003E3C                     __end_of__initialization:
   108                           	opt stack 0
   109  003E3C  0100               	movlb	0
   110  003E3E  EF77  F01F         	goto	_main	;jump to C main() function
   111                           tblptru	equ	0xFF8
   112                           tblptrh	equ	0xFF7
   113                           tblptrl	equ	0xFF6
   114                           tablat	equ	0xFF5
   115                           postinc0	equ	0xFEE
   116                           wreg	equ	0xFE8
   117                           postdec1	equ	0xFE5
   118                           fsr1l	equ	0xFE1
   119                           
   120                           	psect	bssCOMRAM
   121  000001                     __pbssCOMRAM:
   122                           	opt stack 0
   123  000001                     _dataBufIn:
   124                           	opt stack 0
   125  000001                     	ds	32
   126  000021                     _dataBufOut:
   127                           	opt stack 0
   128  000021                     	ds	32
   129  000041                     _count:
   130                           	opt stack 0
   131  000041                     	ds	2
   132  000043                     _ENAA_CURR:
   133                           	opt stack 0
   134  000043                     	ds	1
   135                           tblptru	equ	0xFF8
   136                           tblptrh	equ	0xFF7
   137                           tblptrl	equ	0xFF6
   138                           tablat	equ	0xFF5
   139                           postinc0	equ	0xFEE
   140                           wreg	equ	0xFE8
   141                           postdec1	equ	0xFE5
   142                           fsr1l	equ	0xFE1
   143                           
   144                           	psect	dataCOMRAM
   145  000044                     __pdataCOMRAM:
   146                           	opt stack 0
   147  000044                     _CONFIG_CURR:
   148                           	opt stack 0
   149  000044                     	ds	1
   150  000045                     _EN_RXADDR_CURR:
   151                           	opt stack 0
   152  000045                     	ds	1
   153  000046                     _RF_CH_CURR:
   154                           	opt stack 0
   155  000046                     	ds	1
   156  000047                     _RF_SETUP_CURR:
   157                           	opt stack 0
   158  000047                     	ds	1
   159  000048                     _RX_PW_P0_CURR:
   160                           	opt stack 0
   161  000048                     	ds	1
   162  000049                     _SETUP_AW_CURR:
   163                           	opt stack 0
   164  000049                     	ds	1
   165  00004A                     _SETUP_RETR_CURR:
   166                           	opt stack 0
   167  00004A                     	ds	1
   168  00004B                     _RX_ADDRESS:
   169                           	opt stack 0
   170  00004B                     	ds	4
   171  00004F                     _TX_ADDRESS:
   172                           	opt stack 0
   173  00004F                     	ds	4
   174                           tblptru	equ	0xFF8
   175                           tblptrh	equ	0xFF7
   176                           tblptrl	equ	0xFF6
   177                           tablat	equ	0xFF5
   178                           postinc0	equ	0xFEE
   179                           wreg	equ	0xFE8
   180                           postdec1	equ	0xFE5
   181                           fsr1l	equ	0xFE1
   182                           
   183                           	psect	cstackCOMRAM
   184  000053                     __pcstackCOMRAM:
   185                           	opt stack 0
   186  000053                     spiWrite@data:
   187                           	opt stack 0
   188  000053                     delay10ms@ms_multi:
   189                           	opt stack 0
   190                           
   191                           ; 2 bytes @ 0x0
   192  000053                     	ds	1
   193  000054                     ??_nrfTX:
   194  000054                     getSTATUS@statusByte:
   195                           	opt stack 0
   196  000054                     nrfSetTXAddr@addr:
   197                           	opt stack 0
   198  000054                     nrfSetRXAddr@addr:
   199                           	opt stack 0
   200                           
   201                           ; 2 bytes @ 0x1
   202  000054                     	ds	1
   203  000055                     ??_delay10ms:
   204  000055                     nrfTX@data:
   205                           	opt stack 0
   206                           
   207                           ; 1 bytes @ 0x2
   208  000055                     	ds	1
   209  000056                     nrfSetRXAddr@addrXX:
   210                           	opt stack 0
   211  000056                     nrfSetTXAddr@i:
   212                           	opt stack 0
   213  000056                     delay10ms@i:
   214                           	opt stack 0
   215                           
   216                           ; 2 bytes @ 0x3
   217  000056                     	ds	1
   218  000057                     nrfSetRXAddr@i:
   219                           	opt stack 0
   220                           
   221                           ; 2 bytes @ 0x4
   222  000057                     	ds	2
   223  000059                     ??_main:
   224                           
   225                           ; 0 bytes @ 0x6
   226  000059                     	ds	1
   227  00005A                     main@statusByte:
   228                           	opt stack 0
   229                           
   230                           ; 1 bytes @ 0x7
   231  00005A                     	ds	1
   232                           tblptru	equ	0xFF8
   233                           tblptrh	equ	0xFF7
   234                           tblptrl	equ	0xFF6
   235                           tablat	equ	0xFF5
   236                           postinc0	equ	0xFEE
   237                           wreg	equ	0xFE8
   238                           postdec1	equ	0xFE5
   239                           fsr1l	equ	0xFE1
   240                           
   241 ;;
   242 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   243 ;;
   244 ;; *************** function _main *****************
   245 ;; Defined at:
   246 ;;		line 180 in file "main.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;		None
   249 ;; Auto vars:     Size  Location     Type
   250 ;;  statusByte      1    7[COMRAM] unsigned char 
   251 ;; Return value:  Size  Location     Type
   252 ;;		None               void
   253 ;; Registers used:
   254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   255 ;; Tracked objects:
   256 ;;		On entry : 0/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   260 ;;      Params:         0       0       0       0
   261 ;;      Locals:         1       0       0       0
   262 ;;      Temps:          1       0       0       0
   263 ;;      Totals:         2       0       0       0
   264 ;;Total ram usage:        2 bytes
   265 ;; Hardware stack levels required when called:    3
   266 ;; This function calls:
   267 ;;		_delay10ms
   268 ;;		_getSTATUS
   269 ;;		_nrfConfig
   270 ;;		_nrfTX
   271 ;;		_portConfig
   272 ;;		_spiConfig_1
   273 ;;		_spiWrite
   274 ;; This function is called by:
   275 ;;		Startup code after reset
   276 ;; This function uses a non-reentrant model
   277 ;;
   278                           
   279                           	psect	text0
   280  003EEE                     __ptext0:
   281                           	opt stack 0
   282  003EEE                     _main:
   283                           	opt stack 27
   284                           
   285                           ;main.c: 182: portConfig();
   286                           
   287                           ;incstack = 0
   288  003EEE  ECD3  F01E         	call	_portConfig	;wreg free
   289                           
   290                           ;main.c: 184: delay10ms(1);
   291  003EF2  0E00               	movlw	0
   292  003EF4  6E54               	movwf	delay10ms@ms_multi+1,c
   293  003EF6  0E01               	movlw	1
   294  003EF8  6E53               	movwf	delay10ms@ms_multi,c
   295  003EFA  EC59  F01F         	call	_delay10ms	;wreg free
   296                           
   297                           ;main.c: 186: spiConfig_1();
   298  003EFE  ECC7  F01E         	call	_spiConfig_1	;wreg free
   299                           
   300                           ;main.c: 188: nrfConfig();
   301  003F02  ECB2  F01F         	call	_nrfConfig	;wreg free
   302                           
   303                           ;main.c: 190: delay10ms(1);
   304  003F06  0E00               	movlw	0
   305  003F08  6E54               	movwf	delay10ms@ms_multi+1,c
   306  003F0A  0E01               	movlw	1
   307  003F0C  6E53               	movwf	delay10ms@ms_multi,c
   308  003F0E  EC59  F01F         	call	_delay10ms	;wreg free
   309  003F12                     l800:
   310                           
   311                           ;main.c: 194: nrfTX(count);
   312  003F12  5041               	movf	_count,w,c
   313  003F14  ECF2  F01E         	call	_nrfTX
   314                           
   315                           ;main.c: 195: count++;
   316  003F18  4A41               	infsnz	_count,f,c
   317  003F1A  2A42               	incf	_count+1,f,c
   318                           
   319                           ;main.c: 197: _delay((unsigned long)((500)*(64000000/4000000.0)));
   320  003F1C  0E0B               	movlw	11
   321  003F1E  6E59               	movwf	??_main& (0+255),c
   322  003F20  0E62               	movlw	98
   323  003F22                     u87:
   324  003F22  2EE8               	decfsz	wreg,f,c
   325  003F24  D7FE               	goto	u87
   326  003F26  2E59               	decfsz	??_main& (0+255),f,c
   327  003F28  D7FC               	goto	u87
   328  003F2A  D000               	nop2	
   329                           
   330                           ;main.c: 210: char statusByte = getSTATUS();
   331  003F2C  ECB8  F01E         	call	_getSTATUS	;wreg free
   332  003F30  6E5A               	movwf	main@statusByte,c
   333                           
   334                           ;main.c: 211: if (statusByte != 0x0E) {
   335  003F32  505A               	movf	main@statusByte,w,c
   336  003F34  0A0E               	xorlw	14
   337  003F36  B4D8               	btfsc	status,2,c
   338  003F38  D7EC               	goto	l800
   339                           
   340                           ;main.c: 213: LATAbits.LATA0 = 1;
   341  003F3A  8089               	bsf	3977,0,c	;volatile
   342                           
   343                           ;main.c: 214: delay10ms(5);
   344  003F3C  0E00               	movlw	0
   345  003F3E  6E54               	movwf	delay10ms@ms_multi+1,c
   346  003F40  0E05               	movlw	5
   347  003F42  6E53               	movwf	delay10ms@ms_multi,c
   348  003F44  EC59  F01F         	call	_delay10ms	;wreg free
   349                           
   350                           ;main.c: 217: spiWrite(0x20|0x07);
   351  003F48  0E27               	movlw	39
   352  003F4A  ECE0  F01E         	call	_spiWrite
   353                           
   354                           ;main.c: 218: spiWrite(0b01110000);
   355  003F4E  0E70               	movlw	112
   356  003F50  ECE0  F01E         	call	_spiWrite
   357                           
   358                           ;main.c: 220: delay10ms(5);
   359  003F54  0E00               	movlw	0
   360  003F56  6E54               	movwf	delay10ms@ms_multi+1,c
   361  003F58  0E05               	movlw	5
   362  003F5A  6E53               	movwf	delay10ms@ms_multi,c
   363  003F5C  EC59  F01F         	call	_delay10ms	;wreg free
   364                           
   365                           ;main.c: 221: LATAbits.LATA0 = 0;
   366  003F60  9089               	bcf	3977,0,c	;volatile
   367  003F62  D7D7               	goto	l800
   368  003F64                     __end_of_main:
   369                           	opt stack 0
   370                           tblptru	equ	0xFF8
   371                           tblptrh	equ	0xFF7
   372                           tblptrl	equ	0xFF6
   373                           tablat	equ	0xFF5
   374                           postinc0	equ	0xFEE
   375                           wreg	equ	0xFE8
   376                           postdec1	equ	0xFE5
   377                           fsr1l	equ	0xFE1
   378                           status	equ	0xFD8
   379                           
   380 ;; *************** function _spiConfig_1 *****************
   381 ;; Defined at:
   382 ;;		line 243 in file "main.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;		None
   387 ;; Return value:  Size  Location     Type
   388 ;;		None               void
   389 ;; Registers used:
   390 ;;		wreg, status,2
   391 ;; Tracked objects:
   392 ;;		On entry : 0/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   396 ;;      Params:         0       0       0       0
   397 ;;      Locals:         0       0       0       0
   398 ;;      Temps:          0       0       0       0
   399 ;;      Totals:         0       0       0       0
   400 ;;Total ram usage:        0 bytes
   401 ;; Hardware stack levels used:    1
   402 ;; This function calls:
   403 ;;		Nothing
   404 ;; This function is called by:
   405 ;;		_main
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           	psect	text1
   410  003D8E                     __ptext1:
   411                           	opt stack 0
   412  003D8E                     _spiConfig_1:
   413                           	opt stack 29
   414                           
   415                           ;main.c: 244: SSP1CON1bits.CKP = 0;
   416                           
   417                           ;incstack = 0
   418  003D8E  98C6               	bcf	4038,4,c	;volatile
   419                           
   420                           ;main.c: 245: SSP1STATbits.CKE = 1;
   421  003D90  8CC7               	bsf	4039,6,c	;volatile
   422                           
   423                           ;main.c: 246: SSP1STATbits.SMP = 1;
   424  003D92  8EC7               	bsf	4039,7,c	;volatile
   425                           
   426                           ;main.c: 247: SSP1ADD = 0b00111111;
   427  003D94  0E3F               	movlw	63
   428  003D96  6EC8               	movwf	4040,c	;volatile
   429                           
   430                           ;main.c: 248: SSP1CON1bits.SSPM = 0b1010;
   431  003D98  50C6               	movf	4038,w,c	;volatile
   432  003D9A  0BF0               	andlw	-16
   433  003D9C  090A               	iorlw	10
   434  003D9E  6EC6               	movwf	4038,c	;volatile
   435                           
   436                           ;main.c: 250: SSP1CON1bits.SSPEN = 1;
   437  003DA0  8AC6               	bsf	4038,5,c	;volatile
   438                           
   439                           ;main.c: 251: LATAbits.LATA2 = 1;
   440  003DA2  8489               	bsf	3977,2,c	;volatile
   441  003DA4  0012               	return	
   442  003DA6                     __end_of_spiConfig_1:
   443                           	opt stack 0
   444                           tblptru	equ	0xFF8
   445                           tblptrh	equ	0xFF7
   446                           tblptrl	equ	0xFF6
   447                           tablat	equ	0xFF5
   448                           postinc0	equ	0xFEE
   449                           wreg	equ	0xFE8
   450                           postdec1	equ	0xFE5
   451                           fsr1l	equ	0xFE1
   452                           status	equ	0xFD8
   453                           
   454 ;; *************** function _portConfig *****************
   455 ;; Defined at:
   456 ;;		line 229 in file "main.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;		None               void
   463 ;; Registers used:
   464 ;;		wreg, status,2
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   470 ;;      Params:         0       0       0       0
   471 ;;      Locals:         0       0       0       0
   472 ;;      Temps:          0       0       0       0
   473 ;;      Totals:         0       0       0       0
   474 ;;Total ram usage:        0 bytes
   475 ;; Hardware stack levels used:    1
   476 ;; This function calls:
   477 ;;		Nothing
   478 ;; This function is called by:
   479 ;;		_main
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           	psect	text2
   484  003DA6                     __ptext2:
   485                           	opt stack 0
   486  003DA6                     _portConfig:
   487                           	opt stack 29
   488                           
   489                           ;main.c: 230: LATA = 0b00000100;
   490                           
   491                           ;incstack = 0
   492  003DA6  0E04               	movlw	4
   493  003DA8  6E89               	movwf	3977,c	;volatile
   494                           
   495                           ;main.c: 231: LATB = 0x00;
   496  003DAA  0E00               	movlw	0
   497  003DAC  6E8A               	movwf	3978,c	;volatile
   498                           
   499                           ;main.c: 232: LATC = 0x00;
   500  003DAE  0E00               	movlw	0
   501  003DB0  6E8B               	movwf	3979,c	;volatile
   502                           
   503                           ;main.c: 234: TRISA = 0b00001000;
   504  003DB2  0E08               	movlw	8
   505  003DB4  6E92               	movwf	3986,c	;volatile
   506                           
   507                           ;main.c: 235: TRISB = 0b00000000;
   508  003DB6  0E00               	movlw	0
   509  003DB8  6E93               	movwf	3987,c	;volatile
   510                           
   511                           ;main.c: 236: TRISC = 0b00010000;
   512  003DBA  0E10               	movlw	16
   513  003DBC  6E94               	movwf	3988,c	;volatile
   514  003DBE  0012               	return	
   515  003DC0                     __end_of_portConfig:
   516                           	opt stack 0
   517                           tblptru	equ	0xFF8
   518                           tblptrh	equ	0xFF7
   519                           tblptrl	equ	0xFF6
   520                           tablat	equ	0xFF5
   521                           postinc0	equ	0xFEE
   522                           wreg	equ	0xFE8
   523                           postdec1	equ	0xFE5
   524                           fsr1l	equ	0xFE1
   525                           status	equ	0xFD8
   526                           
   527 ;; *************** function _nrfTX *****************
   528 ;; Defined at:
   529 ;;		line 359 in file "main.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;  data            1    wreg     unsigned char 
   532 ;; Auto vars:     Size  Location     Type
   533 ;;  data            1    2[COMRAM] unsigned char 
   534 ;; Return value:  Size  Location     Type
   535 ;;		None               void
   536 ;; Registers used:
   537 ;;		wreg, status,2, cstack
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   543 ;;      Params:         0       0       0       0
   544 ;;      Locals:         1       0       0       0
   545 ;;      Temps:          1       0       0       0
   546 ;;      Totals:         2       0       0       0
   547 ;;Total ram usage:        2 bytes
   548 ;; Hardware stack levels used:    1
   549 ;; Hardware stack levels required when called:    1
   550 ;; This function calls:
   551 ;;		_spiWrite
   552 ;; This function is called by:
   553 ;;		_main
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text3
   558  003DE4                     __ptext3:
   559                           	opt stack 0
   560  003DE4                     _nrfTX:
   561                           	opt stack 28
   562                           
   563                           ;incstack = 0
   564                           ;nrfTX@data stored from wreg
   565  003DE4  6E55               	movwf	nrfTX@data,c
   566                           
   567                           ;main.c: 360: spiWrite(0xA0);
   568  003DE6  0EA0               	movlw	160
   569  003DE8  ECE0  F01E         	call	_spiWrite
   570                           
   571                           ;main.c: 361: spiWrite(data);
   572  003DEC  5055               	movf	nrfTX@data,w,c
   573  003DEE  ECE0  F01E         	call	_spiWrite
   574                           
   575                           ;main.c: 364: LATAbits.LATA1 = 1;
   576  003DF2  8289               	bsf	3977,1,c	;volatile
   577                           
   578                           ;main.c: 365: _delay((unsigned long)((20)*(64000000/4000000.0)));
   579  003DF4  0E6A               	movlw	106
   580  003DF6                     u97:
   581  003DF6  2EE8               	decfsz	wreg,f,c
   582  003DF8  D7FE               	goto	u97
   583  003DFA  D000               	nop2		;nop
   584                           
   585                           ;main.c: 366: LATAbits.LATA1 = 0;
   586  003DFC  9289               	bcf	3977,1,c	;volatile
   587                           
   588                           ;main.c: 367: _delay((unsigned long)((200)*(64000000/4000000.0)));
   589  003DFE  0E05               	movlw	5
   590  003E00  6E54               	movwf	??_nrfTX& (0+255),c
   591  003E02  0E26               	movlw	38
   592  003E04                     u107:
   593  003E04  2EE8               	decfsz	wreg,f,c
   594  003E06  D7FE               	goto	u107
   595  003E08  2E54               	decfsz	??_nrfTX& (0+255),f,c
   596  003E0A  D7FC               	goto	u107
   597  003E0C  D000               	nop2	
   598  003E0E  0012               	return	
   599  003E10                     __end_of_nrfTX:
   600                           	opt stack 0
   601                           tblptru	equ	0xFF8
   602                           tblptrh	equ	0xFF7
   603                           tblptrl	equ	0xFF6
   604                           tablat	equ	0xFF5
   605                           postinc0	equ	0xFEE
   606                           wreg	equ	0xFE8
   607                           postdec1	equ	0xFE5
   608                           fsr1l	equ	0xFE1
   609                           status	equ	0xFD8
   610                           
   611 ;; *************** function _nrfConfig *****************
   612 ;; Defined at:
   613 ;;		line 257 in file "main.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;		None               void
   620 ;; Registers used:
   621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   627 ;;      Params:         0       0       0       0
   628 ;;      Locals:         0       0       0       0
   629 ;;      Temps:          0       0       0       0
   630 ;;      Totals:         0       0       0       0
   631 ;;Total ram usage:        0 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; Hardware stack levels required when called:    2
   634 ;; This function calls:
   635 ;;		_nrfSetRXAddr
   636 ;;		_nrfSetTXAddr
   637 ;;		_spiWrite
   638 ;; This function is called by:
   639 ;;		_main
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           	psect	text4
   644  003F64                     __ptext4:
   645                           	opt stack 0
   646  003F64                     _nrfConfig:
   647                           	opt stack 27
   648                           
   649                           ;main.c: 258: spiWrite(0x20|0x00);
   650                           
   651                           ;incstack = 0
   652  003F64  0E20               	movlw	32
   653  003F66  ECE0  F01E         	call	_spiWrite
   654                           
   655                           ;main.c: 259: spiWrite(CONFIG_CURR);
   656  003F6A  5044               	movf	_CONFIG_CURR,w,c
   657  003F6C  ECE0  F01E         	call	_spiWrite
   658                           
   659                           ;main.c: 260: spiWrite(0x20|0x02);
   660  003F70  0E22               	movlw	34
   661  003F72  ECE0  F01E         	call	_spiWrite
   662                           
   663                           ;main.c: 261: spiWrite(EN_RXADDR_CURR);
   664  003F76  5045               	movf	_EN_RXADDR_CURR,w,c
   665  003F78  ECE0  F01E         	call	_spiWrite
   666                           
   667                           ;main.c: 262: spiWrite(0x20|0x01);
   668  003F7C  0E21               	movlw	33
   669  003F7E  ECE0  F01E         	call	_spiWrite
   670                           
   671                           ;main.c: 263: spiWrite(0b00000000);
   672  003F82  0E00               	movlw	0
   673  003F84  ECE0  F01E         	call	_spiWrite
   674                           
   675                           ;main.c: 264: spiWrite(0x20|0x03);
   676  003F88  0E23               	movlw	35
   677  003F8A  ECE0  F01E         	call	_spiWrite
   678                           
   679                           ;main.c: 265: spiWrite(SETUP_AW_CURR);
   680  003F8E  5049               	movf	_SETUP_AW_CURR,w,c
   681  003F90  ECE0  F01E         	call	_spiWrite
   682                           
   683                           ;main.c: 266: spiWrite(0x20|0x04);
   684  003F94  0E24               	movlw	36
   685  003F96  ECE0  F01E         	call	_spiWrite
   686                           
   687                           ;main.c: 267: spiWrite(SETUP_RETR_CURR);
   688  003F9A  504A               	movf	_SETUP_RETR_CURR,w,c
   689  003F9C  ECE0  F01E         	call	_spiWrite
   690                           
   691                           ;main.c: 268: spiWrite(0x20|0x11);
   692  003FA0  0E31               	movlw	49
   693  003FA2  ECE0  F01E         	call	_spiWrite
   694                           
   695                           ;main.c: 269: spiWrite(RX_PW_P0_CURR);
   696  003FA6  5048               	movf	_RX_PW_P0_CURR,w,c
   697  003FA8  ECE0  F01E         	call	_spiWrite
   698                           
   699                           ;main.c: 270: spiWrite(0x20|0x12);
   700  003FAC  0E32               	movlw	50
   701  003FAE  ECE0  F01E         	call	_spiWrite
   702                           
   703                           ;main.c: 271: spiWrite(RX_PW_P0_CURR);
   704  003FB2  5048               	movf	_RX_PW_P0_CURR,w,c
   705  003FB4  ECE0  F01E         	call	_spiWrite
   706                           
   707                           ;main.c: 272: nrfSetTXAddr(TX_ADDRESS);
   708  003FB8  0E00               	movlw	high _TX_ADDRESS
   709  003FBA  6E55               	movwf	nrfSetTXAddr@addr+1,c
   710  003FBC  0E4F               	movlw	low _TX_ADDRESS
   711  003FBE  6E54               	movwf	nrfSetTXAddr@addr,c
   712  003FC0  EC21  F01F         	call	_nrfSetTXAddr	;wreg free
   713                           
   714                           ;main.c: 273: nrfSetRXAddr(0x0A,RX_ADDRESS);
   715  003FC4  0E00               	movlw	high _RX_ADDRESS
   716  003FC6  6E55               	movwf	nrfSetRXAddr@addr+1,c
   717  003FC8  0E4B               	movlw	low _RX_ADDRESS
   718  003FCA  6E54               	movwf	nrfSetRXAddr@addr,c
   719  003FCC  0E0A               	movlw	10
   720  003FCE  EC3C  F01F         	call	_nrfSetRXAddr
   721                           
   722                           ;main.c: 274: nrfSetRXAddr(0x0B,RX_ADDRESS);
   723  003FD2  0E00               	movlw	high _RX_ADDRESS
   724  003FD4  6E55               	movwf	nrfSetRXAddr@addr+1,c
   725  003FD6  0E4B               	movlw	low _RX_ADDRESS
   726  003FD8  6E54               	movwf	nrfSetRXAddr@addr,c
   727  003FDA  0E0B               	movlw	11
   728  003FDC  EC3C  F01F         	call	_nrfSetRXAddr
   729                           
   730                           ;main.c: 275: spiWrite(0x20|0x05);
   731  003FE0  0E25               	movlw	37
   732  003FE2  ECE0  F01E         	call	_spiWrite
   733                           
   734                           ;main.c: 276: spiWrite(RF_CH_CURR);
   735  003FE6  5046               	movf	_RF_CH_CURR,w,c
   736  003FE8  ECE0  F01E         	call	_spiWrite
   737                           
   738                           ;main.c: 277: spiWrite(0x20|0x06);
   739  003FEC  0E26               	movlw	38
   740  003FEE  ECE0  F01E         	call	_spiWrite
   741                           
   742                           ;main.c: 278: spiWrite(RF_SETUP_CURR);
   743  003FF2  5047               	movf	_RF_SETUP_CURR,w,c
   744  003FF4  ECE0  F01E         	call	_spiWrite
   745                           
   746                           ;main.c: 279: spiWrite(0xE1);
   747  003FF8  0EE1               	movlw	225
   748  003FFA  ECE0  F01E         	call	_spiWrite
   749  003FFE  0012               	return	
   750  004000                     __end_of_nrfConfig:
   751                           	opt stack 0
   752                           tblptru	equ	0xFF8
   753                           tblptrh	equ	0xFF7
   754                           tblptrl	equ	0xFF6
   755                           tablat	equ	0xFF5
   756                           postinc0	equ	0xFEE
   757                           wreg	equ	0xFE8
   758                           postdec1	equ	0xFE5
   759                           fsr1l	equ	0xFE1
   760                           status	equ	0xFD8
   761                           
   762 ;; *************** function _nrfSetTXAddr *****************
   763 ;; Defined at:
   764 ;;		line 286 in file "main.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;  addr            2    1[COMRAM] PTR unsigned char 
   767 ;;		 -> TX_ADDRESS(4), 
   768 ;; Auto vars:     Size  Location     Type
   769 ;;  i               2    3[COMRAM] int 
   770 ;; Return value:  Size  Location     Type
   771 ;;		None               void
   772 ;; Registers used:
   773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   779 ;;      Params:         2       0       0       0
   780 ;;      Locals:         2       0       0       0
   781 ;;      Temps:          0       0       0       0
   782 ;;      Totals:         4       0       0       0
   783 ;;Total ram usage:        4 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; Hardware stack levels required when called:    1
   786 ;; This function calls:
   787 ;;		_spiWrite
   788 ;; This function is called by:
   789 ;;		_nrfConfig
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text5
   794  003E42                     __ptext5:
   795                           	opt stack 0
   796  003E42                     _nrfSetTXAddr:
   797                           	opt stack 27
   798                           
   799                           ;main.c: 287: spiWrite(0x20|0x10);
   800                           
   801                           ;incstack = 0
   802  003E42  0E30               	movlw	48
   803  003E44  ECE0  F01E         	call	_spiWrite
   804                           
   805                           ;main.c: 289: int i;
   806                           ;main.c: 290: for (i=0;i<4;i++) {
   807  003E48  0E00               	movlw	0
   808  003E4A  6E57               	movwf	nrfSetTXAddr@i+1,c
   809  003E4C  0E00               	movlw	0
   810  003E4E  6E56               	movwf	nrfSetTXAddr@i,c
   811  003E50  5057               	movf	nrfSetTXAddr@i+1,w,c
   812  003E52  0A80               	xorlw	128
   813  003E54  0F80               	addlw	-128
   814  003E56  0E04               	movlw	4
   815  003E58  B4D8               	btfsc	status,2,c
   816  003E5A  5C56               	subwf	nrfSetTXAddr@i,w,c
   817  003E5C  B0D8               	btfsc	status,0,c
   818  003E5E  0012               	return	
   819                           
   820                           ;main.c: 291: spiWrite(addr[i]);
   821  003E60  5056               	movf	nrfSetTXAddr@i,w,c
   822  003E62  2454               	addwf	nrfSetTXAddr@addr,w,c
   823  003E64  6ED9               	movwf	fsr2l,c
   824  003E66  5057               	movf	nrfSetTXAddr@i+1,w,c
   825  003E68  2055               	addwfc	nrfSetTXAddr@addr+1,w,c
   826  003E6A  6EDA               	movwf	fsr2h,c
   827  003E6C  50DF               	movf	indf2,w,c
   828  003E6E  ECE0  F01E         	call	_spiWrite
   829  003E72  4A56               	infsnz	nrfSetTXAddr@i,f,c
   830  003E74  2A57               	incf	nrfSetTXAddr@i+1,f,c
   831  003E76  D7EC               	goto	L1
   832  003E78                     __end_of_nrfSetTXAddr:
   833                           	opt stack 0
   834                           tblptru	equ	0xFF8
   835                           tblptrh	equ	0xFF7
   836                           tblptrl	equ	0xFF6
   837                           tablat	equ	0xFF5
   838                           postinc0	equ	0xFEE
   839                           wreg	equ	0xFE8
   840                           postdec1	equ	0xFE5
   841                           fsr1l	equ	0xFE1
   842                           indf2	equ	0xFDF
   843                           fsr2h	equ	0xFDA
   844                           fsr2l	equ	0xFD9
   845                           status	equ	0xFD8
   846                           
   847 ;; *************** function _nrfSetRXAddr *****************
   848 ;; Defined at:
   849 ;;		line 300 in file "main.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  addrXX          1    wreg     unsigned char 
   852 ;;  addr            2    1[COMRAM] PTR unsigned char 
   853 ;;		 -> RX_ADDRESS(4), 
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  addrXX          1    3[COMRAM] unsigned char 
   856 ;;  i               2    4[COMRAM] int 
   857 ;; Return value:  Size  Location     Type
   858 ;;		None               void
   859 ;; Registers used:
   860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   866 ;;      Params:         2       0       0       0
   867 ;;      Locals:         3       0       0       0
   868 ;;      Temps:          0       0       0       0
   869 ;;      Totals:         5       0       0       0
   870 ;;Total ram usage:        5 bytes
   871 ;; Hardware stack levels used:    1
   872 ;; Hardware stack levels required when called:    1
   873 ;; This function calls:
   874 ;;		_spiWrite
   875 ;; This function is called by:
   876 ;;		_nrfConfig
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text6
   881  003E78                     __ptext6:
   882                           	opt stack 0
   883  003E78                     _nrfSetRXAddr:
   884                           	opt stack 27
   885                           
   886                           ;incstack = 0
   887                           ;nrfSetRXAddr@addrXX stored from wreg
   888  003E78  6E56               	movwf	nrfSetRXAddr@addrXX,c
   889                           
   890                           ;main.c: 301: spiWrite(0x20|addrXX);
   891  003E7A  5056               	movf	nrfSetRXAddr@addrXX,w,c
   892  003E7C  0920               	iorlw	32
   893  003E7E  ECE0  F01E         	call	_spiWrite
   894                           
   895                           ;main.c: 303: int i;
   896                           ;main.c: 304: for (i=0;i<4;i++) {
   897  003E82  0E00               	movlw	0
   898  003E84  6E58               	movwf	nrfSetRXAddr@i+1,c
   899  003E86  0E00               	movlw	0
   900  003E88  6E57               	movwf	nrfSetRXAddr@i,c
   901  003E8A  5058               	movf	nrfSetRXAddr@i+1,w,c
   902  003E8C  0A80               	xorlw	128
   903  003E8E  0F80               	addlw	-128
   904  003E90  0E04               	movlw	4
   905  003E92  B4D8               	btfsc	status,2,c
   906  003E94  5C57               	subwf	nrfSetRXAddr@i,w,c
   907  003E96  B0D8               	btfsc	status,0,c
   908  003E98  0012               	return	
   909                           
   910                           ;main.c: 305: spiWrite(addr[i]);
   911  003E9A  5057               	movf	nrfSetRXAddr@i,w,c
   912  003E9C  2454               	addwf	nrfSetRXAddr@addr,w,c
   913  003E9E  6ED9               	movwf	fsr2l,c
   914  003EA0  5058               	movf	nrfSetRXAddr@i+1,w,c
   915  003EA2  2055               	addwfc	nrfSetRXAddr@addr+1,w,c
   916  003EA4  6EDA               	movwf	fsr2h,c
   917  003EA6  50DF               	movf	indf2,w,c
   918  003EA8  ECE0  F01E         	call	_spiWrite
   919  003EAC  4A57               	infsnz	nrfSetRXAddr@i,f,c
   920  003EAE  2A58               	incf	nrfSetRXAddr@i+1,f,c
   921  003EB0  D7EC               	goto	L2
   922  003EB2                     __end_of_nrfSetRXAddr:
   923                           	opt stack 0
   924                           tblptru	equ	0xFF8
   925                           tblptrh	equ	0xFF7
   926                           tblptrl	equ	0xFF6
   927                           tablat	equ	0xFF5
   928                           postinc0	equ	0xFEE
   929                           wreg	equ	0xFE8
   930                           postdec1	equ	0xFE5
   931                           fsr1l	equ	0xFE1
   932                           indf2	equ	0xFDF
   933                           fsr2h	equ	0xFDA
   934                           fsr2l	equ	0xFD9
   935                           status	equ	0xFD8
   936                           
   937 ;; *************** function _getSTATUS *****************
   938 ;; Defined at:
   939 ;;		line 314 in file "main.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  statusByte      1    1[COMRAM] unsigned char 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      unsigned char 
   946 ;; Registers used:
   947 ;;		wreg, status,2, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   953 ;;      Params:         0       0       0       0
   954 ;;      Locals:         1       0       0       0
   955 ;;      Temps:          0       0       0       0
   956 ;;      Totals:         1       0       0       0
   957 ;;Total ram usage:        1 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; Hardware stack levels required when called:    1
   960 ;; This function calls:
   961 ;;		_spiWrite
   962 ;; This function is called by:
   963 ;;		_main
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text7
   968  003D70                     __ptext7:
   969                           	opt stack 0
   970  003D70                     _getSTATUS:
   971                           	opt stack 28
   972                           
   973                           ;main.c: 315: char statusByte;
   974                           ;main.c: 316: spiWrite(0xFF);
   975                           
   976                           ;incstack = 0
   977  003D70  0EFF               	movlw	255
   978  003D72  ECE0  F01E         	call	_spiWrite
   979                           
   980                           ;main.c: 317: statusByte = SSP1BUF;
   981  003D76  CFC9 F054          	movff	4041,getSTATUS@statusByte	;volatile
   982                           
   983                           ;main.c: 319: return statusByte;
   984  003D7A  5054               	movf	getSTATUS@statusByte,w,c
   985  003D7C  0012               	return	
   986  003D7E                     __end_of_getSTATUS:
   987                           	opt stack 0
   988                           tblptru	equ	0xFF8
   989                           tblptrh	equ	0xFF7
   990                           tblptrl	equ	0xFF6
   991                           tablat	equ	0xFF5
   992                           postinc0	equ	0xFEE
   993                           wreg	equ	0xFE8
   994                           postdec1	equ	0xFE5
   995                           fsr1l	equ	0xFE1
   996                           indf2	equ	0xFDF
   997                           fsr2h	equ	0xFDA
   998                           fsr2l	equ	0xFD9
   999                           status	equ	0xFD8
  1000                           
  1001 ;; *************** function _spiWrite *****************
  1002 ;; Defined at:
  1003 ;;		line 325 in file "main.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  data            1    wreg     unsigned char 
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;  data            1    0[COMRAM] unsigned char 
  1008 ;; Return value:  Size  Location     Type
  1009 ;;		None               void
  1010 ;; Registers used:
  1011 ;;		wreg, status,2, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1017 ;;      Params:         0       0       0       0
  1018 ;;      Locals:         1       0       0       0
  1019 ;;      Temps:          0       0       0       0
  1020 ;;      Totals:         1       0       0       0
  1021 ;;Total ram usage:        1 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;;		_nrfConfig
  1028 ;;		_nrfSetTXAddr
  1029 ;;		_nrfSetRXAddr
  1030 ;;		_getSTATUS
  1031 ;;		_nrfTX
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           	psect	text8
  1036  003DC0                     __ptext8:
  1037                           	opt stack 0
  1038  003DC0                     _spiWrite:
  1039                           	opt stack 29
  1040                           
  1041                           ;incstack = 0
  1042                           ;spiWrite@data stored from wreg
  1043  003DC0  6E53               	movwf	spiWrite@data,c
  1044                           
  1045                           ;main.c: 327: LATAbits.LATA2 = 0;
  1046  003DC2  9489               	bcf	3977,2,c	;volatile
  1047                           
  1048                           ;main.c: 328: _delay((unsigned long)((20)*(64000000/4000000.0)));
  1049  003DC4  0E6A               	movlw	106
  1050  003DC6                     u117:
  1051  003DC6  2EE8               	decfsz	wreg,f,c
  1052  003DC8  D7FE               	goto	u117
  1053  003DCA  D000               	nop2		;nop
  1054                           
  1055                           ;main.c: 329: SSP1BUF = data;
  1056  003DCC  C053  FFC9         	movff	spiWrite@data,4041	;volatile
  1057                           
  1058                           ;main.c: 330: _delay((unsigned long)((40)*(64000000/4000000.0)));
  1059  003DD0  0ED5               	movlw	213
  1060  003DD2                     u127:
  1061  003DD2  2EE8               	decfsz	wreg,f,c
  1062  003DD4  D7FE               	goto	u127
  1063  003DD6  F000               	nop	
  1064                           
  1065                           ;main.c: 331: LATAbits.LATA2 = 1;
  1066  003DD8  8489               	bsf	3977,2,c	;volatile
  1067                           
  1068                           ;main.c: 332: _delay((unsigned long)((20)*(64000000/4000000.0)));
  1069  003DDA  0E6A               	movlw	106
  1070  003DDC                     u137:
  1071  003DDC  2EE8               	decfsz	wreg,f,c
  1072  003DDE  D7FE               	goto	u137
  1073  003DE0  D000               	nop2		;nop
  1074  003DE2  0012               	return	
  1075  003DE4                     __end_of_spiWrite:
  1076                           	opt stack 0
  1077                           tblptru	equ	0xFF8
  1078                           tblptrh	equ	0xFF7
  1079                           tblptrl	equ	0xFF6
  1080                           tablat	equ	0xFF5
  1081                           postinc0	equ	0xFEE
  1082                           wreg	equ	0xFE8
  1083                           postdec1	equ	0xFE5
  1084                           fsr1l	equ	0xFE1
  1085                           indf2	equ	0xFDF
  1086                           fsr2h	equ	0xFDA
  1087                           fsr2l	equ	0xFD9
  1088                           status	equ	0xFD8
  1089                           
  1090 ;; *************** function _delay10ms *****************
  1091 ;; Defined at:
  1092 ;;		line 373 in file "main.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;  ms_multi        2    0[COMRAM] int 
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;  i               2    3[COMRAM] int 
  1097 ;; Return value:  Size  Location     Type
  1098 ;;		None               void
  1099 ;; Registers used:
  1100 ;;		wreg, status,2, status,0
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1106 ;;      Params:         2       0       0       0
  1107 ;;      Locals:         2       0       0       0
  1108 ;;      Temps:          1       0       0       0
  1109 ;;      Totals:         5       0       0       0
  1110 ;;Total ram usage:        5 bytes
  1111 ;; Hardware stack levels used:    1
  1112 ;; This function calls:
  1113 ;;		Nothing
  1114 ;; This function is called by:
  1115 ;;		_main
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text9
  1120  003EB2                     __ptext9:
  1121                           	opt stack 0
  1122  003EB2                     _delay10ms:
  1123                           	opt stack 29
  1124                           
  1125                           ;main.c: 374: int i = 0;
  1126                           
  1127                           ;incstack = 0
  1128  003EB2  0E00               	movlw	0
  1129  003EB4  6E57               	movwf	delay10ms@i+1,c
  1130  003EB6  0E00               	movlw	0
  1131  003EB8  6E56               	movwf	delay10ms@i,c
  1132                           
  1133                           ;main.c: 375: for (i=0;i<ms_multi;i++) {
  1134  003EBA  0E00               	movlw	0
  1135  003EBC  6E57               	movwf	delay10ms@i+1,c
  1136  003EBE  0E00               	movlw	0
  1137  003EC0  6E56               	movwf	delay10ms@i,c
  1138  003EC2  D00A               	goto	l111
  1139  003EC4                     l742:
  1140                           
  1141                           ;main.c: 376: _delay((unsigned long)((11)*(64000000/4000.0)));
  1142  003EC4  0EE5               	movlw	229
  1143  003EC6  6E55               	movwf	??_delay10ms& (0+255),c
  1144  003EC8  0E91               	movlw	145
  1145  003ECA                     u147:
  1146  003ECA  2EE8               	decfsz	wreg,f,c
  1147  003ECC  D7FE               	goto	u147
  1148  003ECE  2E55               	decfsz	??_delay10ms& (0+255),f,c
  1149  003ED0  D7FC               	goto	u147
  1150  003ED2  F000               	nop	
  1151  003ED4  4A56               	infsnz	delay10ms@i,f,c
  1152  003ED6  2A57               	incf	delay10ms@i+1,f,c
  1153  003ED8                     l111:
  1154  003ED8  5057               	movf	delay10ms@i+1,w,c
  1155  003EDA  0A80               	xorlw	128
  1156  003EDC  6E55               	movwf	??_delay10ms& (0+255),c
  1157  003EDE  5053               	movf	delay10ms@ms_multi,w,c
  1158  003EE0  5C56               	subwf	delay10ms@i,w,c
  1159  003EE2  5054               	movf	delay10ms@ms_multi+1,w,c
  1160  003EE4  0A80               	xorlw	128
  1161  003EE6  5855               	subwfb	??_delay10ms& (0+255),w,c
  1162  003EE8  B0D8               	btfsc	status,0,c
  1163  003EEA  0012               	return	
  1164  003EEC  D7EB               	goto	l742
  1165  003EEE                     __end_of_delay10ms:
  1166                           	opt stack 0
  1167  0000                     tblptru	equ	0xFF8
  1168                           tblptrh	equ	0xFF7
  1169                           tblptrl	equ	0xFF6
  1170                           tablat	equ	0xFF5
  1171                           postinc0	equ	0xFEE
  1172                           wreg	equ	0xFE8
  1173                           postdec1	equ	0xFE5
  1174                           fsr1l	equ	0xFE1
  1175                           indf2	equ	0xFDF
  1176                           fsr2h	equ	0xFDA
  1177                           fsr2l	equ	0xFD9
  1178                           status	equ	0xFD8
  1179                           tblptru	equ	0xFF8
  1180                           tblptrh	equ	0xFF7
  1181                           tblptrl	equ	0xFF6
  1182                           tablat	equ	0xFF5
  1183                           postinc0	equ	0xFEE
  1184                           wreg	equ	0xFE8
  1185                           postdec1	equ	0xFE5
  1186                           fsr1l	equ	0xFE1
  1187                           indf2	equ	0xFDF
  1188                           fsr2h	equ	0xFDA
  1189                           fsr2l	equ	0xFD9
  1190                           status	equ	0xFD8
  1191                           
  1192                           	psect	rparam
  1193  0000                     tblptru	equ	0xFF8
  1194                           tblptrh	equ	0xFF7
  1195                           tblptrl	equ	0xFF6
  1196                           tablat	equ	0xFF5
  1197                           postinc0	equ	0xFEE
  1198                           wreg	equ	0xFE8
  1199                           postdec1	equ	0xFE5
  1200                           fsr1l	equ	0xFE1
  1201                           indf2	equ	0xFDF
  1202                           fsr2h	equ	0xFDA
  1203                           fsr2l	equ	0xFD9
  1204                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         67
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8      90
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    nrfSetRXAddr@addr	PTR unsigned char  size(2) Largest target is 4
		 -> RX_ADDRESS(COMRAM[4]), 

    nrfSetTXAddr@addr	PTR unsigned char  size(2) Largest target is 4
		 -> TX_ADDRESS(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _nrfTX->_spiWrite
    _nrfConfig->_nrfSetRXAddr
    _nrfSetTXAddr->_spiWrite
    _nrfSetRXAddr->_spiWrite
    _getSTATUS->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     601
                                              6 COMRAM     2     2      0
                          _delay10ms
                          _getSTATUS
                          _nrfConfig
                              _nrfTX
                         _portConfig
                        _spiConfig_1
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiConfig_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _portConfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nrfTX                                                2     2      0      30
                                              1 COMRAM     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _nrfConfig                                            0     0      0     309
                       _nrfSetRXAddr
                       _nrfSetTXAddr
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _nrfSetTXAddr                                         4     2      2     118
                                              1 COMRAM     4     2      2
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _nrfSetRXAddr                                         5     3      2     176
                                              1 COMRAM     5     3      2
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _getSTATUS                                            1     1      0      30
                                              1 COMRAM     1     1      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay10ms                                            5     3      2     202
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay10ms
   _getSTATUS
     _spiWrite
   _nrfConfig
     _nrfSetRXAddr
       _spiWrite
     _nrfSetTXAddr
       _spiWrite
     _spiWrite
   _nrfTX
     _spiWrite
   _portConfig
   _spiConfig_1
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      8      5A       1       94.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5A       9        0.0%
DATA                 0      0      5A      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Sep 23 09:19:55 2014

                     u87 3F22                       u97 3DF6             spiWrite@data 0053  
             _RX_ADDRESS 004B              __CFG_LVP$ON 000000                      l111 3ED8  
                    l800 3F12                      l742 3EC4                      u107 3E04  
                    u117 3DC6                      u127 3DD2                      u137 3DDC  
                    u147 3ECA                      wreg 000FE8               _TX_ADDRESS 004F  
                   _LATA 000F89                     _LATB 000F8A                     _LATC 000F8B  
                   _main 3EEE                     fsr1l 000FE1                     indf2 000FDF  
                   fsr2l 000FD9            __CFG_BORV$190 000000                     start 0002  
          __CFG_IESO$OFF 000000                    ?_main 0053                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94           __CFG_FCMEN$OFF 000000  
                  _count 0041                    _nrfTX 3DE4       __CFG_MCLRE$EXTMCLR 000000  
                  tablat 000FF5                    status 000FD8           __CFG_HFOFST$ON 000000  
         __CFG_FOSC$HSHP 000000          __initialization 3E10             __end_of_main 3F64  
                 ??_main 0059            __activetblptr 000000           __CFG_PLLCFG$ON 000000  
          nrfSetRXAddr@i 0057                   ?_nrfTX 0053            nrfSetTXAddr@i 0056  
         __CFG_WDTEN$OFF 000000             ?_spiConfig_1 0053           __CFG_PWRTEN$ON 000000  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                   clear_0 3E16  
           __pdataCOMRAM 0044         __end_of_spiWrite 3DE4                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 3E3C          __CFG_PBADEN$OFF 000000            ?_nrfSetRXAddr 0054  
          ?_nrfSetTXAddr 0054           __pcstackCOMRAM 0053       __size_of_delay10ms 003C  
          __end_of_nrfTX 3E10       __size_of_getSTATUS 000E           _EN_RXADDR_CURR 0045  
             _dataBufOut 0021                  ??_nrfTX 0054           ??_nrfSetRXAddr 0056  
         ??_nrfSetTXAddr 0056       __size_of_nrfConfig 009C       __CFG_CCP2MX$PORTC1 000000  
     __CFG_CCP3MX$PORTB5 000000                  _SSP1ADD 000FC8                  _SSP1BUF 000FC9  
      __end_of_delay10ms 3EEE         nrfSetRXAddr@addr 0054        __end_of_getSTATUS 3D7E  
                __Hparam 0000                  __Lparam 0000     __size_of_spiConfig_1 0018  
             delay10ms@i 0056                ?_spiWrite 0053            _RX_PW_P0_CURR 0048  
              _ENAA_CURR 0043                  __pcinit 3E10         nrfSetTXAddr@addr 0054  
                __ramtop 0300                  __ptext0 3EEE                  __ptext1 3D8E  
                __ptext2 3DA6                  __ptext3 3DE4                  __ptext4 3F64  
                __ptext5 3E42                  __ptext6 3E78                  __ptext7 3D70  
                __ptext8 3DC0                  __ptext9 3EB2        __end_of_nrfConfig 4000  
   end_of_initialization 3E3C               ??_spiWrite 0053                  postdec1 000FE5  
                postinc0 000FEE               _portConfig 3DA6           main@statusByte 005A  
   __end_of_nrfSetRXAddr 3EB2     __end_of_nrfSetTXAddr 3E78       nrfSetRXAddr@addrXX 0056  
          __pidataCOMRAM 3D7F      start_initialization 3E10              ?_portConfig 0053  
            __pbssCOMRAM 0001                _dataBufIn 0001                _delay10ms 3EB2  
            _CONFIG_CURR 0044            _SETUP_AW_CURR 0049                _getSTATUS 3D70  
    getSTATUS@statusByte 0054    __size_of_nrfSetRXAddr 003A    __size_of_nrfSetTXAddr 0036  
        _SETUP_RETR_CURR 004A        __size_of_spiWrite 0024         __CFG_PRICLKEN$ON 000000  
         __size_of_nrfTX 002C                _nrfConfig 3F64      __size_of_portConfig 001A  
               _LATAbits 000F89               ?_delay10ms 0053            ??_spiConfig_1 0053  
           _nrfSetRXAddr 3E78             _nrfSetTXAddr 3E42               ?_getSTATUS 0053  
       __CFG_WDTPS$32768 000000            _RF_SETUP_CURR 0047        delay10ms@ms_multi 0053  
              copy_data0 3E30               ?_nrfConfig 0053                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000        __CFG_P2BMX$PORTB5 000000  
    __end_of_spiConfig_1 3DA6                nrfTX@data 0055             _SSP1CON1bits 000FC6  
          __size_of_main 0076              ??_delay10ms 0055              ??_getSTATUS 0054  
               _spiWrite 3DC0             _SSP1STATbits 000FC7             ??_portConfig 0053  
            ??_nrfConfig 0059       __end_of_portConfig 3DC0              _spiConfig_1 3D8E  
             _RF_CH_CURR 0046        __CFG_T3CMX$PORTC0 000000  
