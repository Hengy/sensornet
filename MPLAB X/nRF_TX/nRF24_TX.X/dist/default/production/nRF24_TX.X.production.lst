

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Sep 22 18:50:50 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F24K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           	psect	idataCOMRAM
    23  003D72                     __pidataCOMRAM:
    24                           	opt stack 0
    25                           
    26                           ;initializer for _CONFIG_CURR
    27  003D72  0A                 	db	10
    28                           
    29                           ;initializer for _EN_RXADDR_CURR
    30  003D73  03                 	db	3
    31                           
    32                           ;initializer for _RF_CH_CURR
    33  003D74  69                 	db	105
    34                           
    35                           ;initializer for _RF_SETUP_CURR
    36  003D75  06                 	db	6
    37                           
    38                           ;initializer for _RX_PW_P0_CURR
    39  003D76  01                 	db	1
    40                           
    41                           ;initializer for _SETUP_AW_CURR
    42  003D77  02                 	db	2
    43                           
    44                           ;initializer for _RX_ADDRESS
    45  003D78  E7                 	db	231
    46  003D79  E7                 	db	231
    47  003D7A  E7                 	db	231
    48  003D7B  E7                 	db	231
    49                           
    50                           ;initializer for _TX_ADDRESS
    51  003D7C  E7                 	db	231
    52  003D7D  E7                 	db	231
    53  003D7E  E7                 	db	231
    54  003D7F  E7                 	db	231
    55  0000                     _LATA	set	3977
    56  0000                     _LATAbits	set	3977
    57  0000                     _LATB	set	3978
    58  0000                     _LATC	set	3979
    59  0000                     _SSP1ADD	set	4040
    60  0000                     _SSP1BUF	set	4041
    61  0000                     _SSP1CON1bits	set	4038
    62  0000                     _SSP1STATbits	set	4039
    63  0000                     _TRISA	set	3986
    64  0000                     _TRISB	set	3987
    65  0000                     _TRISC	set	3988
    66                           
    67                           ; #config settings
    68  0000                     
    69                           	psect	cinit
    70  003E0E                     __pcinit:
    71                           	opt stack 0
    72  003E0E                     start_initialization:
    73                           	opt stack 0
    74  003E0E                     __initialization:
    75                           	opt stack 0
    76                           
    77                           ; Clear objects allocated to COMRAM (67 bytes)
    78  003E0E  EE00  F001         	lfsr	0,__pbssCOMRAM
    79  003E12  0E43               	movlw	67
    80  003E14                     clear_0:
    81  003E14  6AEE               	clrf	postinc0,c
    82  003E16  06E8               	decf	wreg,f,c
    83  003E18  E1FD               	bnz	clear_0
    84                           
    85                           ; Initialize objects allocated to COMRAM (14 bytes)
    86                           ; load TBLPTR registers with __pidataCOMRAM
    87  003E1A  0E72               	movlw	low __pidataCOMRAM
    88  003E1C  6EF6               	movwf	tblptrl,c
    89  003E1E  0E3D               	movlw	high __pidataCOMRAM
    90  003E20  6EF7               	movwf	tblptrh,c
    91  003E22  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    92  003E24  6EF8               	movwf	tblptru,c
    93  003E26  EE00  F044         	lfsr	0,__pdataCOMRAM
    94  003E2A  EE10 F00E          	lfsr	1,14
    95  003E2E                     copy_data0:
    96  003E2E  0009               	tblrd		*+
    97  003E30  CFF5 FFEE          	movff	tablat,postinc0
    98  003E34  50E5               	movf	postdec1,w,c
    99  003E36  50E1               	movf	fsr1l,w,c
   100  003E38  E1FA               	bnz	copy_data0
   101  003E3A                     end_of_initialization:
   102                           	opt stack 0
   103  003E3A                     __end_of__initialization:
   104                           	opt stack 0
   105  003E3A  0100               	movlb	0
   106  003E3C  EF76  F01F         	goto	_main	;jump to C main() function
   107                           tblptru	equ	0xFF8
   108                           tblptrh	equ	0xFF7
   109                           tblptrl	equ	0xFF6
   110                           tablat	equ	0xFF5
   111                           postinc0	equ	0xFEE
   112                           wreg	equ	0xFE8
   113                           postdec1	equ	0xFE5
   114                           fsr1l	equ	0xFE1
   115                           
   116                           	psect	bssCOMRAM
   117  000001                     __pbssCOMRAM:
   118                           	opt stack 0
   119  000001                     _dataBufIn:
   120                           	opt stack 0
   121  000001                     	ds	32
   122  000021                     _dataBufOut:
   123                           	opt stack 0
   124  000021                     	ds	32
   125  000041                     _count:
   126                           	opt stack 0
   127  000041                     	ds	2
   128  000043                     _SETUP_RETR_CURR:
   129                           	opt stack 0
   130  000043                     	ds	1
   131                           tblptru	equ	0xFF8
   132                           tblptrh	equ	0xFF7
   133                           tblptrl	equ	0xFF6
   134                           tablat	equ	0xFF5
   135                           postinc0	equ	0xFEE
   136                           wreg	equ	0xFE8
   137                           postdec1	equ	0xFE5
   138                           fsr1l	equ	0xFE1
   139                           
   140                           	psect	dataCOMRAM
   141  000044                     __pdataCOMRAM:
   142                           	opt stack 0
   143  000044                     _CONFIG_CURR:
   144                           	opt stack 0
   145  000044                     	ds	1
   146  000045                     _EN_RXADDR_CURR:
   147                           	opt stack 0
   148  000045                     	ds	1
   149  000046                     _RF_CH_CURR:
   150                           	opt stack 0
   151  000046                     	ds	1
   152  000047                     _RF_SETUP_CURR:
   153                           	opt stack 0
   154  000047                     	ds	1
   155  000048                     _RX_PW_P0_CURR:
   156                           	opt stack 0
   157  000048                     	ds	1
   158  000049                     _SETUP_AW_CURR:
   159                           	opt stack 0
   160  000049                     	ds	1
   161  00004A                     _RX_ADDRESS:
   162                           	opt stack 0
   163  00004A                     	ds	4
   164  00004E                     _TX_ADDRESS:
   165                           	opt stack 0
   166  00004E                     	ds	4
   167                           tblptru	equ	0xFF8
   168                           tblptrh	equ	0xFF7
   169                           tblptrl	equ	0xFF6
   170                           tablat	equ	0xFF5
   171                           postinc0	equ	0xFEE
   172                           wreg	equ	0xFE8
   173                           postdec1	equ	0xFE5
   174                           fsr1l	equ	0xFE1
   175                           
   176                           	psect	cstackCOMRAM
   177  000052                     __pcstackCOMRAM:
   178                           	opt stack 0
   179  000052                     spiWrite@data:
   180                           	opt stack 0
   181  000052                     delay10ms@ms_multi:
   182                           	opt stack 0
   183                           
   184                           ; 2 bytes @ 0x0
   185  000052                     	ds	1
   186  000053                     nrfTX@data:
   187                           	opt stack 0
   188  000053                     nrfSetTXAddr@addr:
   189                           	opt stack 0
   190  000053                     nrfSetRXAddr@addr:
   191                           	opt stack 0
   192                           
   193                           ; 2 bytes @ 0x1
   194  000053                     	ds	1
   195  000054                     ??_delay10ms:
   196                           
   197                           ; 0 bytes @ 0x2
   198  000054                     	ds	1
   199  000055                     nrfSetRXAddr@addrXX:
   200                           	opt stack 0
   201  000055                     nrfSetTXAddr@i:
   202                           	opt stack 0
   203  000055                     delay10ms@i:
   204                           	opt stack 0
   205                           
   206                           ; 2 bytes @ 0x3
   207  000055                     	ds	1
   208  000056                     nrfSetRXAddr@i:
   209                           	opt stack 0
   210                           
   211                           ; 2 bytes @ 0x4
   212  000056                     	ds	2
   213  000058                     main@i:
   214                           	opt stack 0
   215                           
   216                           ; 2 bytes @ 0x6
   217  000058                     	ds	2
   218                           tblptru	equ	0xFF8
   219                           tblptrh	equ	0xFF7
   220                           tblptrl	equ	0xFF6
   221                           tablat	equ	0xFF5
   222                           postinc0	equ	0xFEE
   223                           wreg	equ	0xFE8
   224                           postdec1	equ	0xFE5
   225                           fsr1l	equ	0xFE1
   226                           
   227 ;;
   228 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   229 ;;
   230 ;; *************** function _main *****************
   231 ;; Defined at:
   232 ;;		line 179 in file "main.c"
   233 ;; Parameters:    Size  Location     Type
   234 ;;		None
   235 ;; Auto vars:     Size  Location     Type
   236 ;;  i               2    6[COMRAM] int 
   237 ;; Return value:  Size  Location     Type
   238 ;;		None               void
   239 ;; Registers used:
   240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   241 ;; Tracked objects:
   242 ;;		On entry : 0/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   246 ;;      Params:         0       0       0       0
   247 ;;      Locals:         2       0       0       0
   248 ;;      Temps:          0       0       0       0
   249 ;;      Totals:         2       0       0       0
   250 ;;Total ram usage:        2 bytes
   251 ;; Hardware stack levels required when called:    3
   252 ;; This function calls:
   253 ;;		_delay10ms
   254 ;;		_nrfConfig
   255 ;;		_nrfTX
   256 ;;		_portConfig
   257 ;;		_spiConfig_1
   258 ;;		_spiWrite
   259 ;; This function is called by:
   260 ;;		Startup code after reset
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264                           	psect	text0
   265  003EEC                     __ptext0:
   266                           	opt stack 0
   267  003EEC                     _main:
   268                           	opt stack 28
   269                           
   270                           ;main.c: 181: portConfig();
   271                           
   272                           ;incstack = 0
   273  003EEC  ECC0  F01E         	call	_portConfig	;wreg free
   274                           
   275                           ;main.c: 183: spiConfig_1();
   276  003EF0  ECDF  F01E         	call	_spiConfig_1	;wreg free
   277                           
   278                           ;main.c: 185: nrfConfig();
   279  003EF4  ECB2  F01F         	call	_nrfConfig	;wreg free
   280  003EF8                     l789:
   281                           
   282                           ;main.c: 189: nrfTX(count);
   283  003EF8  5041               	movf	_count,w,c
   284  003EFA  ECF2  F01E         	call	_nrfTX
   285                           
   286                           ;main.c: 190: count++;
   287  003EFE  4A41               	infsnz	_count,f,c
   288  003F00  2A42               	incf	_count+1,f,c
   289                           
   290                           ;main.c: 193: int i = 0;
   291  003F02  0E00               	movlw	0
   292  003F04  6E59               	movwf	main@i+1,c
   293  003F06  0E00               	movlw	0
   294  003F08  6E58               	movwf	main@i,c
   295                           
   296                           ;main.c: 194: for (i=0;i<5;i++) {
   297  003F0A  0E00               	movlw	0
   298  003F0C  6E59               	movwf	main@i+1,c
   299  003F0E  0E00               	movlw	0
   300  003F10  6E58               	movwf	main@i,c
   301  003F12  5059               	movf	main@i+1,w,c
   302  003F14  0A80               	xorlw	128
   303  003F16  0F80               	addlw	-128
   304  003F18  0E05               	movlw	5
   305  003F1A  B4D8               	btfsc	status,2,c
   306  003F1C  5C58               	subwf	main@i,w,c
   307  003F1E  B0D8               	btfsc	status,0,c
   308  003F20  D014               	goto	l811
   309                           
   310                           ;main.c: 195: if (i>2) {
   311  003F22  5059               	movf	main@i+1,w,c
   312  003F24  0A80               	xorlw	128
   313  003F26  0F80               	addlw	-128
   314  003F28  0E03               	movlw	3
   315  003F2A  B4D8               	btfsc	status,2,c
   316  003F2C  5C58               	subwf	main@i,w,c
   317  003F2E  A0D8               	btfss	status,0,c
   318  003F30  D002               	goto	l70
   319                           
   320                           ;main.c: 196: LATAbits.LATA0 = 1;
   321  003F32  8089               	bsf	3977,0,c	;volatile
   322                           
   323                           ;main.c: 197: } else {
   324  003F34  D001               	goto	l805
   325  003F36                     l70:
   326                           
   327                           ;main.c: 198: LATAbits.LATA0 = 0;
   328  003F36  9089               	bcf	3977,0,c	;volatile
   329  003F38                     l805:
   330                           
   331                           ;main.c: 199: }
   332                           ;main.c: 200: delay10ms(20);
   333  003F38  0E00               	movlw	0
   334  003F3A  6E53               	movwf	delay10ms@ms_multi+1,c
   335  003F3C  0E14               	movlw	20
   336  003F3E  6E52               	movwf	delay10ms@ms_multi,c
   337  003F40  EC58  F01F         	call	_delay10ms	;wreg free
   338  003F44  4A58               	infsnz	main@i,f,c
   339  003F46  2A59               	incf	main@i+1,f,c
   340  003F48  D7E4               	goto	L1
   341  003F4A                     l811:
   342                           
   343                           ;main.c: 201: }
   344                           ;main.c: 204: spiWrite(0x20|0x07);
   345  003F4A  0E27               	movlw	39
   346  003F4C  ECCD  F01E         	call	_spiWrite
   347                           
   348                           ;main.c: 205: spiWrite(0b01110000);
   349  003F50  0E70               	movlw	112
   350  003F52  ECCD  F01E         	call	_spiWrite
   351                           
   352                           ;main.c: 207: delay10ms(20);
   353  003F56  0E00               	movlw	0
   354  003F58  6E53               	movwf	delay10ms@ms_multi+1,c
   355  003F5A  0E14               	movlw	20
   356  003F5C  6E52               	movwf	delay10ms@ms_multi,c
   357  003F5E  EC58  F01F         	call	_delay10ms	;wreg free
   358                           
   359                           ;main.c: 208: }
   360  003F62  D7CA               	goto	l789
   361  003F64                     __end_of_main:
   362                           	opt stack 0
   363                           tblptru	equ	0xFF8
   364                           tblptrh	equ	0xFF7
   365                           tblptrl	equ	0xFF6
   366                           tablat	equ	0xFF5
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           postdec1	equ	0xFE5
   370                           fsr1l	equ	0xFE1
   371                           status	equ	0xFD8
   372                           
   373 ;; *************** function _spiConfig_1 *****************
   374 ;; Defined at:
   375 ;;		line 228 in file "main.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;		None
   380 ;; Return value:  Size  Location     Type
   381 ;;		None               void
   382 ;; Registers used:
   383 ;;		wreg, status,2
   384 ;; Tracked objects:
   385 ;;		On entry : 0/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   389 ;;      Params:         0       0       0       0
   390 ;;      Locals:         0       0       0       0
   391 ;;      Temps:          0       0       0       0
   392 ;;      Totals:         0       0       0       0
   393 ;;Total ram usage:        0 bytes
   394 ;; Hardware stack levels used:    1
   395 ;; This function calls:
   396 ;;		Nothing
   397 ;; This function is called by:
   398 ;;		_main
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           	psect	text1
   403  003DBE                     __ptext1:
   404                           	opt stack 0
   405  003DBE                     _spiConfig_1:
   406                           	opt stack 30
   407                           
   408                           ;main.c: 229: SSP1CON1bits.CKP = 0;
   409                           
   410                           ;incstack = 0
   411  003DBE  98C6               	bcf	4038,4,c	;volatile
   412                           
   413                           ;main.c: 230: SSP1STATbits.CKE = 1;
   414  003DC0  8CC7               	bsf	4039,6,c	;volatile
   415                           
   416                           ;main.c: 231: SSP1STATbits.SMP = 1;
   417  003DC2  8EC7               	bsf	4039,7,c	;volatile
   418                           
   419                           ;main.c: 232: SSP1ADD = 0b00111111;
   420  003DC4  0E3F               	movlw	63
   421  003DC6  6EC8               	movwf	4040,c	;volatile
   422                           
   423                           ;main.c: 233: SSP1CON1bits.SSPM = 0b1010;
   424  003DC8  50C6               	movf	4038,w,c	;volatile
   425  003DCA  0BF0               	andlw	-16
   426  003DCC  090A               	iorlw	10
   427  003DCE  6EC6               	movwf	4038,c	;volatile
   428                           
   429                           ;main.c: 235: SSP1CON1bits.SSPEN = 1;
   430  003DD0  8AC6               	bsf	4038,5,c	;volatile
   431                           
   432                           ;main.c: 236: LATAbits.LATA2 = 1;
   433  003DD2  8489               	bsf	3977,2,c	;volatile
   434                           
   435                           ;main.c: 237: _delay((unsigned long)((100)*(64000000/4000000.0)));
   436  003DD4  0EE4               	movlw	228
   437  003DD6                     u107:
   438  003DD6  D000               	nop2	
   439  003DD8  D000               	nop2	
   440  003DDA  2EE8               	decfsz	wreg,f,c
   441  003DDC  D7FC               	goto	u107
   442  003DDE  D000               	nop2		;nop
   443  003DE0  D000               	nop2		;nop
   444  003DE2  0012               	return	
   445  003DE4                     __end_of_spiConfig_1:
   446                           	opt stack 0
   447                           tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           postinc0	equ	0xFEE
   452                           wreg	equ	0xFE8
   453                           postdec1	equ	0xFE5
   454                           fsr1l	equ	0xFE1
   455                           status	equ	0xFD8
   456                           
   457 ;; *************** function _portConfig *****************
   458 ;; Defined at:
   459 ;;		line 214 in file "main.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;		None               void
   466 ;; Registers used:
   467 ;;		wreg, status,2
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   473 ;;      Params:         0       0       0       0
   474 ;;      Locals:         0       0       0       0
   475 ;;      Temps:          0       0       0       0
   476 ;;      Totals:         0       0       0       0
   477 ;;Total ram usage:        0 bytes
   478 ;; Hardware stack levels used:    1
   479 ;; This function calls:
   480 ;;		Nothing
   481 ;; This function is called by:
   482 ;;		_main
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           	psect	text2
   487  003D80                     __ptext2:
   488                           	opt stack 0
   489  003D80                     _portConfig:
   490                           	opt stack 30
   491                           
   492                           ;main.c: 215: LATA = 0x00;
   493                           
   494                           ;incstack = 0
   495  003D80  0E00               	movlw	0
   496  003D82  6E89               	movwf	3977,c	;volatile
   497                           
   498                           ;main.c: 216: LATB = 0x00;
   499  003D84  0E00               	movlw	0
   500  003D86  6E8A               	movwf	3978,c	;volatile
   501                           
   502                           ;main.c: 217: LATC = 0x00;
   503  003D88  0E00               	movlw	0
   504  003D8A  6E8B               	movwf	3979,c	;volatile
   505                           
   506                           ;main.c: 219: TRISA = 0b00001000;
   507  003D8C  0E08               	movlw	8
   508  003D8E  6E92               	movwf	3986,c	;volatile
   509                           
   510                           ;main.c: 220: TRISB = 0b00000000;
   511  003D90  0E00               	movlw	0
   512  003D92  6E93               	movwf	3987,c	;volatile
   513                           
   514                           ;main.c: 221: TRISC = 0b00010000;
   515  003D94  0E10               	movlw	16
   516  003D96  6E94               	movwf	3988,c	;volatile
   517  003D98  0012               	return	
   518  003D9A                     __end_of_portConfig:
   519                           	opt stack 0
   520                           tblptru	equ	0xFF8
   521                           tblptrh	equ	0xFF7
   522                           tblptrl	equ	0xFF6
   523                           tablat	equ	0xFF5
   524                           postinc0	equ	0xFEE
   525                           wreg	equ	0xFE8
   526                           postdec1	equ	0xFE5
   527                           fsr1l	equ	0xFE1
   528                           status	equ	0xFD8
   529                           
   530 ;; *************** function _nrfTX *****************
   531 ;; Defined at:
   532 ;;		line 345 in file "main.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;  data            1    wreg     unsigned char 
   535 ;; Auto vars:     Size  Location     Type
   536 ;;  data            1    1[COMRAM] unsigned char 
   537 ;; Return value:  Size  Location     Type
   538 ;;		None               void
   539 ;; Registers used:
   540 ;;		wreg, status,2, cstack
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   546 ;;      Params:         0       0       0       0
   547 ;;      Locals:         1       0       0       0
   548 ;;      Temps:          0       0       0       0
   549 ;;      Totals:         1       0       0       0
   550 ;;Total ram usage:        1 bytes
   551 ;; Hardware stack levels used:    1
   552 ;; Hardware stack levels required when called:    1
   553 ;; This function calls:
   554 ;;		_spiWrite
   555 ;; This function is called by:
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           	psect	text3
   561  003DE4                     __ptext3:
   562                           	opt stack 0
   563  003DE4                     _nrfTX:
   564                           	opt stack 29
   565                           
   566                           ;incstack = 0
   567                           ;nrfTX@data stored from wreg
   568  003DE4  6E53               	movwf	nrfTX@data,c
   569                           
   570                           ;main.c: 346: spiWrite(0xA0);
   571  003DE6  0EA0               	movlw	160
   572  003DE8  ECCD  F01E         	call	_spiWrite
   573                           
   574                           ;main.c: 347: spiWrite(data);
   575  003DEC  5053               	movf	nrfTX@data,w,c
   576  003DEE  ECCD  F01E         	call	_spiWrite
   577                           
   578                           ;main.c: 348: _delay((unsigned long)((20)*(64000000/4000000.0)));
   579  003DF2  0E6A               	movlw	106
   580  003DF4                     u117:
   581  003DF4  2EE8               	decfsz	wreg,f,c
   582  003DF6  D7FE               	goto	u117
   583  003DF8  D000               	nop2		;nop
   584                           
   585                           ;main.c: 350: LATAbits.LATA1 = 1;
   586  003DFA  8289               	bsf	3977,1,c	;volatile
   587                           
   588                           ;main.c: 351: _delay((unsigned long)((15)*(64000000/4000000.0)));
   589  003DFC  0E50               	movlw	80
   590  003DFE                     u127:
   591  003DFE  2EE8               	decfsz	wreg,f,c
   592  003E00  D7FE               	goto	u127
   593                           
   594                           ;main.c: 352: LATAbits.LATA1 = 0;
   595  003E02  9289               	bcf	3977,1,c	;volatile
   596                           
   597                           ;main.c: 353: _delay((unsigned long)((20)*(64000000/4000000.0)));
   598  003E04  0E6A               	movlw	106
   599  003E06                     u137:
   600  003E06  2EE8               	decfsz	wreg,f,c
   601  003E08  D7FE               	goto	u137
   602  003E0A  D000               	nop2		;nop
   603  003E0C  0012               	return	
   604  003E0E                     __end_of_nrfTX:
   605                           	opt stack 0
   606                           tblptru	equ	0xFF8
   607                           tblptrh	equ	0xFF7
   608                           tblptrl	equ	0xFF6
   609                           tablat	equ	0xFF5
   610                           postinc0	equ	0xFEE
   611                           wreg	equ	0xFE8
   612                           postdec1	equ	0xFE5
   613                           fsr1l	equ	0xFE1
   614                           status	equ	0xFD8
   615                           
   616 ;; *************** function _nrfConfig *****************
   617 ;; Defined at:
   618 ;;		line 243 in file "main.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;		None               void
   625 ;; Registers used:
   626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   632 ;;      Params:         0       0       0       0
   633 ;;      Locals:         0       0       0       0
   634 ;;      Temps:          0       0       0       0
   635 ;;      Totals:         0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels used:    1
   638 ;; Hardware stack levels required when called:    2
   639 ;; This function calls:
   640 ;;		_nrfSetRXAddr
   641 ;;		_nrfSetTXAddr
   642 ;;		_spiWrite
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text4
   649  003F64                     __ptext4:
   650                           	opt stack 0
   651  003F64                     _nrfConfig:
   652                           	opt stack 28
   653                           
   654                           ;main.c: 244: spiWrite(0x20|0x00);
   655                           
   656                           ;incstack = 0
   657  003F64  0E20               	movlw	32
   658  003F66  ECCD  F01E         	call	_spiWrite
   659                           
   660                           ;main.c: 245: spiWrite(CONFIG_CURR);
   661  003F6A  5044               	movf	_CONFIG_CURR,w,c
   662  003F6C  ECCD  F01E         	call	_spiWrite
   663                           
   664                           ;main.c: 246: spiWrite(0x20|0x02);
   665  003F70  0E22               	movlw	34
   666  003F72  ECCD  F01E         	call	_spiWrite
   667                           
   668                           ;main.c: 247: spiWrite(EN_RXADDR_CURR);
   669  003F76  5045               	movf	_EN_RXADDR_CURR,w,c
   670  003F78  ECCD  F01E         	call	_spiWrite
   671                           
   672                           ;main.c: 248: spiWrite(0x20|0x01);
   673  003F7C  0E21               	movlw	33
   674  003F7E  ECCD  F01E         	call	_spiWrite
   675                           
   676                           ;main.c: 249: spiWrite(0b00000000);
   677  003F82  0E00               	movlw	0
   678  003F84  ECCD  F01E         	call	_spiWrite
   679                           
   680                           ;main.c: 250: spiWrite(0x20|0x03);
   681  003F88  0E23               	movlw	35
   682  003F8A  ECCD  F01E         	call	_spiWrite
   683                           
   684                           ;main.c: 251: spiWrite(SETUP_AW_CURR);
   685  003F8E  5049               	movf	_SETUP_AW_CURR,w,c
   686  003F90  ECCD  F01E         	call	_spiWrite
   687                           
   688                           ;main.c: 252: spiWrite(0x20|0x04);
   689  003F94  0E24               	movlw	36
   690  003F96  ECCD  F01E         	call	_spiWrite
   691                           
   692                           ;main.c: 253: spiWrite(SETUP_RETR_CURR);
   693  003F9A  5043               	movf	_SETUP_RETR_CURR,w,c
   694  003F9C  ECCD  F01E         	call	_spiWrite
   695                           
   696                           ;main.c: 254: spiWrite(0x20|0x11);
   697  003FA0  0E31               	movlw	49
   698  003FA2  ECCD  F01E         	call	_spiWrite
   699                           
   700                           ;main.c: 255: spiWrite(RX_PW_P0_CURR);
   701  003FA6  5048               	movf	_RX_PW_P0_CURR,w,c
   702  003FA8  ECCD  F01E         	call	_spiWrite
   703                           
   704                           ;main.c: 256: spiWrite(0x20|0x12);
   705  003FAC  0E32               	movlw	50
   706  003FAE  ECCD  F01E         	call	_spiWrite
   707                           
   708                           ;main.c: 257: spiWrite(RX_PW_P0_CURR);
   709  003FB2  5048               	movf	_RX_PW_P0_CURR,w,c
   710  003FB4  ECCD  F01E         	call	_spiWrite
   711                           
   712                           ;main.c: 258: nrfSetTXAddr(TX_ADDRESS);
   713  003FB8  0E00               	movlw	high _TX_ADDRESS
   714  003FBA  6E54               	movwf	nrfSetTXAddr@addr+1,c
   715  003FBC  0E4E               	movlw	low _TX_ADDRESS
   716  003FBE  6E53               	movwf	nrfSetTXAddr@addr,c
   717  003FC0  EC20  F01F         	call	_nrfSetTXAddr	;wreg free
   718                           
   719                           ;main.c: 259: nrfSetRXAddr(0x0A,RX_ADDRESS);
   720  003FC4  0E00               	movlw	high _RX_ADDRESS
   721  003FC6  6E54               	movwf	nrfSetRXAddr@addr+1,c
   722  003FC8  0E4A               	movlw	low _RX_ADDRESS
   723  003FCA  6E53               	movwf	nrfSetRXAddr@addr,c
   724  003FCC  0E0A               	movlw	10
   725  003FCE  EC3B  F01F         	call	_nrfSetRXAddr
   726                           
   727                           ;main.c: 260: nrfSetRXAddr(0x0B,RX_ADDRESS);
   728  003FD2  0E00               	movlw	high _RX_ADDRESS
   729  003FD4  6E54               	movwf	nrfSetRXAddr@addr+1,c
   730  003FD6  0E4A               	movlw	low _RX_ADDRESS
   731  003FD8  6E53               	movwf	nrfSetRXAddr@addr,c
   732  003FDA  0E0B               	movlw	11
   733  003FDC  EC3B  F01F         	call	_nrfSetRXAddr
   734                           
   735                           ;main.c: 261: spiWrite(0x20|0x05);
   736  003FE0  0E25               	movlw	37
   737  003FE2  ECCD  F01E         	call	_spiWrite
   738                           
   739                           ;main.c: 262: spiWrite(RF_CH_CURR);
   740  003FE6  5046               	movf	_RF_CH_CURR,w,c
   741  003FE8  ECCD  F01E         	call	_spiWrite
   742                           
   743                           ;main.c: 263: spiWrite(0x20|0x06);
   744  003FEC  0E26               	movlw	38
   745  003FEE  ECCD  F01E         	call	_spiWrite
   746                           
   747                           ;main.c: 264: spiWrite(RF_SETUP_CURR);
   748  003FF2  5047               	movf	_RF_SETUP_CURR,w,c
   749  003FF4  ECCD  F01E         	call	_spiWrite
   750                           
   751                           ;main.c: 265: spiWrite(0xE1);
   752  003FF8  0EE1               	movlw	225
   753  003FFA  ECCD  F01E         	call	_spiWrite
   754  003FFE  0012               	return	
   755  004000                     __end_of_nrfConfig:
   756                           	opt stack 0
   757                           tblptru	equ	0xFF8
   758                           tblptrh	equ	0xFF7
   759                           tblptrl	equ	0xFF6
   760                           tablat	equ	0xFF5
   761                           postinc0	equ	0xFEE
   762                           wreg	equ	0xFE8
   763                           postdec1	equ	0xFE5
   764                           fsr1l	equ	0xFE1
   765                           status	equ	0xFD8
   766                           
   767 ;; *************** function _nrfSetTXAddr *****************
   768 ;; Defined at:
   769 ;;		line 272 in file "main.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;  addr            2    1[COMRAM] PTR unsigned char 
   772 ;;		 -> TX_ADDRESS(4), 
   773 ;; Auto vars:     Size  Location     Type
   774 ;;  i               2    3[COMRAM] int 
   775 ;; Return value:  Size  Location     Type
   776 ;;		None               void
   777 ;; Registers used:
   778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   784 ;;      Params:         2       0       0       0
   785 ;;      Locals:         2       0       0       0
   786 ;;      Temps:          0       0       0       0
   787 ;;      Totals:         4       0       0       0
   788 ;;Total ram usage:        4 bytes
   789 ;; Hardware stack levels used:    1
   790 ;; Hardware stack levels required when called:    1
   791 ;; This function calls:
   792 ;;		_spiWrite
   793 ;; This function is called by:
   794 ;;		_nrfConfig
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           	psect	text5
   799  003E40                     __ptext5:
   800                           	opt stack 0
   801  003E40                     _nrfSetTXAddr:
   802                           	opt stack 28
   803                           
   804                           ;main.c: 273: spiWrite(0x20|0x10);
   805                           
   806                           ;incstack = 0
   807  003E40  0E30               	movlw	48
   808  003E42  ECCD  F01E         	call	_spiWrite
   809                           
   810                           ;main.c: 275: int i;
   811                           ;main.c: 276: for (i=0;i<4;i++) {
   812  003E46  0E00               	movlw	0
   813  003E48  6E56               	movwf	nrfSetTXAddr@i+1,c
   814  003E4A  0E00               	movlw	0
   815  003E4C  6E55               	movwf	nrfSetTXAddr@i,c
   816  003E4E  5056               	movf	nrfSetTXAddr@i+1,w,c
   817  003E50  0A80               	xorlw	128
   818  003E52  0F80               	addlw	-128
   819  003E54  0E04               	movlw	4
   820  003E56  B4D8               	btfsc	status,2,c
   821  003E58  5C55               	subwf	nrfSetTXAddr@i,w,c
   822  003E5A  B0D8               	btfsc	status,0,c
   823  003E5C  0012               	return	
   824                           
   825                           ;main.c: 277: spiWrite(addr[i]);
   826  003E5E  5055               	movf	nrfSetTXAddr@i,w,c
   827  003E60  2453               	addwf	nrfSetTXAddr@addr,w,c
   828  003E62  6ED9               	movwf	fsr2l,c
   829  003E64  5056               	movf	nrfSetTXAddr@i+1,w,c
   830  003E66  2054               	addwfc	nrfSetTXAddr@addr+1,w,c
   831  003E68  6EDA               	movwf	fsr2h,c
   832  003E6A  50DF               	movf	indf2,w,c
   833  003E6C  ECCD  F01E         	call	_spiWrite
   834  003E70  4A55               	infsnz	nrfSetTXAddr@i,f,c
   835  003E72  2A56               	incf	nrfSetTXAddr@i+1,f,c
   836  003E74  D7EC               	goto	L2
   837  003E76                     __end_of_nrfSetTXAddr:
   838                           	opt stack 0
   839                           tblptru	equ	0xFF8
   840                           tblptrh	equ	0xFF7
   841                           tblptrl	equ	0xFF6
   842                           tablat	equ	0xFF5
   843                           postinc0	equ	0xFEE
   844                           wreg	equ	0xFE8
   845                           postdec1	equ	0xFE5
   846                           fsr1l	equ	0xFE1
   847                           indf2	equ	0xFDF
   848                           fsr2h	equ	0xFDA
   849                           fsr2l	equ	0xFD9
   850                           status	equ	0xFD8
   851                           
   852 ;; *************** function _nrfSetRXAddr *****************
   853 ;; Defined at:
   854 ;;		line 286 in file "main.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;  addrXX          1    wreg     unsigned char 
   857 ;;  addr            2    1[COMRAM] PTR unsigned char 
   858 ;;		 -> RX_ADDRESS(4), 
   859 ;; Auto vars:     Size  Location     Type
   860 ;;  addrXX          1    3[COMRAM] unsigned char 
   861 ;;  i               2    4[COMRAM] int 
   862 ;; Return value:  Size  Location     Type
   863 ;;		None               void
   864 ;; Registers used:
   865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   871 ;;      Params:         2       0       0       0
   872 ;;      Locals:         3       0       0       0
   873 ;;      Temps:          0       0       0       0
   874 ;;      Totals:         5       0       0       0
   875 ;;Total ram usage:        5 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    1
   878 ;; This function calls:
   879 ;;		_spiWrite
   880 ;; This function is called by:
   881 ;;		_nrfConfig
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text6
   886  003E76                     __ptext6:
   887                           	opt stack 0
   888  003E76                     _nrfSetRXAddr:
   889                           	opt stack 28
   890                           
   891                           ;incstack = 0
   892                           ;nrfSetRXAddr@addrXX stored from wreg
   893  003E76  6E55               	movwf	nrfSetRXAddr@addrXX,c
   894                           
   895                           ;main.c: 287: spiWrite(0x20|addrXX);
   896  003E78  5055               	movf	nrfSetRXAddr@addrXX,w,c
   897  003E7A  0920               	iorlw	32
   898  003E7C  ECCD  F01E         	call	_spiWrite
   899                           
   900                           ;main.c: 289: int i;
   901                           ;main.c: 290: for (i=0;i<4;i++) {
   902  003E80  0E00               	movlw	0
   903  003E82  6E57               	movwf	nrfSetRXAddr@i+1,c
   904  003E84  0E00               	movlw	0
   905  003E86  6E56               	movwf	nrfSetRXAddr@i,c
   906  003E88  5057               	movf	nrfSetRXAddr@i+1,w,c
   907  003E8A  0A80               	xorlw	128
   908  003E8C  0F80               	addlw	-128
   909  003E8E  0E04               	movlw	4
   910  003E90  B4D8               	btfsc	status,2,c
   911  003E92  5C56               	subwf	nrfSetRXAddr@i,w,c
   912  003E94  B0D8               	btfsc	status,0,c
   913  003E96  0012               	return	
   914                           
   915                           ;main.c: 291: spiWrite(addr[i]);
   916  003E98  5056               	movf	nrfSetRXAddr@i,w,c
   917  003E9A  2453               	addwf	nrfSetRXAddr@addr,w,c
   918  003E9C  6ED9               	movwf	fsr2l,c
   919  003E9E  5057               	movf	nrfSetRXAddr@i+1,w,c
   920  003EA0  2054               	addwfc	nrfSetRXAddr@addr+1,w,c
   921  003EA2  6EDA               	movwf	fsr2h,c
   922  003EA4  50DF               	movf	indf2,w,c
   923  003EA6  ECCD  F01E         	call	_spiWrite
   924  003EAA  4A56               	infsnz	nrfSetRXAddr@i,f,c
   925  003EAC  2A57               	incf	nrfSetRXAddr@i+1,f,c
   926  003EAE  D7EC               	goto	L3
   927  003EB0                     __end_of_nrfSetRXAddr:
   928                           	opt stack 0
   929                           tblptru	equ	0xFF8
   930                           tblptrh	equ	0xFF7
   931                           tblptrl	equ	0xFF6
   932                           tablat	equ	0xFF5
   933                           postinc0	equ	0xFEE
   934                           wreg	equ	0xFE8
   935                           postdec1	equ	0xFE5
   936                           fsr1l	equ	0xFE1
   937                           indf2	equ	0xFDF
   938                           fsr2h	equ	0xFDA
   939                           fsr2l	equ	0xFD9
   940                           status	equ	0xFD8
   941                           
   942 ;; *************** function _spiWrite *****************
   943 ;; Defined at:
   944 ;;		line 311 in file "main.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  data            1    wreg     unsigned char 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  data            1    0[COMRAM] unsigned char 
   949 ;; Return value:  Size  Location     Type
   950 ;;		None               void
   951 ;; Registers used:
   952 ;;		wreg, status,2, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   958 ;;      Params:         0       0       0       0
   959 ;;      Locals:         1       0       0       0
   960 ;;      Temps:          0       0       0       0
   961 ;;      Totals:         1       0       0       0
   962 ;;Total ram usage:        1 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_main
   968 ;;		_nrfConfig
   969 ;;		_nrfSetTXAddr
   970 ;;		_nrfSetRXAddr
   971 ;;		_nrfTX
   972 ;;		_getSTATUS
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text7
   977  003D9A                     __ptext7:
   978                           	opt stack 0
   979  003D9A                     _spiWrite:
   980                           	opt stack 30
   981                           
   982                           ;incstack = 0
   983                           ;spiWrite@data stored from wreg
   984  003D9A  6E52               	movwf	spiWrite@data,c
   985                           
   986                           ;main.c: 313: LATAbits.LATA2 = 0;
   987  003D9C  9489               	bcf	3977,2,c	;volatile
   988                           
   989                           ;main.c: 314: _delay((unsigned long)((20)*(64000000/4000000.0)));
   990  003D9E  0E6A               	movlw	106
   991  003DA0                     u147:
   992  003DA0  2EE8               	decfsz	wreg,f,c
   993  003DA2  D7FE               	goto	u147
   994  003DA4  D000               	nop2		;nop
   995                           
   996                           ;main.c: 315: SSP1BUF = data;
   997  003DA6  C052  FFC9         	movff	spiWrite@data,4041	;volatile
   998                           
   999                           ;main.c: 316: _delay((unsigned long)((40)*(64000000/4000000.0)));
  1000  003DAA  0ED5               	movlw	213
  1001  003DAC                     u157:
  1002  003DAC  2EE8               	decfsz	wreg,f,c
  1003  003DAE  D7FE               	goto	u157
  1004  003DB0  F000               	nop	
  1005                           
  1006                           ;main.c: 317: LATAbits.LATA2 = 1;
  1007  003DB2  8489               	bsf	3977,2,c	;volatile
  1008                           
  1009                           ;main.c: 318: _delay((unsigned long)((20)*(64000000/4000000.0)));
  1010  003DB4  0E6A               	movlw	106
  1011  003DB6                     u167:
  1012  003DB6  2EE8               	decfsz	wreg,f,c
  1013  003DB8  D7FE               	goto	u167
  1014  003DBA  D000               	nop2		;nop
  1015  003DBC  0012               	return	
  1016  003DBE                     __end_of_spiWrite:
  1017                           	opt stack 0
  1018                           tblptru	equ	0xFF8
  1019                           tblptrh	equ	0xFF7
  1020                           tblptrl	equ	0xFF6
  1021                           tablat	equ	0xFF5
  1022                           postinc0	equ	0xFEE
  1023                           wreg	equ	0xFE8
  1024                           postdec1	equ	0xFE5
  1025                           fsr1l	equ	0xFE1
  1026                           indf2	equ	0xFDF
  1027                           fsr2h	equ	0xFDA
  1028                           fsr2l	equ	0xFD9
  1029                           status	equ	0xFD8
  1030                           
  1031 ;; *************** function _delay10ms *****************
  1032 ;; Defined at:
  1033 ;;		line 359 in file "main.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  ms_multi        2    0[COMRAM] int 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  i               2    3[COMRAM] int 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;		None               void
  1040 ;; Registers used:
  1041 ;;		wreg, status,2, status,0
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1047 ;;      Params:         2       0       0       0
  1048 ;;      Locals:         2       0       0       0
  1049 ;;      Temps:          1       0       0       0
  1050 ;;      Totals:         5       0       0       0
  1051 ;;Total ram usage:        5 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text8
  1061  003EB0                     __ptext8:
  1062                           	opt stack 0
  1063  003EB0                     _delay10ms:
  1064                           	opt stack 30
  1065                           
  1066                           ;main.c: 360: int i = 0;
  1067                           
  1068                           ;incstack = 0
  1069  003EB0  0E00               	movlw	0
  1070  003EB2  6E56               	movwf	delay10ms@i+1,c
  1071  003EB4  0E00               	movlw	0
  1072  003EB6  6E55               	movwf	delay10ms@i,c
  1073                           
  1074                           ;main.c: 361: for (i=0;i<ms_multi;i++) {
  1075  003EB8  0E00               	movlw	0
  1076  003EBA  6E56               	movwf	delay10ms@i+1,c
  1077  003EBC  0E00               	movlw	0
  1078  003EBE  6E55               	movwf	delay10ms@i,c
  1079  003EC0  D00A               	goto	l110
  1080  003EC2                     l781:
  1081                           
  1082                           ;main.c: 362: _delay((unsigned long)((11)*(64000000/4000.0)));
  1083  003EC2  0EE5               	movlw	229
  1084  003EC4  6E54               	movwf	??_delay10ms& (0+255),c
  1085  003EC6  0E91               	movlw	145
  1086  003EC8                     u177:
  1087  003EC8  2EE8               	decfsz	wreg,f,c
  1088  003ECA  D7FE               	goto	u177
  1089  003ECC  2E54               	decfsz	??_delay10ms& (0+255),f,c
  1090  003ECE  D7FC               	goto	u177
  1091  003ED0  F000               	nop	
  1092  003ED2  4A55               	infsnz	delay10ms@i,f,c
  1093  003ED4  2A56               	incf	delay10ms@i+1,f,c
  1094  003ED6                     l110:
  1095  003ED6  5056               	movf	delay10ms@i+1,w,c
  1096  003ED8  0A80               	xorlw	128
  1097  003EDA  6E54               	movwf	??_delay10ms& (0+255),c
  1098  003EDC  5052               	movf	delay10ms@ms_multi,w,c
  1099  003EDE  5C55               	subwf	delay10ms@i,w,c
  1100  003EE0  5053               	movf	delay10ms@ms_multi+1,w,c
  1101  003EE2  0A80               	xorlw	128
  1102  003EE4  5854               	subwfb	??_delay10ms& (0+255),w,c
  1103  003EE6  B0D8               	btfsc	status,0,c
  1104  003EE8  0012               	return	
  1105  003EEA  D7EB               	goto	l781
  1106  003EEC                     __end_of_delay10ms:
  1107                           	opt stack 0
  1108  0000                     tblptru	equ	0xFF8
  1109                           tblptrh	equ	0xFF7
  1110                           tblptrl	equ	0xFF6
  1111                           tablat	equ	0xFF5
  1112                           postinc0	equ	0xFEE
  1113                           wreg	equ	0xFE8
  1114                           postdec1	equ	0xFE5
  1115                           fsr1l	equ	0xFE1
  1116                           indf2	equ	0xFDF
  1117                           fsr2h	equ	0xFDA
  1118                           fsr2l	equ	0xFD9
  1119                           status	equ	0xFD8
  1120                           tblptru	equ	0xFF8
  1121                           tblptrh	equ	0xFF7
  1122                           tblptrl	equ	0xFF6
  1123                           tablat	equ	0xFF5
  1124                           postinc0	equ	0xFEE
  1125                           wreg	equ	0xFE8
  1126                           postdec1	equ	0xFE5
  1127                           fsr1l	equ	0xFE1
  1128                           indf2	equ	0xFDF
  1129                           fsr2h	equ	0xFDA
  1130                           fsr2l	equ	0xFD9
  1131                           status	equ	0xFD8
  1132                           
  1133                           	psect	rparam
  1134  0000                     tblptru	equ	0xFF8
  1135                           tblptrh	equ	0xFF7
  1136                           tblptrl	equ	0xFF6
  1137                           tablat	equ	0xFF5
  1138                           postinc0	equ	0xFEE
  1139                           wreg	equ	0xFE8
  1140                           postdec1	equ	0xFE5
  1141                           fsr1l	equ	0xFE1
  1142                           indf2	equ	0xFDF
  1143                           fsr2h	equ	0xFDA
  1144                           fsr2l	equ	0xFD9
  1145                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         67
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8      89
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    nrfSetRXAddr@addr	PTR unsigned char  size(2) Largest target is 4
		 -> RX_ADDRESS(COMRAM[4]), 

    nrfSetTXAddr@addr	PTR unsigned char  size(2) Largest target is 4
		 -> TX_ADDRESS(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _nrfTX->_spiWrite
    _nrfConfig->_nrfSetRXAddr
    _nrfSetTXAddr->_spiWrite
    _nrfSetRXAddr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     515
                                              6 COMRAM     2     2      0
                          _delay10ms
                          _nrfConfig
                              _nrfTX
                         _portConfig
                        _spiConfig_1
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiConfig_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _portConfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nrfTX                                                1     1      0      30
                                              1 COMRAM     1     1      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _nrfConfig                                            0     0      0     309
                       _nrfSetRXAddr
                       _nrfSetTXAddr
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _nrfSetTXAddr                                         4     2      2     118
                                              1 COMRAM     4     2      2
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _nrfSetRXAddr                                         5     3      2     176
                                              1 COMRAM     5     3      2
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay10ms                                            5     3      2     116
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay10ms
   _nrfConfig
     _nrfSetRXAddr
       _spiWrite
     _nrfSetTXAddr
       _spiWrite
     _spiWrite
   _nrfTX
     _spiWrite
   _portConfig
   _spiConfig_1
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      8      59       1       93.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      59       8        0.0%
DATA                 0      0      59      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Sep 22 18:50:50 2014

                     l70 3F36             spiWrite@data 0052               _RX_ADDRESS 004A  
            __CFG_LVP$ON 000000                      l110 3ED6                      l811 3F4A  
                    l805 3F38                      l781 3EC2                      l789 3EF8  
                    u107 3DD6                      u117 3DF4                      u127 3DFE  
                    u137 3E06                      u147 3DA0                      u157 3DAC  
                    u167 3DB6                      u177 3EC8                      wreg 000FE8  
             _TX_ADDRESS 004E                     _LATA 000F89                     _LATB 000F8A  
                   _LATC 000F8B                     _main 3EEC                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9            __CFG_BORV$190 000000  
                   start 0000            __CFG_IESO$OFF 000000                    ?_main 0052  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
         __CFG_FCMEN$OFF 000000                    _count 0041                    _nrfTX 3DE4  
     __CFG_MCLRE$EXTMCLR 000000                    main@i 0058                    tablat 000FF5  
                  status 000FD8           __CFG_HFOFST$ON 000000           __CFG_FOSC$HSHP 000000  
        __initialization 3E0E             __end_of_main 3F64                   ??_main 0058  
          __activetblptr 000000           __CFG_PLLCFG$ON 000000            nrfSetRXAddr@i 0056  
                 ?_nrfTX 0052            nrfSetTXAddr@i 0055           __CFG_WDTEN$OFF 000000  
           ?_spiConfig_1 0052           __CFG_PWRTEN$ON 000000           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000                   clear_0 3E14             __pdataCOMRAM 0044  
       __end_of_spiWrite 3DBE                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 3E3A  
        __CFG_PBADEN$OFF 000000            ?_nrfSetRXAddr 0053            ?_nrfSetTXAddr 0053  
         __pcstackCOMRAM 0052       __size_of_delay10ms 003C            __end_of_nrfTX 3E0E  
         _EN_RXADDR_CURR 0045               _dataBufOut 0021                  ??_nrfTX 0053  
         ??_nrfSetRXAddr 0055           ??_nrfSetTXAddr 0055       __size_of_nrfConfig 009C  
     __CFG_CCP2MX$PORTC1 000000       __CFG_CCP3MX$PORTB5 000000                  _SSP1ADD 000FC8  
                _SSP1BUF 000FC9        __end_of_delay10ms 3EEC         nrfSetRXAddr@addr 0053  
                __Hparam 0000                  __Lparam 0000     __size_of_spiConfig_1 0026  
             delay10ms@i 0055                ?_spiWrite 0052            _RX_PW_P0_CURR 0048  
                __pcinit 3E0E         nrfSetTXAddr@addr 0053                  __ramtop 0300  
                __ptext0 3EEC                  __ptext1 3DBE                  __ptext2 3D80  
                __ptext3 3DE4                  __ptext4 3F64                  __ptext5 3E40  
                __ptext6 3E76                  __ptext7 3D9A                  __ptext8 3EB0  
      __end_of_nrfConfig 4000     end_of_initialization 3E3A               ??_spiWrite 0052  
                postdec1 000FE5                  postinc0 000FEE               _portConfig 3D80  
   __end_of_nrfSetRXAddr 3EB0     __end_of_nrfSetTXAddr 3E76       nrfSetRXAddr@addrXX 0055  
          __pidataCOMRAM 3D72      start_initialization 3E0E              ?_portConfig 0052  
            __pbssCOMRAM 0001                _dataBufIn 0001                _delay10ms 3EB0  
            _CONFIG_CURR 0044            _SETUP_AW_CURR 0049    __size_of_nrfSetRXAddr 003A  
  __size_of_nrfSetTXAddr 0036          _SETUP_RETR_CURR 0043        __size_of_spiWrite 0024  
       __CFG_PRICLKEN$ON 000000           __size_of_nrfTX 002A                _nrfConfig 3F64  
    __size_of_portConfig 001A                 _LATAbits 000F89               ?_delay10ms 0052  
          ??_spiConfig_1 0052             _nrfSetRXAddr 3E76             _nrfSetTXAddr 3E40  
       __CFG_WDTPS$32768 000000            _RF_SETUP_CURR 0047        delay10ms@ms_multi 0052  
              copy_data0 3E2E               ?_nrfConfig 0052                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000        __CFG_P2BMX$PORTB5 000000  
    __end_of_spiConfig_1 3DE4                nrfTX@data 0053             _SSP1CON1bits 000FC6  
          __size_of_main 0078              ??_delay10ms 0054                 _spiWrite 3D9A  
           _SSP1STATbits 000FC7             ??_portConfig 0052              ??_nrfConfig 0058  
     __end_of_portConfig 3D9A              _spiConfig_1 3DBE               _RF_CH_CURR 0046  
      __CFG_T3CMX$PORTC0 000000  
