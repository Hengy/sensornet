

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Sep 24 10:14:27 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F24K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    17  0000                     
    18                           	psect	idataCOMRAM
    19  0000'                    __pidataCOMRAM:
    20                           	opt stack 0
    21                           
    22                           ;initializer for _CONFIG_CURR
    23  0000' 5A                 	db	90
    24                           
    25                           ;initializer for _EN_RXADDR_CURR
    26  0001' 01                 	db	1
    27                           
    28                           ;initializer for _RF_CH_CURR
    29  0002' 69                 	db	105
    30                           
    31                           ;initializer for _RF_SETUP_CURR
    32  0003' 06                 	db	6
    33                           
    34                           ;initializer for _RX_PW_P0_CURR
    35  0004' 01                 	db	1
    36                           
    37                           ;initializer for _SETUP_AW_CURR
    38  0005' 02                 	db	2
    39                           
    40                           ;initializer for _SETUP_RETR_CURR
    41  0006' 20                 	db	32
    42                           
    43                           ;initializer for _RX_ADDRESS
    44  0007' E7                 	db	231
    45  0008' E7                 	db	231
    46  0009' E7                 	db	231
    47  000A' E7                 	db	231
    48                           
    49                           ;initializer for _TX_ADDRESS
    50  000B' E7                 	db	231
    51  000C' E7                 	db	231
    52  000D' E7                 	db	231
    53  000E' E7                 	db	231
    54  0000                     _LATA	set	3977
    55  0000                     _LATAbits	set	3977
    56  0000                     _LATB	set	3978
    57  0000                     _LATC	set	3979
    58  0000                     _SSP1ADD	set	4040
    59  0000                     _SSP1BUF	set	4041
    60  0000                     _SSP1CON1bits	set	4038
    61  0000                     _SSP1STATbits	set	4039
    62  0000                     _TRISA	set	3986
    63  0000                     _TRISB	set	3987
    64  0000                     _TRISC	set	3988
    65                           
    66                           ; #config settings
    67  0000                     
    68                           	psect	cinit
    69  0000'                    __pcinit:
    70                           	opt stack 0
    71  0000'                    start_initialization:
    72                           	opt stack 0
    73  0000'                    __initialization:
    74                           	opt stack 0
    75                           
    76                           ; Clear objects allocated to COMRAM (66 bytes)
    77  0000' EE00' F000'        	lfsr	0,__pbssCOMRAM
    78  0004' 0E42               	movlw	66
    79  0006'                    clear_0:
    80  0006' 6AEE               	clrf	postinc0,c
    81  0008' 06E8               	decf	wreg,f,c
    82  000A' E1FD               	bnz	clear_0
    83                           
    84                           ; Initialize objects allocated to COMRAM (15 bytes)
    85                           ; load TBLPTR registers with __pidataCOMRAM
    86  000C' 0E00'              	movlw	low __pidataCOMRAM
    87  000E' 6EF6               	movwf	tblptrl,c
    88  0010' 0E00'              	movlw	high __pidataCOMRAM
    89  0012' 6EF7               	movwf	tblptrh,c
    90  0014' 0E00'              	movlw	low (__pidataCOMRAM shr (0+16))
    91  0016' 6EF8               	movwf	tblptru,c
    92  0018' EE00' F000'        	lfsr	0,__pdataCOMRAM
    93  001C' EE10 F00F          	lfsr	1,15
    94  0020'                    copy_data0:
    95  0020' 0009               	tblrd		*+
    96  0022' CFF5 FFEE          	movff	tablat,postinc0
    97  0026' 50E5               	movf	postdec1,w,c
    98  0028' 50E1               	movf	fsr1l,w,c
    99  002A' E1FA               	bnz	copy_data0
   100  002C'                    end_of_initialization:
   101                           	opt stack 0
   102  002C'                    __end_of__initialization:
   103                           	opt stack 0
   104  002C' 0100               	movlb	0
   105  002E' EF00' F000'        	goto	_main	;jump to C main() function
   106                           tblptru	equ	0xFF8
   107                           tblptrh	equ	0xFF7
   108                           tblptrl	equ	0xFF6
   109                           tablat	equ	0xFF5
   110                           postinc0	equ	0xFEE
   111                           wreg	equ	0xFE8
   112                           postdec1	equ	0xFE5
   113                           fsr1l	equ	0xFE1
   114                           
   115                           	psect	bssCOMRAM
   116  0000'                    __pbssCOMRAM:
   117                           	opt stack 0
   118  0000'                    _dataBufIn:
   119                           	opt stack 0
   120  0000'                    	ds	32
   121  0020'                    _dataBufOut:
   122                           	opt stack 0
   123  0020'                    	ds	32
   124  0040'                    _EN_AA_CURR:
   125                           	opt stack 0
   126  0040'                    	ds	1
   127  0041'                    _nrfSTATUS:
   128                           	opt stack 0
   129  0041'                    	ds	1
   130                           tblptru	equ	0xFF8
   131                           tblptrh	equ	0xFF7
   132                           tblptrl	equ	0xFF6
   133                           tablat	equ	0xFF5
   134                           postinc0	equ	0xFEE
   135                           wreg	equ	0xFE8
   136                           postdec1	equ	0xFE5
   137                           fsr1l	equ	0xFE1
   138                           
   139                           	psect	dataCOMRAM
   140  0000'                    __pdataCOMRAM:
   141                           	opt stack 0
   142  0000'                    _CONFIG_CURR:
   143                           	opt stack 0
   144  0000'                    	ds	1
   145  0001'                    _EN_RXADDR_CURR:
   146                           	opt stack 0
   147  0001'                    	ds	1
   148  0002'                    _RF_CH_CURR:
   149                           	opt stack 0
   150  0002'                    	ds	1
   151  0003'                    _RF_SETUP_CURR:
   152                           	opt stack 0
   153  0003'                    	ds	1
   154  0004'                    _RX_PW_P0_CURR:
   155                           	opt stack 0
   156  0004'                    	ds	1
   157  0005'                    _SETUP_AW_CURR:
   158                           	opt stack 0
   159  0005'                    	ds	1
   160  0006'                    _SETUP_RETR_CURR:
   161                           	opt stack 0
   162  0006'                    	ds	1
   163  0007'                    _RX_ADDRESS:
   164                           	opt stack 0
   165  0007'                    	ds	4
   166  000B'                    _TX_ADDRESS:
   167                           	opt stack 0
   168  000B'                    	ds	4
   169                           tblptru	equ	0xFF8
   170                           tblptrh	equ	0xFF7
   171                           tblptrl	equ	0xFF6
   172                           tablat	equ	0xFF5
   173                           postinc0	equ	0xFEE
   174                           wreg	equ	0xFE8
   175                           postdec1	equ	0xFE5
   176                           fsr1l	equ	0xFE1
   177                           
   178                           	psect	cstackCOMRAM
   179  0000'                    __pcstackCOMRAM:
   180                           	opt stack 0
   181  0000'                    ?_nrfTX:
   182                           	opt stack 0
   183  0000'                    ?_getSTATUS:
   184  0000'                    ?_spiWrite:
   185                           	opt stack 0
   186  0000'                    ?_spiRead:
   187                           	opt stack 0
   188  0000'                    ?_nrfSetRXAddr:
   189                           	opt stack 0
   190  0000'                    ?_nrfSetTXAddr:
   191                           	opt stack 0
   192  0000'                    delay10ms@ms_multi:
   193                           	opt stack 0
   194                           
   195                           ; 2 bytes @ 0x0
   196  0000'                    	ds	2
   197  0002'                    ??_delay10ms:
   198  0002'                    
   199                           ; 0 bytes @ 0x2
   200  0002'                    	ds	1
   201  0003'                    delay10ms@i:
   202                           	opt stack 0
   203                           
   204                           ; 2 bytes @ 0x3
   205  0003'                    	ds	2
   206  0005'                    main@count:
   207                           	opt stack 0
   208                           
   209                           ; 2 bytes @ 0x5
   210  0005'                    	ds	2
   211  0007'                    main@statusByte:
   212                           	opt stack 0
   213                           
   214                           ; 1 bytes @ 0x7
   215  0007'                    	ds	1
   216                           tblptru	equ	0xFF8
   217                           tblptrh	equ	0xFF7
   218                           tblptrl	equ	0xFF6
   219                           tablat	equ	0xFF5
   220                           postinc0	equ	0xFEE
   221                           wreg	equ	0xFE8
   222                           postdec1	equ	0xFE5
   223                           fsr1l	equ	0xFE1
   224                           
   225 ;;
   226 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   227 ;;
   228 ;; *************** function _main *****************
   229 ;; Defined at:
   230 ;;		line 181 in file "main.c"
   231 ;; Parameters:    Size  Location     Type
   232 ;;		None
   233 ;; Auto vars:     Size  Location     Type
   234 ;;  statusByte      1    7[COMRAM] unsigned char 
   235 ;;  count           2    5[COMRAM] int 
   236 ;; Return value:  Size  Location     Type
   237 ;;		None               void
   238 ;; Registers used:
   239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   240 ;; Tracked objects:
   241 ;;		On entry : 0/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   245 ;;      Params:         0       0       0       0
   246 ;;      Locals:         3       0       0       0
   247 ;;      Temps:          0       0       0       0
   248 ;;      Totals:         3       0       0       0
   249 ;;Total ram usage:        3 bytes
   250 ;; Hardware stack levels required when called:    2
   251 ;; This function calls:
   252 ;;		_delay10ms
   253 ;;		_getSTATUS
   254 ;;		_nrfConfig
   255 ;;		_nrfTX
   256 ;;		_portConfig
   257 ;;		_spiConfig_1
   258 ;;		_spiRead
   259 ;;		_spiWrite
   260 ;; This function is called by:
   261 ;;		Startup code after reset
   262 ;; This function uses a non-reentrant model
   263 ;;
   264                           
   265                           	psect	text0
   266  0000'                    __ptext0:
   267                           	opt stack 0
   268  0000'                    _main:
   269                           	opt stack 29
   270                           
   271                           ;main.c: 183: portConfig();
   272                           
   273                           ;incstack = 0
   274  0000' EC00' F000'        	call	_portConfig	;wreg free
   275                           
   276                           ;main.c: 184: spiConfig_1();
   277  0004' EC00' F000'        	call	_spiConfig_1	;wreg free
   278                           
   279                           ;main.c: 186: nrfConfig();
   280  0008' EC00' F000'        	call	_nrfConfig	;wreg free
   281                           
   282                           ;main.c: 187: delay10ms(1);
   283  000C' 0E00               	movlw	0
   284  000E' 6E01'              	movwf	delay10ms@ms_multi+1,c
   285  0010' 0E01               	movlw	1
   286  0012' 6E00'              	movwf	delay10ms@ms_multi,c
   287  0014' EC00' F000'        	call	_delay10ms	;wreg free
   288                           
   289                           ;main.c: 191: int count = 0;
   290  0018' 0E00               	movlw	0
   291  001A' 6E06'              	movwf	main@count+1,c
   292  001C' 0E00               	movlw	0
   293  001E' 6E05'              	movwf	main@count,c
   294  0020'                    l730:
   295                           
   296                           ;main.c: 194: nrfTX(count);
   297  0020' C005' F000'        	movff	main@count,?_nrfTX
   298  0024' C006' F001'        	movff	main@count+1,?_nrfTX+1
   299  0028' EC00' F000'        	call	_nrfTX	;wreg free
   300                           
   301                           ;main.c: 195: count++;
   302  002C' 4A05'              	infsnz	main@count,f,c
   303  002E' 2A06'              	incf	main@count+1,f,c
   304                           
   305                           ;main.c: 197: unsigned char statusByte = getSTATUS();
   306  0030' EC00' F000'        	call	_getSTATUS	;wreg free
   307  0034' 5000'              	movf	?_getSTATUS,w,c
   308  0036' 6E07'              	movwf	main@statusByte,c
   309                           
   310                           ;main.c: 199: if (statusByte != 0x0E) {
   311  0038' 5007'              	movf	main@statusByte,w,c
   312  003A' 0A0E               	xorlw	14
   313  003C' B4D8               	btfsc	status,2,c
   314  003E' D00E               	goto	l76
   315                           
   316                           ;main.c: 201: LATAbits.LATA0 = 1;
   317  0040' 8089               	bsf	3977,0,c	;volatile
   318                           
   319                           ;main.c: 204: spiWrite(0x20|0x07);
   320  0042' 0E00               	movlw	0
   321  0044' 6E01'              	movwf	?_spiWrite+1,c
   322  0046' 0E27               	movlw	39
   323  0048' 6E00'              	movwf	?_spiWrite,c
   324  004A' EC00' F000'        	call	_spiWrite	;wreg free
   325                           
   326                           ;main.c: 205: spiWrite(0b01110000);
   327  004E' 0E00               	movlw	0
   328  0050' 6E01'              	movwf	?_spiWrite+1,c
   329  0052' 0E70               	movlw	112
   330  0054' 6E00'              	movwf	?_spiWrite,c
   331  0056' EC00' F000'        	call	_spiWrite	;wreg free
   332                           
   333                           ;main.c: 207: LATAbits.LATA0 = 0;
   334  005A' 9089               	bcf	3977,0,c	;volatile
   335  005C'                    l76:
   336                           
   337                           ;main.c: 208: }
   338                           ;main.c: 210: spiWrite(0xE1);
   339  005C' 0E00               	movlw	0
   340  005E' 6E01'              	movwf	?_spiWrite+1,c
   341  0060' 0EE1               	movlw	225
   342  0062' 6E00'              	movwf	?_spiWrite,c
   343  0064' EC00' F000'        	call	_spiWrite	;wreg free
   344                           
   345                           ;main.c: 212: spiWrite(0x00|0x00);
   346  0068' 0E00               	movlw	0
   347  006A' 6E01'              	movwf	?_spiWrite+1,c
   348  006C' 0E00               	movlw	0
   349  006E' 6E00'              	movwf	?_spiWrite,c
   350  0070' EC00' F000'        	call	_spiWrite	;wreg free
   351                           
   352                           ;main.c: 213: spiRead(1);
   353  0074' 0E00               	movlw	0
   354  0076' 6E01'              	movwf	?_spiRead+1,c
   355  0078' 0E01               	movlw	1
   356  007A' 6E00'              	movwf	?_spiRead,c
   357  007C' EC00' F000'        	call	_spiRead	;wreg free
   358                           
   359                           ;main.c: 214: }
   360  0080' D7CF               	goto	l730
   361  0082'                    __end_of_main:
   362                           	opt stack 0
   363                           tblptru	equ	0xFF8
   364                           tblptrh	equ	0xFF7
   365                           tblptrl	equ	0xFF6
   366                           tablat	equ	0xFF5
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           postdec1	equ	0xFE5
   370                           fsr1l	equ	0xFE1
   371                           status	equ	0xFD8
   372                           
   373 ;; *************** function _spiConfig_1 *****************
   374 ;; Defined at:
   375 ;;		line 234 in file "main.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;		None
   380 ;; Return value:  Size  Location     Type
   381 ;;		None               void
   382 ;; Registers used:
   383 ;;		wreg, status,2
   384 ;; Tracked objects:
   385 ;;		On entry : 0/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   389 ;;      Params:         0       0       0       0
   390 ;;      Locals:         0       0       0       0
   391 ;;      Temps:          0       0       0       0
   392 ;;      Totals:         0       0       0       0
   393 ;;Total ram usage:        0 bytes
   394 ;; Hardware stack levels used:    1
   395 ;; This function calls:
   396 ;;		Nothing
   397 ;; This function is called by:
   398 ;;		_main
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           	psect	text1
   403  0000'                    __ptext1:
   404                           	opt stack 0
   405  0000'                    _spiConfig_1:
   406                           	opt stack 30
   407                           
   408                           ;main.c: 235: SSP1CON1bits.CKP = 0;
   409                           
   410                           ;incstack = 0
   411  0000' 98C6               	bcf	4038,4,c	;volatile
   412                           
   413                           ;main.c: 236: SSP1STATbits.CKE = 1;
   414  0002' 8CC7               	bsf	4039,6,c	;volatile
   415                           
   416                           ;main.c: 237: SSP1STATbits.SMP = 1;
   417  0004' 8EC7               	bsf	4039,7,c	;volatile
   418                           
   419                           ;main.c: 238: SSP1ADD = 0b01111111;
   420  0006' 0E7F               	movlw	127
   421  0008' 6EC8               	movwf	4040,c	;volatile
   422                           
   423                           ;main.c: 239: SSP1CON1bits.SSPM = 0b1010;
   424  000A' 50C6               	movf	4038,w,c	;volatile
   425  000C' 0BF0               	andlw	-16
   426  000E' 090A               	iorlw	10
   427  0010' 6EC6               	movwf	4038,c	;volatile
   428                           
   429                           ;main.c: 241: SSP1CON1bits.SSPEN = 1;
   430  0012' 8AC6               	bsf	4038,5,c	;volatile
   431                           
   432                           ;main.c: 242: LATAbits.LATA2 = 1;
   433  0014' 8489               	bsf	3977,2,c	;volatile
   434  0016' 0012               	return	
   435  0018'                    __end_of_spiConfig_1:
   436                           	opt stack 0
   437                           tblptru	equ	0xFF8
   438                           tblptrh	equ	0xFF7
   439                           tblptrl	equ	0xFF6
   440                           tablat	equ	0xFF5
   441                           postinc0	equ	0xFEE
   442                           wreg	equ	0xFE8
   443                           postdec1	equ	0xFE5
   444                           fsr1l	equ	0xFE1
   445                           status	equ	0xFD8
   446                           
   447 ;; *************** function _portConfig *****************
   448 ;; Defined at:
   449 ;;		line 220 in file "main.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;		None
   454 ;; Return value:  Size  Location     Type
   455 ;;		None               void
   456 ;; Registers used:
   457 ;;		wreg, status,2
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   463 ;;      Params:         0       0       0       0
   464 ;;      Locals:         0       0       0       0
   465 ;;      Temps:          0       0       0       0
   466 ;;      Totals:         0       0       0       0
   467 ;;Total ram usage:        0 bytes
   468 ;; Hardware stack levels used:    1
   469 ;; This function calls:
   470 ;;		Nothing
   471 ;; This function is called by:
   472 ;;		_main
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           	psect	text2
   477  0000'                    __ptext2:
   478                           	opt stack 0
   479  0000'                    _portConfig:
   480                           	opt stack 30
   481                           
   482                           ;main.c: 221: TRISA = 0b00001000;
   483                           
   484                           ;incstack = 0
   485  0000' 0E08               	movlw	8
   486  0002' 6E92               	movwf	3986,c	;volatile
   487                           
   488                           ;main.c: 222: TRISB = 0b00000000;
   489  0004' 0E00               	movlw	0
   490  0006' 6E93               	movwf	3987,c	;volatile
   491                           
   492                           ;main.c: 223: TRISC = 0b00010000;
   493  0008' 0E10               	movlw	16
   494  000A' 6E94               	movwf	3988,c	;volatile
   495                           
   496                           ;main.c: 225: LATA = 0b00000100;
   497  000C' 0E04               	movlw	4
   498  000E' 6E89               	movwf	3977,c	;volatile
   499                           
   500                           ;main.c: 226: LATB = 0x00;
   501  0010' 0E00               	movlw	0
   502  0012' 6E8A               	movwf	3978,c	;volatile
   503                           
   504                           ;main.c: 227: LATC = 0x00;
   505  0014' 0E00               	movlw	0
   506  0016' 6E8B               	movwf	3979,c	;volatile
   507  0018' 0012               	return	
   508  001A'                    __end_of_portConfig:
   509                           	opt stack 0
   510                           tblptru	equ	0xFF8
   511                           tblptrh	equ	0xFF7
   512                           tblptrl	equ	0xFF6
   513                           tablat	equ	0xFF5
   514                           postinc0	equ	0xFEE
   515                           wreg	equ	0xFE8
   516                           postdec1	equ	0xFE5
   517                           fsr1l	equ	0xFE1
   518                           status	equ	0xFD8
   519                           
   520 ;; *************** function _nrfConfig *****************
   521 ;; Defined at:
   522 ;;		line 248 in file "main.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;		None               void
   529 ;; Registers used:
   530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   536 ;;      Params:         0       0       0       0
   537 ;;      Locals:         0       0       0       0
   538 ;;      Temps:          0       0       0       0
   539 ;;      Totals:         0       0       0       0
   540 ;;Total ram usage:        0 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; Hardware stack levels required when called:    1
   543 ;; This function calls:
   544 ;;		_nrfSetRXAddr
   545 ;;		_nrfSetTXAddr
   546 ;;		_spiWrite
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           	psect	text3
   553  0000'                    __ptext3:
   554                           	opt stack 0
   555  0000'                    _nrfConfig:
   556                           	opt stack 29
   557                           
   558                           ;main.c: 249: spiWrite(0x20|0x00);
   559                           
   560                           ;incstack = 0
   561  0000' 0E00               	movlw	0
   562  0002' 6E01'              	movwf	?_spiWrite+1,c
   563  0004' 0E20               	movlw	32
   564  0006' 6E00'              	movwf	?_spiWrite,c
   565  0008' EC00' F000'        	call	_spiWrite	;wreg free
   566                           
   567                           ;main.c: 250: spiWrite(CONFIG_CURR);
   568  000C' C000' F000'        	movff	_CONFIG_CURR,?_spiWrite
   569  0010' 6A01'              	clrf	?_spiWrite+1,c
   570  0012' EC00' F000'        	call	_spiWrite	;wreg free
   571                           
   572                           ;main.c: 252: spiWrite(0x20|0x01);
   573  0016' 0E00               	movlw	0
   574  0018' 6E01'              	movwf	?_spiWrite+1,c
   575  001A' 0E21               	movlw	33
   576  001C' 6E00'              	movwf	?_spiWrite,c
   577  001E' EC00' F000'        	call	_spiWrite	;wreg free
   578                           
   579                           ;main.c: 253: spiWrite(EN_AA_CURR);
   580  0022' C040' F000'        	movff	_EN_AA_CURR,?_spiWrite
   581  0026' 6A01'              	clrf	?_spiWrite+1,c
   582  0028' EC00' F000'        	call	_spiWrite	;wreg free
   583                           
   584                           ;main.c: 255: spiWrite(0x20|0x02);
   585  002C' 0E00               	movlw	0
   586  002E' 6E01'              	movwf	?_spiWrite+1,c
   587  0030' 0E22               	movlw	34
   588  0032' 6E00'              	movwf	?_spiWrite,c
   589  0034' EC00' F000'        	call	_spiWrite	;wreg free
   590                           
   591                           ;main.c: 256: spiWrite(EN_RXADDR_CURR);
   592  0038' C001' F000'        	movff	_EN_RXADDR_CURR,?_spiWrite
   593  003C' 6A01'              	clrf	?_spiWrite+1,c
   594  003E' EC00' F000'        	call	_spiWrite	;wreg free
   595                           
   596                           ;main.c: 258: spiWrite(0x20|0x03);
   597  0042' 0E00               	movlw	0
   598  0044' 6E01'              	movwf	?_spiWrite+1,c
   599  0046' 0E23               	movlw	35
   600  0048' 6E00'              	movwf	?_spiWrite,c
   601  004A' EC00' F000'        	call	_spiWrite	;wreg free
   602                           
   603                           ;main.c: 259: spiWrite(SETUP_AW_CURR);
   604  004E' C005' F000'        	movff	_SETUP_AW_CURR,?_spiWrite
   605  0052' 6A01'              	clrf	?_spiWrite+1,c
   606  0054' EC00' F000'        	call	_spiWrite	;wreg free
   607                           
   608                           ;main.c: 261: spiWrite(0x20|0x04);
   609  0058' 0E00               	movlw	0
   610  005A' 6E01'              	movwf	?_spiWrite+1,c
   611  005C' 0E24               	movlw	36
   612  005E' 6E00'              	movwf	?_spiWrite,c
   613  0060' EC00' F000'        	call	_spiWrite	;wreg free
   614                           
   615                           ;main.c: 262: spiWrite(SETUP_RETR_CURR);
   616  0064' C006' F000'        	movff	_SETUP_RETR_CURR,?_spiWrite
   617  0068' 6A01'              	clrf	?_spiWrite+1,c
   618  006A' EC00' F000'        	call	_spiWrite	;wreg free
   619                           
   620                           ;main.c: 264: spiWrite(0x20|0x05);
   621  006E' 0E00               	movlw	0
   622  0070' 6E01'              	movwf	?_spiWrite+1,c
   623  0072' 0E25               	movlw	37
   624  0074' 6E00'              	movwf	?_spiWrite,c
   625  0076' EC00' F000'        	call	_spiWrite	;wreg free
   626                           
   627                           ;main.c: 265: spiWrite(RF_CH_CURR);
   628  007A' C002' F000'        	movff	_RF_CH_CURR,?_spiWrite
   629  007E' 6A01'              	clrf	?_spiWrite+1,c
   630  0080' EC00' F000'        	call	_spiWrite	;wreg free
   631                           
   632                           ;main.c: 267: spiWrite(0x20|0x06);
   633  0084' 0E00               	movlw	0
   634  0086' 6E01'              	movwf	?_spiWrite+1,c
   635  0088' 0E26               	movlw	38
   636  008A' 6E00'              	movwf	?_spiWrite,c
   637  008C' EC00' F000'        	call	_spiWrite	;wreg free
   638                           
   639                           ;main.c: 268: spiWrite(RF_SETUP_CURR);
   640  0090' C003' F000'        	movff	_RF_SETUP_CURR,?_spiWrite
   641  0094' 6A01'              	clrf	?_spiWrite+1,c
   642  0096' EC00' F000'        	call	_spiWrite	;wreg free
   643                           
   644                           ;main.c: 270: nrfSetRXAddr(0x0A,RX_ADDRESS);
   645  009A' 0E00               	movlw	0
   646  009C' 6E01'              	movwf	?_nrfSetRXAddr+1,c
   647  009E' 0E0A               	movlw	10
   648  00A0' 6E00'              	movwf	?_nrfSetRXAddr,c
   649  00A2' 0E00'              	movlw	high _RX_ADDRESS
   650  00A4' 6E03'              	movwf	?_nrfSetRXAddr+3,c
   651  00A6' 0E00'              	movlw	low _RX_ADDRESS
   652  00A8' 6E02'              	movwf	?_nrfSetRXAddr+2,c
   653  00AA' EC00' F000'        	call	_nrfSetRXAddr	;wreg free
   654                           
   655                           ;main.c: 272: nrfSetTXAddr(TX_ADDRESS);
   656  00AE' 0E00'              	movlw	high _TX_ADDRESS
   657  00B0' 6E01'              	movwf	?_nrfSetTXAddr+1,c
   658  00B2' 0E00'              	movlw	low _TX_ADDRESS
   659  00B4' 6E00'              	movwf	?_nrfSetTXAddr,c
   660  00B6' EC00' F000'        	call	_nrfSetTXAddr	;wreg free
   661                           
   662                           ;main.c: 274: spiWrite(0x20|0x11);
   663  00BA' 0E00               	movlw	0
   664  00BC' 6E01'              	movwf	?_spiWrite+1,c
   665  00BE' 0E31               	movlw	49
   666  00C0' 6E00'              	movwf	?_spiWrite,c
   667  00C2' EC00' F000'        	call	_spiWrite	;wreg free
   668                           
   669                           ;main.c: 275: spiWrite(RX_PW_P0_CURR);
   670  00C6' C004' F000'        	movff	_RX_PW_P0_CURR,?_spiWrite
   671  00CA' 6A01'              	clrf	?_spiWrite+1,c
   672  00CC' EC00' F000'        	call	_spiWrite	;wreg free
   673                           
   674                           ;main.c: 277: spiWrite(0xE1);
   675  00D0' 0E00               	movlw	0
   676  00D2' 6E01'              	movwf	?_spiWrite+1,c
   677  00D4' 0EE1               	movlw	225
   678  00D6' 6E00'              	movwf	?_spiWrite,c
   679  00D8' EC00' F000'        	call	_spiWrite	;wreg free
   680  00DC' 0012               	return	
   681  00DE'                    __end_of_nrfConfig:
   682                           	opt stack 0
   683                           tblptru	equ	0xFF8
   684                           tblptrh	equ	0xFF7
   685                           tblptrl	equ	0xFF6
   686                           tablat	equ	0xFF5
   687                           postinc0	equ	0xFEE
   688                           wreg	equ	0xFE8
   689                           postdec1	equ	0xFE5
   690                           fsr1l	equ	0xFE1
   691                           status	equ	0xFD8
   692                           
   693 ;; *************** function _delay10ms *****************
   694 ;; Defined at:
   695 ;;		line 332 in file "main.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;  ms_multi        2    0[COMRAM] int 
   698 ;; Auto vars:     Size  Location     Type
   699 ;;  i               2    3[COMRAM] int 
   700 ;; Return value:  Size  Location     Type
   701 ;;		None               void
   702 ;; Registers used:
   703 ;;		wreg, status,2, status,0
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   709 ;;      Params:         2       0       0       0
   710 ;;      Locals:         2       0       0       0
   711 ;;      Temps:          1       0       0       0
   712 ;;      Totals:         5       0       0       0
   713 ;;Total ram usage:        5 bytes
   714 ;; Hardware stack levels used:    1
   715 ;; This function calls:
   716 ;;		Nothing
   717 ;; This function is called by:
   718 ;;		_main
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           	psect	text4
   723  0000'                    __ptext4:
   724                           	opt stack 0
   725  0000'                    _delay10ms:
   726                           	opt stack 30
   727                           
   728                           ;main.c: 333: int i = 0;
   729                           
   730                           ;incstack = 0
   731  0000' 0E00               	movlw	0
   732  0002' 6E04'              	movwf	delay10ms@i+1,c
   733  0004' 0E00               	movlw	0
   734  0006' 6E03'              	movwf	delay10ms@i,c
   735                           
   736                           ;main.c: 334: for (i=0;i<ms_multi;i++) {
   737  0008' 0E00               	movlw	0
   738  000A' 6E04'              	movwf	delay10ms@i+1,c
   739  000C' 0E00               	movlw	0
   740  000E' 6E03'              	movwf	delay10ms@i,c
   741  0010' D00A               	goto	l105
   742  0012'                    l714:
   743                           
   744                           ;main.c: 335: _delay((unsigned long)((11)*(64000000/4000.0)));
   745  0012' 0EE5               	movlw	229
   746  0014' 6E00'              	movwf	??_delay10ms& (0+255),c
   747  0016' 0E91               	movlw	145
   748  0018'                    u57:
   749  0018' 2EE8               	decfsz	wreg,f,c
   750  001A' D7FE               	goto	u57
   751  001C' 2E00'              	decfsz	??_delay10ms& (0+255),f,c
   752  001E' D7FC               	goto	u57
   753  0020' F000               	nop	
   754  0022' 4A03'              	infsnz	delay10ms@i,f,c
   755  0024' 2A04'              	incf	delay10ms@i+1,f,c
   756  0026'                    l105:
   757  0026' 5004'              	movf	delay10ms@i+1,w,c
   758  0028' 0A80               	xorlw	128
   759  002A' 6E00'              	movwf	??_delay10ms& (0+255),c
   760  002C' 5000'              	movf	delay10ms@ms_multi,w,c
   761  002E' 5C03'              	subwf	delay10ms@i,w,c
   762  0030' 5001'              	movf	delay10ms@ms_multi+1,w,c
   763  0032' 0A80               	xorlw	128
   764  0034' 5800'              	subwfb	??_delay10ms& (0+255),w,c
   765  0036' B0D8               	btfsc	status,0,c
   766  0038' 0012               	return	
   767  003A' D7EB               	goto	l714
   768  003C'                    __end_of_delay10ms:
   769                           	opt stack 0
   770  0000                     tblptru	equ	0xFF8
   771                           tblptrh	equ	0xFF7
   772                           tblptrl	equ	0xFF6
   773                           tablat	equ	0xFF5
   774                           postinc0	equ	0xFEE
   775                           wreg	equ	0xFE8
   776                           postdec1	equ	0xFE5
   777                           fsr1l	equ	0xFE1
   778                           status	equ	0xFD8
   779                           tblptru	equ	0xFF8
   780                           tblptrh	equ	0xFF7
   781                           tblptrl	equ	0xFF6
   782                           tablat	equ	0xFF5
   783                           postinc0	equ	0xFEE
   784                           wreg	equ	0xFE8
   785                           postdec1	equ	0xFE5
   786                           fsr1l	equ	0xFE1
   787                           status	equ	0xFD8
   788                           
   789                           	psect	rparam
   790  0000                     tblptru	equ	0xFF8
   791                           tblptrh	equ	0xFF7
   792                           tblptrl	equ	0xFF6
   793                           tablat	equ	0xFF5
   794                           postinc0	equ	0xFEE
   795                           wreg	equ	0xFE8
   796                           postdec1	equ	0xFE5
   797                           fsr1l	equ	0xFE1
   798                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         66
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8      89
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_delay10ms
    _nrfConfig->_nrfSetRXAddr

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     113
                                              5 COMRAM     3     3      0
                          _delay10ms
                          _getSTATUS
                          _nrfConfig
                              _nrfTX
                         _portConfig
                        _spiConfig_1
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _spiConfig_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _portConfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nrfTX                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _nrfConfig                                            0     0      0       0
                       _nrfSetRXAddr
                       _nrfSetTXAddr
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _nrfSetTXAddr                                         3     0      3       0
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _nrfSetRXAddr                                         5     0      5       0
                                              0 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (1) _getSTATUS                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay10ms                                            5     3      2      83
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay10ms
   _getSTATUS
   _nrfConfig
     _nrfSetRXAddr
     _nrfSetTXAddr
     _spiWrite
   _nrfTX
   _portConfig
   _spiConfig_1
   _spiRead
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      8      59       1       93.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      59       8        0.0%
DATA                 0      0      59      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Sep 24 10:14:27 2014

                     l76 00005C                       u57 000018               _RX_ADDRESS 000007  
            __CFG_LVP$ON 000000                      l105 000026                      l714 000012  
                    l730 000020                      wreg 000FE8               _TX_ADDRESS 00000B  
                   _LATA 000F89                     _LATB 000F8A                     _LATC 000F8B  
                   _main 000000                     fsr1l 000FE1            __CFG_BORV$190 000000  
                   start 000000*           __CFG_IESO$OFF 000000                    ?_main 000000  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
         __CFG_FCMEN$OFF 000000                    _nrfTX 000000*      __CFG_MCLRE$EXTMCLR 000000  
                  tablat 000FF5                    status 000FD8           __CFG_HFOFST$ON 000000  
         __CFG_FOSC$HSHP 000000          __initialization 000000             __end_of_main 000082  
                 ??_main 000005            __activetblptr 000000           __CFG_PLLCFG$ON 000000  
                 ?_nrfTX 000000           __CFG_WDTEN$OFF 000000             ?_spiConfig_1 000000  
         __CFG_PWRTEN$ON 000000           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
                 clear_0 000006             __pdataCOMRAM 000000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_spiRead 000002  
             __accesstop 000000* __end_of__initialization 00002C          __CFG_PBADEN$OFF 000000  
          ?_nrfSetRXAddr 000000            ?_nrfSetTXAddr 000000           __pcstackCOMRAM 000000  
     __size_of_delay10ms 000000           _EN_RXADDR_CURR 000001               _dataBufOut 000020  
                ??_nrfTX 000002           ??_nrfSetRXAddr 000005           ??_nrfSetTXAddr 000003  
     __size_of_nrfConfig 000000       __CFG_CCP2MX$PORTC1 000000       __CFG_CCP3MX$PORTB5 000000  
                _SSP1ADD 000FC8                  _SSP1BUF 000FC9        __end_of_delay10ms 00003C  
                __Hparam 000000                  __Lparam 000000     __size_of_spiConfig_1 000000  
             delay10ms@i 000003                ?_spiWrite 000000            _RX_PW_P0_CURR 000004  
                __pcinit 000000                  __ramtop 000000*                 __ptext0 000000  
                __ptext1 000000                  __ptext2 000000                  __ptext3 000000  
                __ptext4 000000        __end_of_nrfConfig 0000DE                  _spiRead 000000* 
   end_of_initialization 00002C               ??_spiWrite 000002                  postdec1 000FE5  
                postinc0 000FEE               _portConfig 000000           main@statusByte 000007  
          __pidataCOMRAM 000000      start_initialization 000000              ?_portConfig 000000  
            __pbssCOMRAM 000000                _dataBufIn 000000                _delay10ms 000000  
            _CONFIG_CURR 000000            _SETUP_AW_CURR 000005                _getSTATUS 000000* 
        _SETUP_RETR_CURR 000006         __CFG_PRICLKEN$ON 000000                 ?_spiRead 000000  
              _nrfSTATUS 000041                _nrfConfig 000000      __size_of_portConfig 000000  
               _LATAbits 000F89               ?_delay10ms 000000            ??_spiConfig_1 000000  
           _nrfSetRXAddr 000000*            _nrfSetTXAddr 000000*              ?_getSTATUS 000000  
       __CFG_WDTPS$32768 000000            _RF_SETUP_CURR 000003        delay10ms@ms_multi 000000  
              main@count 000005                copy_data0 000020               ?_nrfConfig 000000  
               __Hrparam 000000*                __Lrparam 000000*      __CFG_BOREN$SBORDIS 000000  
      __CFG_P2BMX$PORTB5 000000      __end_of_spiConfig_1 000018             _SSP1CON1bits 000FC6  
          __size_of_main 000000              ??_delay10ms 000002              ??_getSTATUS 000000  
               _spiWrite 000000*              _EN_AA_CURR 000040             _SSP1STATbits 000FC7  
           ??_portConfig 000000              ??_nrfConfig 000005       __end_of_portConfig 00001A  
            _spiConfig_1 000000               _RF_CH_CURR 000002        __CFG_T3CMX$PORTC0 000000  
