

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Sep 17 11:33:51 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F24K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           	psect	idataCOMRAM
    23  003E05                     __pidataCOMRAM:
    24                           	opt stack 0
    25                           
    26                           ;initializer for _CONFIG_INIT
    27  003E05  0A                 	db	10
    28                           
    29                           ;initializer for _EN_RXADDR_INIT
    30  003E06  02                 	db	2
    31                           
    32                           ;initializer for _RF_CH_INIT
    33  003E07  69                 	db	105
    34                           
    35                           ;initializer for _RF_SETUP_INIT
    36  003E08  06                 	db	6
    37                           
    38                           ;initializer for _SETUP_AW_INIT
    39  003E09  02                 	db	2
    40                           
    41                           ;initializer for _RX_ADDRESS
    42  003E0A  E7                 	db	231
    43  003E0B  E7                 	db	231
    44  003E0C  E7                 	db	231
    45  003E0D  E7                 	db	231
    46                           
    47                           ;initializer for _TX_ADDRESS
    48  003E0E  E7                 	db	231
    49  003E0F  E7                 	db	231
    50  003E10  E7                 	db	231
    51  003E11  E7                 	db	231
    52  0000                     _LATA	set	3977
    53  0000                     _LATAbits	set	3977
    54  0000                     _LATB	set	3978
    55  0000                     _LATC	set	3979
    56  0000                     _SSP1ADD	set	4040
    57  0000                     _SSP1BUF	set	4041
    58  0000                     _SSP1CON1bits	set	4038
    59  0000                     _SSP1STATbits	set	4039
    60  0000                     _TRISA	set	3986
    61  0000                     _TRISB	set	3987
    62  0000                     _TRISC	set	3988
    63                           
    64                           ; #config settings
    65  0000                     
    66                           	psect	cinit
    67  003E7A                     __pcinit:
    68                           	opt stack 0
    69  003E7A                     start_initialization:
    70                           	opt stack 0
    71  003E7A                     __initialization:
    72                           	opt stack 0
    73                           
    74                           ; Clear objects allocated to COMRAM (66 bytes)
    75  003E7A  EE00  F001         	lfsr	0,__pbssCOMRAM
    76  003E7E  0E42               	movlw	66
    77  003E80                     clear_0:
    78  003E80  6AEE               	clrf	postinc0,c
    79  003E82  06E8               	decf	wreg,f,c
    80  003E84  E1FD               	bnz	clear_0
    81                           
    82                           ; Initialize objects allocated to COMRAM (13 bytes)
    83                           ; load TBLPTR registers with __pidataCOMRAM
    84  003E86  0E05               	movlw	low __pidataCOMRAM
    85  003E88  6EF6               	movwf	tblptrl,c
    86  003E8A  0E3E               	movlw	high __pidataCOMRAM
    87  003E8C  6EF7               	movwf	tblptrh,c
    88  003E8E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    89  003E90  6EF8               	movwf	tblptru,c
    90  003E92  EE00  F043         	lfsr	0,__pdataCOMRAM
    91  003E96  EE10 F00D          	lfsr	1,13
    92  003E9A                     copy_data0:
    93  003E9A  0009               	tblrd		*+
    94  003E9C  CFF5 FFEE          	movff	tablat,postinc0
    95  003EA0  50E5               	movf	postdec1,w,c
    96  003EA2  50E1               	movf	fsr1l,w,c
    97  003EA4  E1FA               	bnz	copy_data0
    98  003EA6                     end_of_initialization:
    99                           	opt stack 0
   100  003EA6                     __end_of__initialization:
   101                           	opt stack 0
   102  003EA6  0100               	movlb	0
   103  003EA8  EFAB  F01F         	goto	_main	;jump to C main() function
   104                           tblptru	equ	0xFF8
   105                           tblptrh	equ	0xFF7
   106                           tblptrl	equ	0xFF6
   107                           tablat	equ	0xFF5
   108                           postinc0	equ	0xFEE
   109                           wreg	equ	0xFE8
   110                           postdec1	equ	0xFE5
   111                           fsr1l	equ	0xFE1
   112                           
   113                           	psect	bssCOMRAM
   114  000001                     __pbssCOMRAM:
   115                           	opt stack 0
   116  000001                     _dataBufIn:
   117                           	opt stack 0
   118  000001                     	ds	32
   119  000021                     _dataBufOut:
   120                           	opt stack 0
   121  000021                     	ds	32
   122  000041                     _count:
   123                           	opt stack 0
   124  000041                     	ds	2
   125                           tblptru	equ	0xFF8
   126                           tblptrh	equ	0xFF7
   127                           tblptrl	equ	0xFF6
   128                           tablat	equ	0xFF5
   129                           postinc0	equ	0xFEE
   130                           wreg	equ	0xFE8
   131                           postdec1	equ	0xFE5
   132                           fsr1l	equ	0xFE1
   133                           
   134                           	psect	dataCOMRAM
   135  000043                     __pdataCOMRAM:
   136                           	opt stack 0
   137  000043                     _CONFIG_INIT:
   138                           	opt stack 0
   139  000043                     	ds	1
   140  000044                     _EN_RXADDR_INIT:
   141                           	opt stack 0
   142  000044                     	ds	1
   143  000045                     _RF_CH_INIT:
   144                           	opt stack 0
   145  000045                     	ds	1
   146  000046                     _RF_SETUP_INIT:
   147                           	opt stack 0
   148  000046                     	ds	1
   149  000047                     _SETUP_AW_INIT:
   150                           	opt stack 0
   151  000047                     	ds	1
   152  000048                     _RX_ADDRESS:
   153                           	opt stack 0
   154  000048                     	ds	4
   155  00004C                     _TX_ADDRESS:
   156                           	opt stack 0
   157  00004C                     	ds	4
   158                           tblptru	equ	0xFF8
   159                           tblptrh	equ	0xFF7
   160                           tblptrl	equ	0xFF6
   161                           tablat	equ	0xFF5
   162                           postinc0	equ	0xFEE
   163                           wreg	equ	0xFE8
   164                           postdec1	equ	0xFE5
   165                           fsr1l	equ	0xFE1
   166                           
   167                           	psect	cstackCOMRAM
   168  000050                     __pcstackCOMRAM:
   169                           	opt stack 0
   170  000050                     ??_spiWrite:
   171  000050                     delay10ms@ms_multi:
   172                           	opt stack 0
   173                           
   174                           ; 2 bytes @ 0x0
   175  000050                     	ds	1
   176  000051                     spiWrite@data:
   177                           	opt stack 0
   178                           
   179                           ; 1 bytes @ 0x1
   180  000051                     	ds	1
   181  000052                     ??_delay10ms:
   182  000052                     nrfTX@data:
   183                           	opt stack 0
   184  000052                     nrfSetTXAddr@addr:
   185                           	opt stack 0
   186  000052                     nrfSetRXAddr@addr:
   187                           	opt stack 0
   188                           
   189                           ; 2 bytes @ 0x2
   190  000052                     	ds	1
   191  000053                     delay10ms@i:
   192                           	opt stack 0
   193                           
   194                           ; 2 bytes @ 0x3
   195  000053                     	ds	1
   196  000054                     nrfSetRXAddr@addrXX:
   197                           	opt stack 0
   198  000054                     nrfSetTXAddr@i:
   199                           	opt stack 0
   200                           
   201                           ; 2 bytes @ 0x4
   202  000054                     	ds	1
   203  000055                     nrfSetRXAddr@i:
   204                           	opt stack 0
   205                           
   206                           ; 2 bytes @ 0x5
   207  000055                     	ds	2
   208  000057                     main@i:
   209                           	opt stack 0
   210                           
   211                           ; 2 bytes @ 0x7
   212  000057                     	ds	2
   213                           tblptru	equ	0xFF8
   214                           tblptrh	equ	0xFF7
   215                           tblptrl	equ	0xFF6
   216                           tablat	equ	0xFF5
   217                           postinc0	equ	0xFEE
   218                           wreg	equ	0xFE8
   219                           postdec1	equ	0xFE5
   220                           fsr1l	equ	0xFE1
   221                           
   222 ;;
   223 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   224 ;;
   225 ;; *************** function _main *****************
   226 ;; Defined at:
   227 ;;		line 175 in file "main.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;		None
   230 ;; Auto vars:     Size  Location     Type
   231 ;;  i               2    7[COMRAM] int 
   232 ;; Return value:  Size  Location     Type
   233 ;;		None               void
   234 ;; Registers used:
   235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   236 ;; Tracked objects:
   237 ;;		On entry : 0/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   241 ;;      Params:         0       0       0       0
   242 ;;      Locals:         2       0       0       0
   243 ;;      Temps:          0       0       0       0
   244 ;;      Totals:         2       0       0       0
   245 ;;Total ram usage:        2 bytes
   246 ;; Hardware stack levels required when called:    3
   247 ;; This function calls:
   248 ;;		_delay10ms
   249 ;;		_nrfConfig
   250 ;;		_nrfTX
   251 ;;		_portConfig
   252 ;;		_spiConfig_1
   253 ;; This function is called by:
   254 ;;		Startup code after reset
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258                           	psect	text0
   259  003F56                     __ptext0:
   260                           	opt stack 0
   261  003F56                     _main:
   262                           	opt stack 28
   263                           
   264                           ;main.c: 177: portConfig();
   265                           
   266                           ;incstack = 0
   267  003F56  EC14  F01F         	call	_portConfig	;wreg free
   268                           
   269                           ;main.c: 179: spiConfig_1();
   270  003F5A  EC09  F01F         	call	_spiConfig_1	;wreg free
   271                           
   272                           ;main.c: 181: nrfConfig();
   273  003F5E  ECD1  F01F         	call	_nrfConfig	;wreg free
   274  003F62                     l759:
   275                           
   276                           ;main.c: 184: LATAbits.LATA0 = 1;
   277  003F62  8089               	bsf	3977,0,c	;volatile
   278                           
   279                           ;main.c: 186: nrfTX(count);
   280  003F64  5041               	movf	_count,w,c
   281  003F66  EC2F  F01F         	call	_nrfTX
   282                           
   283                           ;main.c: 187: count++;
   284  003F6A  4A41               	infsnz	_count,f,c
   285  003F6C  2A42               	incf	_count+1,f,c
   286                           
   287                           ;main.c: 189: LATAbits.LATA0 = 0;
   288  003F6E  9089               	bcf	3977,0,c	;volatile
   289                           
   290                           ;main.c: 192: int i = 0;
   291  003F70  0E00               	movlw	0
   292  003F72  6E58               	movwf	main@i+1,c
   293  003F74  0E00               	movlw	0
   294  003F76  6E57               	movwf	main@i,c
   295                           
   296                           ;main.c: 193: for (i=0;i<5;i++) {
   297  003F78  0E00               	movlw	0
   298  003F7A  6E58               	movwf	main@i+1,c
   299  003F7C  0E00               	movlw	0
   300  003F7E  6E57               	movwf	main@i,c
   301  003F80  5058               	movf	main@i+1,w,c
   302  003F82  0A80               	xorlw	128
   303  003F84  0F80               	addlw	-128
   304  003F86  0E05               	movlw	5
   305  003F88  B4D8               	btfsc	status,2,c
   306  003F8A  5C57               	subwf	main@i,w,c
   307  003F8C  B0D8               	btfsc	status,0,c
   308  003F8E  D7E9               	goto	l759
   309                           
   310                           ;main.c: 194: delay10ms(5);
   311  003F90  0E00               	movlw	0
   312  003F92  6E51               	movwf	delay10ms@ms_multi+1,c
   313  003F94  0E05               	movlw	5
   314  003F96  6E50               	movwf	delay10ms@ms_multi,c
   315  003F98  EC71  F01F         	call	_delay10ms	;wreg free
   316  003F9C  4A57               	infsnz	main@i,f,c
   317  003F9E  2A58               	incf	main@i+1,f,c
   318  003FA0  D7EF               	goto	L1
   319  003FA2                     __end_of_main:
   320                           	opt stack 0
   321                           tblptru	equ	0xFF8
   322                           tblptrh	equ	0xFF7
   323                           tblptrl	equ	0xFF6
   324                           tablat	equ	0xFF5
   325                           postinc0	equ	0xFEE
   326                           wreg	equ	0xFE8
   327                           postdec1	equ	0xFE5
   328                           fsr1l	equ	0xFE1
   329                           status	equ	0xFD8
   330                           
   331 ;; *************** function _spiConfig_1 *****************
   332 ;; Defined at:
   333 ;;		line 216 in file "main.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;		None
   336 ;; Auto vars:     Size  Location     Type
   337 ;;		None
   338 ;; Return value:  Size  Location     Type
   339 ;;		None               void
   340 ;; Registers used:
   341 ;;		wreg, status,2
   342 ;; Tracked objects:
   343 ;;		On entry : 0/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   347 ;;      Params:         0       0       0       0
   348 ;;      Locals:         0       0       0       0
   349 ;;      Temps:          0       0       0       0
   350 ;;      Totals:         0       0       0       0
   351 ;;Total ram usage:        0 bytes
   352 ;; Hardware stack levels used:    1
   353 ;; This function calls:
   354 ;;		Nothing
   355 ;; This function is called by:
   356 ;;		_main
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           	psect	text1
   361  003E12                     __ptext1:
   362                           	opt stack 0
   363  003E12                     _spiConfig_1:
   364                           	opt stack 30
   365                           
   366                           ;main.c: 217: SSP1CON1bits.CKP = 0;
   367                           
   368                           ;incstack = 0
   369  003E12  98C6               	bcf	4038,4,c	;volatile
   370                           
   371                           ;main.c: 218: SSP1STATbits.CKE = 1;
   372  003E14  8CC7               	bsf	4039,6,c	;volatile
   373                           
   374                           ;main.c: 219: SSP1STATbits.SMP = 1;
   375  003E16  8EC7               	bsf	4039,7,c	;volatile
   376                           
   377                           ;main.c: 220: SSP1ADD = 0b00011111;
   378  003E18  0E1F               	movlw	31
   379  003E1A  6EC8               	movwf	4040,c	;volatile
   380                           
   381                           ;main.c: 221: SSP1CON1bits.SSPM = 0b1010;
   382  003E1C  50C6               	movf	4038,w,c	;volatile
   383  003E1E  0BF0               	andlw	-16
   384  003E20  090A               	iorlw	10
   385  003E22  6EC6               	movwf	4038,c	;volatile
   386                           
   387                           ;main.c: 223: SSP1CON1bits.SSPEN = 1;
   388  003E24  8AC6               	bsf	4038,5,c	;volatile
   389  003E26  0012               	return	
   390  003E28                     __end_of_spiConfig_1:
   391                           	opt stack 0
   392                           tblptru	equ	0xFF8
   393                           tblptrh	equ	0xFF7
   394                           tblptrl	equ	0xFF6
   395                           tablat	equ	0xFF5
   396                           postinc0	equ	0xFEE
   397                           wreg	equ	0xFE8
   398                           postdec1	equ	0xFE5
   399                           fsr1l	equ	0xFE1
   400                           status	equ	0xFD8
   401                           
   402 ;; *************** function _portConfig *****************
   403 ;; Defined at:
   404 ;;		line 202 in file "main.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;		None               void
   411 ;; Registers used:
   412 ;;		wreg, status,2
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   418 ;;      Params:         0       0       0       0
   419 ;;      Locals:         0       0       0       0
   420 ;;      Temps:          0       0       0       0
   421 ;;      Totals:         0       0       0       0
   422 ;;Total ram usage:        0 bytes
   423 ;; Hardware stack levels used:    1
   424 ;; This function calls:
   425 ;;		Nothing
   426 ;; This function is called by:
   427 ;;		_main
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           	psect	text2
   432  003E28                     __ptext2:
   433                           	opt stack 0
   434  003E28                     _portConfig:
   435                           	opt stack 30
   436                           
   437                           ;main.c: 203: LATA = 0x00;
   438                           
   439                           ;incstack = 0
   440  003E28  0E00               	movlw	0
   441  003E2A  6E89               	movwf	3977,c	;volatile
   442                           
   443                           ;main.c: 204: LATB = 0x00;
   444  003E2C  0E00               	movlw	0
   445  003E2E  6E8A               	movwf	3978,c	;volatile
   446                           
   447                           ;main.c: 205: LATC = 0x00;
   448  003E30  0E00               	movlw	0
   449  003E32  6E8B               	movwf	3979,c	;volatile
   450                           
   451                           ;main.c: 207: TRISA = 0b00001000;
   452  003E34  0E08               	movlw	8
   453  003E36  6E92               	movwf	3986,c	;volatile
   454                           
   455                           ;main.c: 208: TRISB = 0b00000000;
   456  003E38  0E00               	movlw	0
   457  003E3A  6E93               	movwf	3987,c	;volatile
   458                           
   459                           ;main.c: 209: TRISC = 0b00010000;
   460  003E3C  0E10               	movlw	16
   461  003E3E  6E94               	movwf	3988,c	;volatile
   462  003E40  0012               	return	
   463  003E42                     __end_of_portConfig:
   464                           	opt stack 0
   465                           tblptru	equ	0xFF8
   466                           tblptrh	equ	0xFF7
   467                           tblptrl	equ	0xFF6
   468                           tablat	equ	0xFF5
   469                           postinc0	equ	0xFEE
   470                           wreg	equ	0xFE8
   471                           postdec1	equ	0xFE5
   472                           fsr1l	equ	0xFE1
   473                           status	equ	0xFD8
   474                           
   475 ;; *************** function _nrfTX *****************
   476 ;; Defined at:
   477 ;;		line 318 in file "main.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;  data            1    wreg     unsigned char 
   480 ;; Auto vars:     Size  Location     Type
   481 ;;  data            1    2[COMRAM] unsigned char 
   482 ;; Return value:  Size  Location     Type
   483 ;;		None               void
   484 ;; Registers used:
   485 ;;		wreg, status,2, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   491 ;;      Params:         0       0       0       0
   492 ;;      Locals:         1       0       0       0
   493 ;;      Temps:          0       0       0       0
   494 ;;      Totals:         1       0       0       0
   495 ;;Total ram usage:        1 bytes
   496 ;; Hardware stack levels used:    1
   497 ;; Hardware stack levels required when called:    1
   498 ;; This function calls:
   499 ;;		_spiWrite
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           	psect	text3
   506  003E5E                     __ptext3:
   507                           	opt stack 0
   508  003E5E                     _nrfTX:
   509                           	opt stack 29
   510                           
   511                           ;incstack = 0
   512                           ;nrfTX@data stored from wreg
   513  003E5E  6E52               	movwf	nrfTX@data,c
   514                           
   515                           ;main.c: 319: spiWrite(0xA0);
   516  003E60  0EA0               	movlw	160
   517  003E62  EC21  F01F         	call	_spiWrite
   518                           
   519                           ;main.c: 320: spiWrite(data);
   520  003E66  5052               	movf	nrfTX@data,w,c
   521  003E68  EC21  F01F         	call	_spiWrite
   522                           
   523                           ;main.c: 323: LATAbits.LATA1 = 1;
   524  003E6C  8289               	bsf	3977,1,c	;volatile
   525                           
   526                           ;main.c: 324: _delay((unsigned long)((20)*(64000000/4000000.0)));
   527  003E6E  0E6A               	movlw	106
   528  003E70                     u97:
   529  003E70  2EE8               	decfsz	wreg,f,c
   530  003E72  D7FE               	goto	u97
   531  003E74  D000               	nop2		;nop
   532                           
   533                           ;main.c: 325: LATAbits.LATA1 = 0;
   534  003E76  9289               	bcf	3977,1,c	;volatile
   535  003E78  0012               	return	
   536  003E7A                     __end_of_nrfTX:
   537                           	opt stack 0
   538                           tblptru	equ	0xFF8
   539                           tblptrh	equ	0xFF7
   540                           tblptrl	equ	0xFF6
   541                           tablat	equ	0xFF5
   542                           postinc0	equ	0xFEE
   543                           wreg	equ	0xFE8
   544                           postdec1	equ	0xFE5
   545                           fsr1l	equ	0xFE1
   546                           status	equ	0xFD8
   547                           
   548 ;; *************** function _nrfConfig *****************
   549 ;; Defined at:
   550 ;;		line 229 in file "main.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;		None               void
   557 ;; Registers used:
   558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   564 ;;      Params:         0       0       0       0
   565 ;;      Locals:         0       0       0       0
   566 ;;      Temps:          0       0       0       0
   567 ;;      Totals:         0       0       0       0
   568 ;;Total ram usage:        0 bytes
   569 ;; Hardware stack levels used:    1
   570 ;; Hardware stack levels required when called:    2
   571 ;; This function calls:
   572 ;;		_nrfSetRXAddr
   573 ;;		_nrfSetTXAddr
   574 ;;		_spiWrite
   575 ;; This function is called by:
   576 ;;		_main
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           	psect	text4
   581  003FA2                     __ptext4:
   582                           	opt stack 0
   583  003FA2                     _nrfConfig:
   584                           	opt stack 28
   585                           
   586                           ;main.c: 230: spiWrite(0x20|0x00);
   587                           
   588                           ;incstack = 0
   589  003FA2  0E20               	movlw	32
   590  003FA4  EC21  F01F         	call	_spiWrite
   591                           
   592                           ;main.c: 231: spiWrite(CONFIG_INIT);
   593  003FA8  5043               	movf	_CONFIG_INIT,w,c
   594  003FAA  EC21  F01F         	call	_spiWrite
   595                           
   596                           ;main.c: 232: spiWrite(0x20|0x02);
   597  003FAE  0E22               	movlw	34
   598  003FB0  EC21  F01F         	call	_spiWrite
   599                           
   600                           ;main.c: 233: spiWrite(EN_RXADDR_INIT);
   601  003FB4  5044               	movf	_EN_RXADDR_INIT,w,c
   602  003FB6  EC21  F01F         	call	_spiWrite
   603                           
   604                           ;main.c: 234: spiWrite(0x20|0x03);
   605  003FBA  0E23               	movlw	35
   606  003FBC  EC21  F01F         	call	_spiWrite
   607                           
   608                           ;main.c: 235: spiWrite(SETUP_AW_INIT);
   609  003FC0  5047               	movf	_SETUP_AW_INIT,w,c
   610  003FC2  EC21  F01F         	call	_spiWrite
   611                           
   612                           ;main.c: 236: nrfSetTXAddr(TX_ADDRESS);
   613  003FC6  0E00               	movlw	high _TX_ADDRESS
   614  003FC8  6E53               	movwf	nrfSetTXAddr@addr+1,c
   615  003FCA  0E4C               	movlw	low _TX_ADDRESS
   616  003FCC  6E52               	movwf	nrfSetTXAddr@addr,c
   617  003FCE  EC56  F01F         	call	_nrfSetTXAddr	;wreg free
   618                           
   619                           ;main.c: 237: nrfSetRXAddr(0x0A,RX_ADDRESS);
   620  003FD2  0E00               	movlw	high _RX_ADDRESS
   621  003FD4  6E53               	movwf	nrfSetRXAddr@addr+1,c
   622  003FD6  0E48               	movlw	low _RX_ADDRESS
   623  003FD8  6E52               	movwf	nrfSetRXAddr@addr,c
   624  003FDA  0E0A               	movlw	10
   625  003FDC  EC8E  F01F         	call	_nrfSetRXAddr
   626                           
   627                           ;main.c: 238: spiWrite(0x20|0x05);
   628  003FE0  0E25               	movlw	37
   629  003FE2  EC21  F01F         	call	_spiWrite
   630                           
   631                           ;main.c: 239: spiWrite(RF_CH_INIT);
   632  003FE6  5045               	movf	_RF_CH_INIT,w,c
   633  003FE8  EC21  F01F         	call	_spiWrite
   634                           
   635                           ;main.c: 240: spiWrite(0x20|0x06);
   636  003FEC  0E26               	movlw	38
   637  003FEE  EC21  F01F         	call	_spiWrite
   638                           
   639                           ;main.c: 241: spiWrite(RF_SETUP_INIT);
   640  003FF2  5046               	movf	_RF_SETUP_INIT,w,c
   641  003FF4  EC21  F01F         	call	_spiWrite
   642                           
   643                           ;main.c: 242: spiWrite(0xE1);
   644  003FF8  0EE1               	movlw	225
   645  003FFA  EC21  F01F         	call	_spiWrite
   646  003FFE  0012               	return	
   647  004000                     __end_of_nrfConfig:
   648                           	opt stack 0
   649                           tblptru	equ	0xFF8
   650                           tblptrh	equ	0xFF7
   651                           tblptrl	equ	0xFF6
   652                           tablat	equ	0xFF5
   653                           postinc0	equ	0xFEE
   654                           wreg	equ	0xFE8
   655                           postdec1	equ	0xFE5
   656                           fsr1l	equ	0xFE1
   657                           status	equ	0xFD8
   658                           
   659 ;; *************** function _nrfSetTXAddr *****************
   660 ;; Defined at:
   661 ;;		line 249 in file "main.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;  addr            2    2[COMRAM] PTR unsigned char 
   664 ;;		 -> TX_ADDRESS(4), 
   665 ;; Auto vars:     Size  Location     Type
   666 ;;  i               2    4[COMRAM] int 
   667 ;; Return value:  Size  Location     Type
   668 ;;		None               void
   669 ;; Registers used:
   670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   676 ;;      Params:         2       0       0       0
   677 ;;      Locals:         2       0       0       0
   678 ;;      Temps:          0       0       0       0
   679 ;;      Totals:         4       0       0       0
   680 ;;Total ram usage:        4 bytes
   681 ;; Hardware stack levels used:    1
   682 ;; Hardware stack levels required when called:    1
   683 ;; This function calls:
   684 ;;		_spiWrite
   685 ;; This function is called by:
   686 ;;		_nrfConfig
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           	psect	text5
   691  003EAC                     __ptext5:
   692                           	opt stack 0
   693  003EAC                     _nrfSetTXAddr:
   694                           	opt stack 28
   695                           
   696                           ;main.c: 250: spiWrite(0x20|0x10);
   697                           
   698                           ;incstack = 0
   699  003EAC  0E30               	movlw	48
   700  003EAE  EC21  F01F         	call	_spiWrite
   701                           
   702                           ;main.c: 252: int i;
   703                           ;main.c: 253: for (i=0;i<4;i++) {
   704  003EB2  0E00               	movlw	0
   705  003EB4  6E55               	movwf	nrfSetTXAddr@i+1,c
   706  003EB6  0E00               	movlw	0
   707  003EB8  6E54               	movwf	nrfSetTXAddr@i,c
   708  003EBA  5055               	movf	nrfSetTXAddr@i+1,w,c
   709  003EBC  0A80               	xorlw	128
   710  003EBE  0F80               	addlw	-128
   711  003EC0  0E04               	movlw	4
   712  003EC2  B4D8               	btfsc	status,2,c
   713  003EC4  5C54               	subwf	nrfSetTXAddr@i,w,c
   714  003EC6  B0D8               	btfsc	status,0,c
   715  003EC8  0012               	return	
   716                           
   717                           ;main.c: 254: spiWrite(addr[i]);
   718  003ECA  5054               	movf	nrfSetTXAddr@i,w,c
   719  003ECC  2452               	addwf	nrfSetTXAddr@addr,w,c
   720  003ECE  6ED9               	movwf	fsr2l,c
   721  003ED0  5055               	movf	nrfSetTXAddr@i+1,w,c
   722  003ED2  2053               	addwfc	nrfSetTXAddr@addr+1,w,c
   723  003ED4  6EDA               	movwf	fsr2h,c
   724  003ED6  50DF               	movf	indf2,w,c
   725  003ED8  EC21  F01F         	call	_spiWrite
   726  003EDC  4A54               	infsnz	nrfSetTXAddr@i,f,c
   727  003EDE  2A55               	incf	nrfSetTXAddr@i+1,f,c
   728  003EE0  D7EC               	goto	L2
   729  003EE2                     __end_of_nrfSetTXAddr:
   730                           	opt stack 0
   731                           tblptru	equ	0xFF8
   732                           tblptrh	equ	0xFF7
   733                           tblptrl	equ	0xFF6
   734                           tablat	equ	0xFF5
   735                           postinc0	equ	0xFEE
   736                           wreg	equ	0xFE8
   737                           postdec1	equ	0xFE5
   738                           fsr1l	equ	0xFE1
   739                           indf2	equ	0xFDF
   740                           fsr2h	equ	0xFDA
   741                           fsr2l	equ	0xFD9
   742                           status	equ	0xFD8
   743                           
   744 ;; *************** function _nrfSetRXAddr *****************
   745 ;; Defined at:
   746 ;;		line 263 in file "main.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;  addrXX          1    wreg     unsigned char 
   749 ;;  addr            2    2[COMRAM] PTR unsigned char 
   750 ;;		 -> RX_ADDRESS(4), 
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  addrXX          1    4[COMRAM] unsigned char 
   753 ;;  i               2    5[COMRAM] int 
   754 ;; Return value:  Size  Location     Type
   755 ;;		None               void
   756 ;; Registers used:
   757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   763 ;;      Params:         2       0       0       0
   764 ;;      Locals:         3       0       0       0
   765 ;;      Temps:          0       0       0       0
   766 ;;      Totals:         5       0       0       0
   767 ;;Total ram usage:        5 bytes
   768 ;; Hardware stack levels used:    1
   769 ;; Hardware stack levels required when called:    1
   770 ;; This function calls:
   771 ;;		_spiWrite
   772 ;; This function is called by:
   773 ;;		_nrfConfig
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           	psect	text6
   778  003F1C                     __ptext6:
   779                           	opt stack 0
   780  003F1C                     _nrfSetRXAddr:
   781                           	opt stack 28
   782                           
   783                           ;incstack = 0
   784                           ;nrfSetRXAddr@addrXX stored from wreg
   785  003F1C  6E54               	movwf	nrfSetRXAddr@addrXX,c
   786                           
   787                           ;main.c: 264: spiWrite(0x20|addrXX);
   788  003F1E  5054               	movf	nrfSetRXAddr@addrXX,w,c
   789  003F20  0920               	iorlw	32
   790  003F22  EC21  F01F         	call	_spiWrite
   791                           
   792                           ;main.c: 266: int i;
   793                           ;main.c: 267: for (i=0;i<4;i++) {
   794  003F26  0E00               	movlw	0
   795  003F28  6E56               	movwf	nrfSetRXAddr@i+1,c
   796  003F2A  0E00               	movlw	0
   797  003F2C  6E55               	movwf	nrfSetRXAddr@i,c
   798  003F2E  5056               	movf	nrfSetRXAddr@i+1,w,c
   799  003F30  0A80               	xorlw	128
   800  003F32  0F80               	addlw	-128
   801  003F34  0E04               	movlw	4
   802  003F36  B4D8               	btfsc	status,2,c
   803  003F38  5C55               	subwf	nrfSetRXAddr@i,w,c
   804  003F3A  B0D8               	btfsc	status,0,c
   805  003F3C  0012               	return	
   806                           
   807                           ;main.c: 268: spiWrite(addr[i]);
   808  003F3E  5055               	movf	nrfSetRXAddr@i,w,c
   809  003F40  2452               	addwf	nrfSetRXAddr@addr,w,c
   810  003F42  6ED9               	movwf	fsr2l,c
   811  003F44  5056               	movf	nrfSetRXAddr@i+1,w,c
   812  003F46  2053               	addwfc	nrfSetRXAddr@addr+1,w,c
   813  003F48  6EDA               	movwf	fsr2h,c
   814  003F4A  50DF               	movf	indf2,w,c
   815  003F4C  EC21  F01F         	call	_spiWrite
   816  003F50  4A55               	infsnz	nrfSetRXAddr@i,f,c
   817  003F52  2A56               	incf	nrfSetRXAddr@i+1,f,c
   818  003F54  D7EC               	goto	L3
   819  003F56                     __end_of_nrfSetRXAddr:
   820                           	opt stack 0
   821                           tblptru	equ	0xFF8
   822                           tblptrh	equ	0xFF7
   823                           tblptrl	equ	0xFF6
   824                           tablat	equ	0xFF5
   825                           postinc0	equ	0xFEE
   826                           wreg	equ	0xFE8
   827                           postdec1	equ	0xFE5
   828                           fsr1l	equ	0xFE1
   829                           indf2	equ	0xFDF
   830                           fsr2h	equ	0xFDA
   831                           fsr2l	equ	0xFD9
   832                           status	equ	0xFD8
   833                           
   834 ;; *************** function _spiWrite *****************
   835 ;; Defined at:
   836 ;;		line 288 in file "main.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;  data            1    wreg     unsigned char 
   839 ;; Auto vars:     Size  Location     Type
   840 ;;  data            1    1[COMRAM] unsigned char 
   841 ;; Return value:  Size  Location     Type
   842 ;;		None               void
   843 ;; Registers used:
   844 ;;		wreg, status,2, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   850 ;;      Params:         0       0       0       0
   851 ;;      Locals:         1       0       0       0
   852 ;;      Temps:          1       0       0       0
   853 ;;      Totals:         2       0       0       0
   854 ;;Total ram usage:        2 bytes
   855 ;; Hardware stack levels used:    1
   856 ;; This function calls:
   857 ;;		Nothing
   858 ;; This function is called by:
   859 ;;		_nrfConfig
   860 ;;		_nrfSetTXAddr
   861 ;;		_nrfSetRXAddr
   862 ;;		_nrfTX
   863 ;;		_getSTATUS
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           	psect	text7
   868  003E42                     __ptext7:
   869                           	opt stack 0
   870  003E42                     _spiWrite:
   871                           	opt stack 29
   872                           
   873                           ;incstack = 0
   874                           ;spiWrite@data stored from wreg
   875  003E42  6E51               	movwf	spiWrite@data,c
   876                           
   877                           ;main.c: 290: LATAbits.LATA2 = 1;
   878  003E44  8489               	bsf	3977,2,c	;volatile
   879                           
   880                           ;main.c: 291: SSP1BUF = data;
   881  003E46  C051  FFC9         	movff	spiWrite@data,4041	;volatile
   882                           
   883                           ;main.c: 292: LATAbits.LATA2 = 0;
   884  003E4A  9489               	bcf	3977,2,c	;volatile
   885                           
   886                           ;main.c: 293: _delay((unsigned long)((500)*(64000000/4000000.0)));
   887  003E4C  0E0B               	movlw	11
   888  003E4E  6E50               	movwf	??_spiWrite& (0+255),c
   889  003E50  0E62               	movlw	98
   890  003E52                     u107:
   891  003E52  2EE8               	decfsz	wreg,f,c
   892  003E54  D7FE               	goto	u107
   893  003E56  2E50               	decfsz	??_spiWrite& (0+255),f,c
   894  003E58  D7FC               	goto	u107
   895  003E5A  D000               	nop2	
   896  003E5C  0012               	return	
   897  003E5E                     __end_of_spiWrite:
   898                           	opt stack 0
   899                           tblptru	equ	0xFF8
   900                           tblptrh	equ	0xFF7
   901                           tblptrl	equ	0xFF6
   902                           tablat	equ	0xFF5
   903                           postinc0	equ	0xFEE
   904                           wreg	equ	0xFE8
   905                           postdec1	equ	0xFE5
   906                           fsr1l	equ	0xFE1
   907                           indf2	equ	0xFDF
   908                           fsr2h	equ	0xFDA
   909                           fsr2l	equ	0xFD9
   910                           status	equ	0xFD8
   911                           
   912 ;; *************** function _delay10ms *****************
   913 ;; Defined at:
   914 ;;		line 331 in file "main.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;  ms_multi        2    0[COMRAM] int 
   917 ;; Auto vars:     Size  Location     Type
   918 ;;  i               2    3[COMRAM] int 
   919 ;; Return value:  Size  Location     Type
   920 ;;		None               void
   921 ;; Registers used:
   922 ;;		wreg, status,2, status,0
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   928 ;;      Params:         2       0       0       0
   929 ;;      Locals:         2       0       0       0
   930 ;;      Temps:          1       0       0       0
   931 ;;      Totals:         5       0       0       0
   932 ;;Total ram usage:        5 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; This function calls:
   935 ;;		Nothing
   936 ;; This function is called by:
   937 ;;		_main
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text8
   942  003EE2                     __ptext8:
   943                           	opt stack 0
   944  003EE2                     _delay10ms:
   945                           	opt stack 30
   946                           
   947                           ;main.c: 332: int i = 0;
   948                           
   949                           ;incstack = 0
   950  003EE2  0E00               	movlw	0
   951  003EE4  6E54               	movwf	delay10ms@i+1,c
   952  003EE6  0E00               	movlw	0
   953  003EE8  6E53               	movwf	delay10ms@i,c
   954                           
   955                           ;main.c: 333: for (i=0;i<ms_multi;i++) {
   956  003EEA  0E00               	movlw	0
   957  003EEC  6E54               	movwf	delay10ms@i+1,c
   958  003EEE  0E00               	movlw	0
   959  003EF0  6E53               	movwf	delay10ms@i,c
   960  003EF2  D009               	goto	l104
   961  003EF4                     l751:
   962                           
   963                           ;main.c: 334: _delay((unsigned long)((10)*(64000000/4000.0)));
   964  003EF4  0ED0               	movlw	208
   965  003EF6  6E52               	movwf	??_delay10ms& (0+255),c
   966  003EF8  0ECA               	movlw	202
   967  003EFA                     u117:
   968  003EFA  2EE8               	decfsz	wreg,f,c
   969  003EFC  D7FE               	goto	u117
   970  003EFE  2E52               	decfsz	??_delay10ms& (0+255),f,c
   971  003F00  D7FC               	goto	u117
   972  003F02  4A53               	infsnz	delay10ms@i,f,c
   973  003F04  2A54               	incf	delay10ms@i+1,f,c
   974  003F06                     l104:
   975  003F06  5054               	movf	delay10ms@i+1,w,c
   976  003F08  0A80               	xorlw	128
   977  003F0A  6E52               	movwf	??_delay10ms& (0+255),c
   978  003F0C  5050               	movf	delay10ms@ms_multi,w,c
   979  003F0E  5C53               	subwf	delay10ms@i,w,c
   980  003F10  5051               	movf	delay10ms@ms_multi+1,w,c
   981  003F12  0A80               	xorlw	128
   982  003F14  5852               	subwfb	??_delay10ms& (0+255),w,c
   983  003F16  B0D8               	btfsc	status,0,c
   984  003F18  0012               	return	
   985  003F1A  D7EC               	goto	l751
   986  003F1C                     __end_of_delay10ms:
   987                           	opt stack 0
   988  0000                     tblptru	equ	0xFF8
   989                           tblptrh	equ	0xFF7
   990                           tblptrl	equ	0xFF6
   991                           tablat	equ	0xFF5
   992                           postinc0	equ	0xFEE
   993                           wreg	equ	0xFE8
   994                           postdec1	equ	0xFE5
   995                           fsr1l	equ	0xFE1
   996                           indf2	equ	0xFDF
   997                           fsr2h	equ	0xFDA
   998                           fsr2l	equ	0xFD9
   999                           status	equ	0xFD8
  1000                           tblptru	equ	0xFF8
  1001                           tblptrh	equ	0xFF7
  1002                           tblptrl	equ	0xFF6
  1003                           tablat	equ	0xFF5
  1004                           postinc0	equ	0xFEE
  1005                           wreg	equ	0xFE8
  1006                           postdec1	equ	0xFE5
  1007                           fsr1l	equ	0xFE1
  1008                           indf2	equ	0xFDF
  1009                           fsr2h	equ	0xFDA
  1010                           fsr2l	equ	0xFD9
  1011                           status	equ	0xFD8
  1012                           
  1013                           	psect	rparam
  1014  0000                     tblptru	equ	0xFF8
  1015                           tblptrh	equ	0xFF7
  1016                           tblptrl	equ	0xFF6
  1017                           tablat	equ	0xFF5
  1018                           postinc0	equ	0xFEE
  1019                           wreg	equ	0xFE8
  1020                           postdec1	equ	0xFE5
  1021                           fsr1l	equ	0xFE1
  1022                           indf2	equ	0xFDF
  1023                           fsr2h	equ	0xFDA
  1024                           fsr2l	equ	0xFD9
  1025                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         66
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      88
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    nrfSetRXAddr@addr	PTR unsigned char  size(2) Largest target is 4
		 -> RX_ADDRESS(COMRAM[4]), 

    nrfSetTXAddr@addr	PTR unsigned char  size(2) Largest target is 4
		 -> TX_ADDRESS(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _nrfTX->_spiWrite
    _nrfConfig->_nrfSetRXAddr
    _nrfSetTXAddr->_spiWrite
    _nrfSetRXAddr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     399
                                              7 COMRAM     2     2      0
                          _delay10ms
                          _nrfConfig
                              _nrfTX
                         _portConfig
                        _spiConfig_1
 ---------------------------------------------------------------------------------
 (1) _spiConfig_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _portConfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nrfTX                                                1     1      0      30
                                              2 COMRAM     1     1      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _nrfConfig                                            0     0      0     266
                       _nrfSetRXAddr
                       _nrfSetTXAddr
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _nrfSetTXAddr                                         4     2      2     118
                                              2 COMRAM     4     2      2
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _nrfSetRXAddr                                         5     3      2     133
                                              2 COMRAM     5     3      2
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _delay10ms                                            5     3      2      73
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay10ms
   _nrfConfig
     _nrfSetRXAddr
       _spiWrite
     _nrfSetTXAddr
       _spiWrite
     _spiWrite
   _nrfTX
     _spiWrite
   _portConfig
   _spiConfig_1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      9      58       1       92.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      58       8        0.0%
DATA                 0      0      58      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Sep 17 11:33:51 2014

                     u97 3E70             spiWrite@data 0051               _RX_ADDRESS 0048  
            __CFG_LVP$ON 000000                      l104 3F06                      l751 3EF4  
                    l759 3F62                      u107 3E52                      u117 3EFA  
                    wreg 000FE8               _TX_ADDRESS 004C                     _LATA 000F89  
                   _LATB 000F8A                     _LATC 000F8B                     _main 3F56  
                   fsr1l 000FE1                     indf2 000FDF                     fsr2l 000FD9  
          __CFG_BORV$190 000000                     start 0000            __CFG_IESO$OFF 000000  
                  ?_main 0050                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94           __CFG_FCMEN$OFF 000000                    _count 0041  
                  _nrfTX 3E5E       __CFG_MCLRE$EXTMCLR 000000                    main@i 0057  
                  tablat 000FF5                    status 000FD8           __CFG_HFOFST$ON 000000  
         __CFG_FOSC$HSHP 000000          __initialization 3E7A             __end_of_main 3FA2  
                 ??_main 0057            __activetblptr 000000           __CFG_PLLCFG$ON 000000  
          nrfSetRXAddr@i 0055                   ?_nrfTX 0050            nrfSetTXAddr@i 0054  
         __CFG_WDTEN$OFF 000000             ?_spiConfig_1 0050           __CFG_PWRTEN$ON 000000  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                   clear_0 3E80  
           __pdataCOMRAM 0043         __end_of_spiWrite 3E5E                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 3EA6          __CFG_PBADEN$OFF 000000            ?_nrfSetRXAddr 0052  
          ?_nrfSetTXAddr 0052           __pcstackCOMRAM 0050       __size_of_delay10ms 003A  
          __end_of_nrfTX 3E7A           _EN_RXADDR_INIT 0044               _dataBufOut 0021  
                ??_nrfTX 0052           ??_nrfSetRXAddr 0054           ??_nrfSetTXAddr 0054  
     __size_of_nrfConfig 005E       __CFG_CCP2MX$PORTC1 000000       __CFG_CCP3MX$PORTB5 000000  
                _SSP1ADD 000FC8                  _SSP1BUF 000FC9        __end_of_delay10ms 3F1C  
       nrfSetRXAddr@addr 0052                  __Hparam 0000                  __Lparam 0000  
   __size_of_spiConfig_1 0016               delay10ms@i 0053                ?_spiWrite 0050  
                __pcinit 3E7A         nrfSetTXAddr@addr 0052                  __ramtop 0300  
                __ptext0 3F56                  __ptext1 3E12                  __ptext2 3E28  
                __ptext3 3E5E                  __ptext4 3FA2                  __ptext5 3EAC  
                __ptext6 3F1C                  __ptext7 3E42                  __ptext8 3EE2  
      __end_of_nrfConfig 4000     end_of_initialization 3EA6               ??_spiWrite 0050  
                postdec1 000FE5                  postinc0 000FEE               _portConfig 3E28  
   __end_of_nrfSetRXAddr 3F56     __end_of_nrfSetTXAddr 3EE2       nrfSetRXAddr@addrXX 0054  
          __pidataCOMRAM 3E05      start_initialization 3E7A              ?_portConfig 0050  
            __pbssCOMRAM 0001                _dataBufIn 0001                _delay10ms 3EE2  
            _CONFIG_INIT 0043            _SETUP_AW_INIT 0047    __size_of_nrfSetRXAddr 003A  
  __size_of_nrfSetTXAddr 0036        __size_of_spiWrite 001C         __CFG_PRICLKEN$ON 000000  
         __size_of_nrfTX 001C                _nrfConfig 3FA2      __size_of_portConfig 001A  
               _LATAbits 000F89               ?_delay10ms 0050            ??_spiConfig_1 0050  
           _nrfSetRXAddr 3F1C             _nrfSetTXAddr 3EAC         __CFG_WDTPS$32768 000000  
          _RF_SETUP_INIT 0046        delay10ms@ms_multi 0050                copy_data0 3E9A  
             ?_nrfConfig 0050                 __Hrparam 0000                 __Lrparam 0000  
     __CFG_BOREN$SBORDIS 000000        __CFG_P2BMX$PORTB5 000000      __end_of_spiConfig_1 3E28  
              nrfTX@data 0052             _SSP1CON1bits 000FC6            __size_of_main 004C  
            ??_delay10ms 0052                 _spiWrite 3E42             _SSP1STATbits 000FC7  
           ??_portConfig 0050              ??_nrfConfig 0057       __end_of_portConfig 3E42  
            _spiConfig_1 3E12               _RF_CH_INIT 0045        __CFG_T3CMX$PORTC0 000000  
