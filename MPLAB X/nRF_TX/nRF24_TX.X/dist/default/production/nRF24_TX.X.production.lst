

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Sep 17 11:13:41 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F24K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           	psect	idataCOMRAM
    23  003E0D                     __pidataCOMRAM:
    24                           	opt stack 0
    25                           
    26                           ;initializer for _CONFIG_INIT
    27  003E0D  0A                 	db	10
    28                           
    29                           ;initializer for _EN_RXADDR_INIT
    30  003E0E  02                 	db	2
    31                           
    32                           ;initializer for _RF_CH_INIT
    33  003E0F  69                 	db	105
    34                           
    35                           ;initializer for _RF_SETUP_INIT
    36  003E10  06                 	db	6
    37                           
    38                           ;initializer for _SETUP_AW_INIT
    39  003E11  02                 	db	2
    40                           
    41                           ;initializer for _RX_ADDRESS
    42  003E12  E7                 	db	231
    43  003E13  E7                 	db	231
    44  003E14  E7                 	db	231
    45  003E15  E7                 	db	231
    46                           
    47                           ;initializer for _TX_ADDRESS
    48  003E16  E7                 	db	231
    49  003E17  E7                 	db	231
    50  003E18  E7                 	db	231
    51  003E19  E7                 	db	231
    52  0000                     _LATA	set	3977
    53  0000                     _LATAbits	set	3977
    54  0000                     _LATB	set	3978
    55  0000                     _LATC	set	3979
    56  0000                     _SSP1ADD	set	4040
    57  0000                     _SSP1BUF	set	4041
    58  0000                     _SSP1CON1bits	set	4038
    59  0000                     _SSP1STATbits	set	4039
    60  0000                     _TRISA	set	3986
    61  0000                     _TRISB	set	3987
    62  0000                     _TRISC	set	3988
    63                           
    64                           ; #config settings
    65  0000                     
    66                           	psect	cinit
    67  003E82                     __pcinit:
    68                           	opt stack 0
    69  003E82                     start_initialization:
    70                           	opt stack 0
    71  003E82                     __initialization:
    72                           	opt stack 0
    73                           
    74                           ; Clear objects allocated to COMRAM (2 bytes)
    75  003E82  6A18               	clrf	(__pbssCOMRAM+1)& (0+255),c
    76  003E84  6A17               	clrf	__pbssCOMRAM& (0+255),c
    77                           
    78                           ; Initialize objects allocated to COMRAM (13 bytes)
    79                           ; load TBLPTR registers with __pidataCOMRAM
    80  003E86  0E0D               	movlw	low __pidataCOMRAM
    81  003E88  6EF6               	movwf	tblptrl,c
    82  003E8A  0E3E               	movlw	high __pidataCOMRAM
    83  003E8C  6EF7               	movwf	tblptrh,c
    84  003E8E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    85  003E90  6EF8               	movwf	tblptru,c
    86  003E92  EE00  F001         	lfsr	0,__pdataCOMRAM
    87  003E96  EE10 F00D          	lfsr	1,13
    88  003E9A                     copy_data0:
    89  003E9A  0009               	tblrd		*+
    90  003E9C  CFF5 FFEE          	movff	tablat,postinc0
    91  003EA0  50E5               	movf	postdec1,w,c
    92  003EA2  50E1               	movf	fsr1l,w,c
    93  003EA4  E1FA               	bnz	copy_data0
    94  003EA6                     end_of_initialization:
    95                           	opt stack 0
    96  003EA6                     __end_of__initialization:
    97                           	opt stack 0
    98  003EA6  0100               	movlb	0
    99  003EA8  EFAB  F01F         	goto	_main	;jump to C main() function
   100                           tblptru	equ	0xFF8
   101                           tblptrh	equ	0xFF7
   102                           tblptrl	equ	0xFF6
   103                           tablat	equ	0xFF5
   104                           postinc0	equ	0xFEE
   105                           postdec1	equ	0xFE5
   106                           fsr1l	equ	0xFE1
   107                           
   108                           	psect	bssCOMRAM
   109  000017                     __pbssCOMRAM:
   110                           	opt stack 0
   111  000017                     _count:
   112                           	opt stack 0
   113  000017                     	ds	2
   114                           tblptru	equ	0xFF8
   115                           tblptrh	equ	0xFF7
   116                           tblptrl	equ	0xFF6
   117                           tablat	equ	0xFF5
   118                           postinc0	equ	0xFEE
   119                           postdec1	equ	0xFE5
   120                           fsr1l	equ	0xFE1
   121                           
   122                           	psect	dataCOMRAM
   123  000001                     __pdataCOMRAM:
   124                           	opt stack 0
   125  000001                     _CONFIG_INIT:
   126                           	opt stack 0
   127  000001                     	ds	1
   128  000002                     _EN_RXADDR_INIT:
   129                           	opt stack 0
   130  000002                     	ds	1
   131  000003                     _RF_CH_INIT:
   132                           	opt stack 0
   133  000003                     	ds	1
   134  000004                     _RF_SETUP_INIT:
   135                           	opt stack 0
   136  000004                     	ds	1
   137  000005                     _SETUP_AW_INIT:
   138                           	opt stack 0
   139  000005                     	ds	1
   140  000006                     _RX_ADDRESS:
   141                           	opt stack 0
   142  000006                     	ds	4
   143  00000A                     _TX_ADDRESS:
   144                           	opt stack 0
   145  00000A                     	ds	4
   146                           tblptru	equ	0xFF8
   147                           tblptrh	equ	0xFF7
   148                           tblptrl	equ	0xFF6
   149                           tablat	equ	0xFF5
   150                           postinc0	equ	0xFEE
   151                           postdec1	equ	0xFE5
   152                           fsr1l	equ	0xFE1
   153                           
   154                           	psect	cstackCOMRAM
   155  00000E                     __pcstackCOMRAM:
   156                           	opt stack 0
   157  00000E                     ??_spiWrite:
   158  00000E                     delay10ms@ms_multi:
   159                           	opt stack 0
   160                           
   161                           ; 2 bytes @ 0x0
   162  00000E                     	ds	1
   163  00000F                     spiWrite@data:
   164                           	opt stack 0
   165                           
   166                           ; 1 bytes @ 0x1
   167  00000F                     	ds	1
   168  000010                     ??_delay10ms:
   169  000010                     nrfTX@data:
   170                           	opt stack 0
   171  000010                     nrfSetTXAddr@addr:
   172                           	opt stack 0
   173  000010                     nrfSetRXAddr@addr:
   174                           	opt stack 0
   175                           
   176                           ; 2 bytes @ 0x2
   177  000010                     	ds	1
   178  000011                     delay10ms@i:
   179                           	opt stack 0
   180                           
   181                           ; 2 bytes @ 0x3
   182  000011                     	ds	1
   183  000012                     nrfSetRXAddr@addrXX:
   184                           	opt stack 0
   185  000012                     nrfSetTXAddr@i:
   186                           	opt stack 0
   187                           
   188                           ; 2 bytes @ 0x4
   189  000012                     	ds	1
   190  000013                     nrfSetRXAddr@i:
   191                           	opt stack 0
   192                           
   193                           ; 2 bytes @ 0x5
   194  000013                     	ds	2
   195  000015                     main@i:
   196                           	opt stack 0
   197                           
   198                           ; 2 bytes @ 0x7
   199  000015                     	ds	2
   200                           tblptru	equ	0xFF8
   201                           tblptrh	equ	0xFF7
   202                           tblptrl	equ	0xFF6
   203                           tablat	equ	0xFF5
   204                           postinc0	equ	0xFEE
   205                           postdec1	equ	0xFE5
   206                           fsr1l	equ	0xFE1
   207                           
   208 ;;
   209 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   210 ;;
   211 ;; *************** function _main *****************
   212 ;; Defined at:
   213 ;;		line 173 in file "main.c"
   214 ;; Parameters:    Size  Location     Type
   215 ;;		None
   216 ;; Auto vars:     Size  Location     Type
   217 ;;  i               2    7[COMRAM] int 
   218 ;; Return value:  Size  Location     Type
   219 ;;		None               void
   220 ;; Registers used:
   221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   222 ;; Tracked objects:
   223 ;;		On entry : 0/0
   224 ;;		On exit  : 0/0
   225 ;;		Unchanged: 0/0
   226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   227 ;;      Params:         0       0       0       0
   228 ;;      Locals:         2       0       0       0
   229 ;;      Temps:          0       0       0       0
   230 ;;      Totals:         2       0       0       0
   231 ;;Total ram usage:        2 bytes
   232 ;; Hardware stack levels required when called:    3
   233 ;; This function calls:
   234 ;;		_delay10ms
   235 ;;		_nrfConfig
   236 ;;		_nrfTX
   237 ;;		_portConfig
   238 ;;		_spiConfig_1
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244                           	psect	text0
   245  003F56                     __ptext0:
   246                           	opt stack 0
   247  003F56                     _main:
   248                           	opt stack 28
   249                           
   250                           ;main.c: 175: portConfig();
   251                           
   252                           ;incstack = 0
   253  003F56  EC18  F01F         	call	_portConfig	;wreg free
   254                           
   255                           ;main.c: 177: spiConfig_1();
   256  003F5A  EC0D  F01F         	call	_spiConfig_1	;wreg free
   257                           
   258                           ;main.c: 179: nrfConfig();
   259  003F5E  ECD1  F01F         	call	_nrfConfig	;wreg free
   260  003F62                     l755:
   261                           
   262                           ;main.c: 182: LATAbits.LATA0 = 1;
   263  003F62  8089               	bsf	3977,0,c	;volatile
   264                           
   265                           ;main.c: 184: nrfTX(count);
   266  003F64  5017               	movf	_count,w,c
   267  003F66  EC33  F01F         	call	_nrfTX
   268                           
   269                           ;main.c: 185: count++;
   270  003F6A  4A17               	infsnz	_count,f,c
   271  003F6C  2A18               	incf	_count+1,f,c
   272                           
   273                           ;main.c: 187: LATAbits.LATA0 = 0;
   274  003F6E  9089               	bcf	3977,0,c	;volatile
   275                           
   276                           ;main.c: 190: int i = 0;
   277  003F70  0E00               	movlw	0
   278  003F72  6E16               	movwf	main@i+1,c
   279  003F74  0E00               	movlw	0
   280  003F76  6E15               	movwf	main@i,c
   281                           
   282                           ;main.c: 191: for (i=0;i<5;i++) {
   283  003F78  0E00               	movlw	0
   284  003F7A  6E16               	movwf	main@i+1,c
   285  003F7C  0E00               	movlw	0
   286  003F7E  6E15               	movwf	main@i,c
   287  003F80  5016               	movf	main@i+1,w,c
   288  003F82  0A80               	xorlw	128
   289  003F84  0F80               	addlw	-128
   290  003F86  0E05               	movlw	5
   291  003F88  B4D8               	btfsc	status,2,c
   292  003F8A  5C15               	subwf	main@i,w,c
   293  003F8C  B0D8               	btfsc	status,0,c
   294  003F8E  D7E9               	goto	l755
   295                           
   296                           ;main.c: 192: delay10ms(5);
   297  003F90  0E00               	movlw	0
   298  003F92  6E0F               	movwf	delay10ms@ms_multi+1,c
   299  003F94  0E05               	movlw	5
   300  003F96  6E0E               	movwf	delay10ms@ms_multi,c
   301  003F98  EC71  F01F         	call	_delay10ms	;wreg free
   302  003F9C  4A15               	infsnz	main@i,f,c
   303  003F9E  2A16               	incf	main@i+1,f,c
   304  003FA0  D7EF               	goto	L1
   305  003FA2                     __end_of_main:
   306                           	opt stack 0
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           postdec1	equ	0xFE5
   313                           fsr1l	equ	0xFE1
   314                           status	equ	0xFD8
   315                           
   316 ;; *************** function _spiConfig_1 *****************
   317 ;; Defined at:
   318 ;;		line 214 in file "main.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;		None
   321 ;; Auto vars:     Size  Location     Type
   322 ;;		None
   323 ;; Return value:  Size  Location     Type
   324 ;;		None               void
   325 ;; Registers used:
   326 ;;		wreg, status,2
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   332 ;;      Params:         0       0       0       0
   333 ;;      Locals:         0       0       0       0
   334 ;;      Temps:          0       0       0       0
   335 ;;      Totals:         0       0       0       0
   336 ;;Total ram usage:        0 bytes
   337 ;; Hardware stack levels used:    1
   338 ;; This function calls:
   339 ;;		Nothing
   340 ;; This function is called by:
   341 ;;		_main
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           	psect	text1
   346  003E1A                     __ptext1:
   347                           	opt stack 0
   348  003E1A                     _spiConfig_1:
   349                           	opt stack 30
   350                           
   351                           ;main.c: 215: SSP1CON1bits.CKP = 0;
   352                           
   353                           ;incstack = 0
   354  003E1A  98C6               	bcf	4038,4,c	;volatile
   355                           
   356                           ;main.c: 216: SSP1STATbits.CKE = 1;
   357  003E1C  8CC7               	bsf	4039,6,c	;volatile
   358                           
   359                           ;main.c: 217: SSP1STATbits.SMP = 1;
   360  003E1E  8EC7               	bsf	4039,7,c	;volatile
   361                           
   362                           ;main.c: 218: SSP1ADD = 0b00011111;
   363  003E20  0E1F               	movlw	31
   364  003E22  6EC8               	movwf	4040,c	;volatile
   365                           
   366                           ;main.c: 219: SSP1CON1bits.SSPM = 0b1010;
   367  003E24  50C6               	movf	4038,w,c	;volatile
   368  003E26  0BF0               	andlw	-16
   369  003E28  090A               	iorlw	10
   370  003E2A  6EC6               	movwf	4038,c	;volatile
   371                           
   372                           ;main.c: 221: SSP1CON1bits.SSPEN = 1;
   373  003E2C  8AC6               	bsf	4038,5,c	;volatile
   374  003E2E  0012               	return	
   375  003E30                     __end_of_spiConfig_1:
   376                           	opt stack 0
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           tblptrl	equ	0xFF6
   380                           tablat	equ	0xFF5
   381                           postinc0	equ	0xFEE
   382                           postdec1	equ	0xFE5
   383                           fsr1l	equ	0xFE1
   384                           status	equ	0xFD8
   385                           
   386 ;; *************** function _portConfig *****************
   387 ;; Defined at:
   388 ;;		line 200 in file "main.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;		None               void
   395 ;; Registers used:
   396 ;;		wreg, status,2
   397 ;; Tracked objects:
   398 ;;		On entry : 0/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   402 ;;      Params:         0       0       0       0
   403 ;;      Locals:         0       0       0       0
   404 ;;      Temps:          0       0       0       0
   405 ;;      Totals:         0       0       0       0
   406 ;;Total ram usage:        0 bytes
   407 ;; Hardware stack levels used:    1
   408 ;; This function calls:
   409 ;;		Nothing
   410 ;; This function is called by:
   411 ;;		_main
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           	psect	text2
   416  003E30                     __ptext2:
   417                           	opt stack 0
   418  003E30                     _portConfig:
   419                           	opt stack 30
   420                           
   421                           ;main.c: 201: LATA = 0x00;
   422                           
   423                           ;incstack = 0
   424  003E30  0E00               	movlw	0
   425  003E32  6E89               	movwf	3977,c	;volatile
   426                           
   427                           ;main.c: 202: LATB = 0x00;
   428  003E34  0E00               	movlw	0
   429  003E36  6E8A               	movwf	3978,c	;volatile
   430                           
   431                           ;main.c: 203: LATC = 0x00;
   432  003E38  0E00               	movlw	0
   433  003E3A  6E8B               	movwf	3979,c	;volatile
   434                           
   435                           ;main.c: 205: TRISA = 0b00001000;
   436  003E3C  0E08               	movlw	8
   437  003E3E  6E92               	movwf	3986,c	;volatile
   438                           
   439                           ;main.c: 206: TRISB = 0b00000000;
   440  003E40  0E00               	movlw	0
   441  003E42  6E93               	movwf	3987,c	;volatile
   442                           
   443                           ;main.c: 207: TRISC = 0b00010000;
   444  003E44  0E10               	movlw	16
   445  003E46  6E94               	movwf	3988,c	;volatile
   446  003E48  0012               	return	
   447  003E4A                     __end_of_portConfig:
   448                           	opt stack 0
   449                           tblptru	equ	0xFF8
   450                           tblptrh	equ	0xFF7
   451                           tblptrl	equ	0xFF6
   452                           tablat	equ	0xFF5
   453                           postinc0	equ	0xFEE
   454                           postdec1	equ	0xFE5
   455                           fsr1l	equ	0xFE1
   456                           status	equ	0xFD8
   457                           
   458 ;; *************** function _nrfTX *****************
   459 ;; Defined at:
   460 ;;		line 319 in file "main.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;  data            1    wreg     unsigned char 
   463 ;; Auto vars:     Size  Location     Type
   464 ;;  data            1    2[COMRAM] unsigned char 
   465 ;; Return value:  Size  Location     Type
   466 ;;		None               void
   467 ;; Registers used:
   468 ;;		wreg, status,2, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   474 ;;      Params:         0       0       0       0
   475 ;;      Locals:         1       0       0       0
   476 ;;      Temps:          0       0       0       0
   477 ;;      Totals:         1       0       0       0
   478 ;;Total ram usage:        1 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; Hardware stack levels required when called:    1
   481 ;; This function calls:
   482 ;;		_spiWrite
   483 ;; This function is called by:
   484 ;;		_main
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           	psect	text3
   489  003E66                     __ptext3:
   490                           	opt stack 0
   491  003E66                     _nrfTX:
   492                           	opt stack 29
   493                           
   494                           ;incstack = 0
   495                           ;nrfTX@data stored from wreg
   496  003E66  6E10               	movwf	nrfTX@data,c
   497                           
   498                           ;main.c: 320: spiWrite(0xA0);
   499  003E68  0EA0               	movlw	160
   500  003E6A  EC25  F01F         	call	_spiWrite
   501                           
   502                           ;main.c: 321: spiWrite(data);
   503  003E6E  5010               	movf	nrfTX@data,w,c
   504  003E70  EC25  F01F         	call	_spiWrite
   505                           
   506                           ;main.c: 324: LATAbits.LATA1 = 1;
   507  003E74  8289               	bsf	3977,1,c	;volatile
   508                           
   509                           ;main.c: 325: _delay((unsigned long)((20)*(64000000/4000000.0)));
   510  003E76  0E6A               	movlw	106
   511  003E78                     u97:
   512  003E78  2EE8               	decfsz	wreg,f,c
   513  003E7A  D7FE               	goto	u97
   514  003E7C  D000               	nop2		;nop
   515                           
   516                           ;main.c: 326: LATAbits.LATA1 = 0;
   517  003E7E  9289               	bcf	3977,1,c	;volatile
   518  003E80  0012               	return	
   519  003E82                     __end_of_nrfTX:
   520                           	opt stack 0
   521                           tblptru	equ	0xFF8
   522                           tblptrh	equ	0xFF7
   523                           tblptrl	equ	0xFF6
   524                           tablat	equ	0xFF5
   525                           postinc0	equ	0xFEE
   526                           wreg	equ	0xFE8
   527                           postdec1	equ	0xFE5
   528                           fsr1l	equ	0xFE1
   529                           status	equ	0xFD8
   530                           
   531 ;; *************** function _nrfConfig *****************
   532 ;; Defined at:
   533 ;;		line 227 in file "main.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;		None
   538 ;; Return value:  Size  Location     Type
   539 ;;		None               void
   540 ;; Registers used:
   541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   547 ;;      Params:         0       0       0       0
   548 ;;      Locals:         0       0       0       0
   549 ;;      Temps:          0       0       0       0
   550 ;;      Totals:         0       0       0       0
   551 ;;Total ram usage:        0 bytes
   552 ;; Hardware stack levels used:    1
   553 ;; Hardware stack levels required when called:    2
   554 ;; This function calls:
   555 ;;		_nrfSetRXAddr
   556 ;;		_nrfSetTXAddr
   557 ;;		_spiWrite
   558 ;; This function is called by:
   559 ;;		_main
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           	psect	text4
   564  003FA2                     __ptext4:
   565                           	opt stack 0
   566  003FA2                     _nrfConfig:
   567                           	opt stack 28
   568                           
   569                           ;main.c: 228: spiWrite(0x20|0x00);
   570                           
   571                           ;incstack = 0
   572  003FA2  0E20               	movlw	32
   573  003FA4  EC25  F01F         	call	_spiWrite
   574                           
   575                           ;main.c: 229: spiWrite(CONFIG_INIT);
   576  003FA8  5001               	movf	_CONFIG_INIT,w,c
   577  003FAA  EC25  F01F         	call	_spiWrite
   578                           
   579                           ;main.c: 230: spiWrite(0x20|0x02);
   580  003FAE  0E22               	movlw	34
   581  003FB0  EC25  F01F         	call	_spiWrite
   582                           
   583                           ;main.c: 231: spiWrite(EN_RXADDR_INIT);
   584  003FB4  5002               	movf	_EN_RXADDR_INIT,w,c
   585  003FB6  EC25  F01F         	call	_spiWrite
   586                           
   587                           ;main.c: 232: spiWrite(0x20|0x03);
   588  003FBA  0E23               	movlw	35
   589  003FBC  EC25  F01F         	call	_spiWrite
   590                           
   591                           ;main.c: 233: spiWrite(SETUP_AW_INIT);
   592  003FC0  5005               	movf	_SETUP_AW_INIT,w,c
   593  003FC2  EC25  F01F         	call	_spiWrite
   594                           
   595                           ;main.c: 234: nrfSetTXAddr(TX_ADDRESS);
   596  003FC6  0E00               	movlw	high _TX_ADDRESS
   597  003FC8  6E11               	movwf	nrfSetTXAddr@addr+1,c
   598  003FCA  0E0A               	movlw	low _TX_ADDRESS
   599  003FCC  6E10               	movwf	nrfSetTXAddr@addr,c
   600  003FCE  EC56  F01F         	call	_nrfSetTXAddr	;wreg free
   601                           
   602                           ;main.c: 235: nrfSetRXAddr(0x0A,RX_ADDRESS);
   603  003FD2  0E00               	movlw	high _RX_ADDRESS
   604  003FD4  6E11               	movwf	nrfSetRXAddr@addr+1,c
   605  003FD6  0E06               	movlw	low _RX_ADDRESS
   606  003FD8  6E10               	movwf	nrfSetRXAddr@addr,c
   607  003FDA  0E0A               	movlw	10
   608  003FDC  EC8E  F01F         	call	_nrfSetRXAddr
   609                           
   610                           ;main.c: 236: spiWrite(0x20|0x05);
   611  003FE0  0E25               	movlw	37
   612  003FE2  EC25  F01F         	call	_spiWrite
   613                           
   614                           ;main.c: 237: spiWrite(RF_CH_INIT);
   615  003FE6  5003               	movf	_RF_CH_INIT,w,c
   616  003FE8  EC25  F01F         	call	_spiWrite
   617                           
   618                           ;main.c: 238: spiWrite(0x20|0x06);
   619  003FEC  0E26               	movlw	38
   620  003FEE  EC25  F01F         	call	_spiWrite
   621                           
   622                           ;main.c: 239: spiWrite(RF_SETUP_INIT);
   623  003FF2  5004               	movf	_RF_SETUP_INIT,w,c
   624  003FF4  EC25  F01F         	call	_spiWrite
   625                           
   626                           ;main.c: 240: spiWrite(0xE1);
   627  003FF8  0EE1               	movlw	225
   628  003FFA  EC25  F01F         	call	_spiWrite
   629  003FFE  0012               	return	
   630  004000                     __end_of_nrfConfig:
   631                           	opt stack 0
   632                           tblptru	equ	0xFF8
   633                           tblptrh	equ	0xFF7
   634                           tblptrl	equ	0xFF6
   635                           tablat	equ	0xFF5
   636                           postinc0	equ	0xFEE
   637                           wreg	equ	0xFE8
   638                           postdec1	equ	0xFE5
   639                           fsr1l	equ	0xFE1
   640                           status	equ	0xFD8
   641                           
   642 ;; *************** function _nrfSetTXAddr *****************
   643 ;; Defined at:
   644 ;;		line 247 in file "main.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  addr            2    2[COMRAM] PTR unsigned char 
   647 ;;		 -> TX_ADDRESS(4), 
   648 ;; Auto vars:     Size  Location     Type
   649 ;;  i               2    4[COMRAM] int 
   650 ;; Return value:  Size  Location     Type
   651 ;;		None               void
   652 ;; Registers used:
   653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   659 ;;      Params:         2       0       0       0
   660 ;;      Locals:         2       0       0       0
   661 ;;      Temps:          0       0       0       0
   662 ;;      Totals:         4       0       0       0
   663 ;;Total ram usage:        4 bytes
   664 ;; Hardware stack levels used:    1
   665 ;; Hardware stack levels required when called:    1
   666 ;; This function calls:
   667 ;;		_spiWrite
   668 ;; This function is called by:
   669 ;;		_nrfConfig
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	text5
   674  003EAC                     __ptext5:
   675                           	opt stack 0
   676  003EAC                     _nrfSetTXAddr:
   677                           	opt stack 28
   678                           
   679                           ;main.c: 248: spiWrite(0x20|0x10);
   680                           
   681                           ;incstack = 0
   682  003EAC  0E30               	movlw	48
   683  003EAE  EC25  F01F         	call	_spiWrite
   684                           
   685                           ;main.c: 250: int i;
   686                           ;main.c: 251: for (i=0;i<4;i++) {
   687  003EB2  0E00               	movlw	0
   688  003EB4  6E13               	movwf	nrfSetTXAddr@i+1,c
   689  003EB6  0E00               	movlw	0
   690  003EB8  6E12               	movwf	nrfSetTXAddr@i,c
   691  003EBA  5013               	movf	nrfSetTXAddr@i+1,w,c
   692  003EBC  0A80               	xorlw	128
   693  003EBE  0F80               	addlw	-128
   694  003EC0  0E04               	movlw	4
   695  003EC2  B4D8               	btfsc	status,2,c
   696  003EC4  5C12               	subwf	nrfSetTXAddr@i,w,c
   697  003EC6  B0D8               	btfsc	status,0,c
   698  003EC8  0012               	return	
   699                           
   700                           ;main.c: 252: spiWrite(addr[i]);
   701  003ECA  5012               	movf	nrfSetTXAddr@i,w,c
   702  003ECC  2410               	addwf	nrfSetTXAddr@addr,w,c
   703  003ECE  6ED9               	movwf	fsr2l,c
   704  003ED0  5013               	movf	nrfSetTXAddr@i+1,w,c
   705  003ED2  2011               	addwfc	nrfSetTXAddr@addr+1,w,c
   706  003ED4  6EDA               	movwf	fsr2h,c
   707  003ED6  50DF               	movf	indf2,w,c
   708  003ED8  EC25  F01F         	call	_spiWrite
   709  003EDC  4A12               	infsnz	nrfSetTXAddr@i,f,c
   710  003EDE  2A13               	incf	nrfSetTXAddr@i+1,f,c
   711  003EE0  D7EC               	goto	L2
   712  003EE2                     __end_of_nrfSetTXAddr:
   713                           	opt stack 0
   714                           tblptru	equ	0xFF8
   715                           tblptrh	equ	0xFF7
   716                           tblptrl	equ	0xFF6
   717                           tablat	equ	0xFF5
   718                           postinc0	equ	0xFEE
   719                           wreg	equ	0xFE8
   720                           postdec1	equ	0xFE5
   721                           fsr1l	equ	0xFE1
   722                           indf2	equ	0xFDF
   723                           fsr2h	equ	0xFDA
   724                           fsr2l	equ	0xFD9
   725                           status	equ	0xFD8
   726                           
   727 ;; *************** function _nrfSetRXAddr *****************
   728 ;; Defined at:
   729 ;;		line 261 in file "main.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  addrXX          1    wreg     unsigned char 
   732 ;;  addr            2    2[COMRAM] PTR unsigned char 
   733 ;;		 -> RX_ADDRESS(4), 
   734 ;; Auto vars:     Size  Location     Type
   735 ;;  addrXX          1    4[COMRAM] unsigned char 
   736 ;;  i               2    5[COMRAM] int 
   737 ;; Return value:  Size  Location     Type
   738 ;;		None               void
   739 ;; Registers used:
   740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   746 ;;      Params:         2       0       0       0
   747 ;;      Locals:         3       0       0       0
   748 ;;      Temps:          0       0       0       0
   749 ;;      Totals:         5       0       0       0
   750 ;;Total ram usage:        5 bytes
   751 ;; Hardware stack levels used:    1
   752 ;; Hardware stack levels required when called:    1
   753 ;; This function calls:
   754 ;;		_spiWrite
   755 ;; This function is called by:
   756 ;;		_nrfConfig
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           	psect	text6
   761  003F1C                     __ptext6:
   762                           	opt stack 0
   763  003F1C                     _nrfSetRXAddr:
   764                           	opt stack 28
   765                           
   766                           ;incstack = 0
   767                           ;nrfSetRXAddr@addrXX stored from wreg
   768  003F1C  6E12               	movwf	nrfSetRXAddr@addrXX,c
   769                           
   770                           ;main.c: 262: spiWrite(0x20|addrXX);
   771  003F1E  5012               	movf	nrfSetRXAddr@addrXX,w,c
   772  003F20  0920               	iorlw	32
   773  003F22  EC25  F01F         	call	_spiWrite
   774                           
   775                           ;main.c: 264: int i;
   776                           ;main.c: 265: for (i=0;i<4;i++) {
   777  003F26  0E00               	movlw	0
   778  003F28  6E14               	movwf	nrfSetRXAddr@i+1,c
   779  003F2A  0E00               	movlw	0
   780  003F2C  6E13               	movwf	nrfSetRXAddr@i,c
   781  003F2E  5014               	movf	nrfSetRXAddr@i+1,w,c
   782  003F30  0A80               	xorlw	128
   783  003F32  0F80               	addlw	-128
   784  003F34  0E04               	movlw	4
   785  003F36  B4D8               	btfsc	status,2,c
   786  003F38  5C13               	subwf	nrfSetRXAddr@i,w,c
   787  003F3A  B0D8               	btfsc	status,0,c
   788  003F3C  0012               	return	
   789                           
   790                           ;main.c: 266: spiWrite(addr[i]);
   791  003F3E  5013               	movf	nrfSetRXAddr@i,w,c
   792  003F40  2410               	addwf	nrfSetRXAddr@addr,w,c
   793  003F42  6ED9               	movwf	fsr2l,c
   794  003F44  5014               	movf	nrfSetRXAddr@i+1,w,c
   795  003F46  2011               	addwfc	nrfSetRXAddr@addr+1,w,c
   796  003F48  6EDA               	movwf	fsr2h,c
   797  003F4A  50DF               	movf	indf2,w,c
   798  003F4C  EC25  F01F         	call	_spiWrite
   799  003F50  4A13               	infsnz	nrfSetRXAddr@i,f,c
   800  003F52  2A14               	incf	nrfSetRXAddr@i+1,f,c
   801  003F54  D7EC               	goto	L3
   802  003F56                     __end_of_nrfSetRXAddr:
   803                           	opt stack 0
   804                           tblptru	equ	0xFF8
   805                           tblptrh	equ	0xFF7
   806                           tblptrl	equ	0xFF6
   807                           tablat	equ	0xFF5
   808                           postinc0	equ	0xFEE
   809                           wreg	equ	0xFE8
   810                           postdec1	equ	0xFE5
   811                           fsr1l	equ	0xFE1
   812                           indf2	equ	0xFDF
   813                           fsr2h	equ	0xFDA
   814                           fsr2l	equ	0xFD9
   815                           status	equ	0xFD8
   816                           
   817 ;; *************** function _spiWrite *****************
   818 ;; Defined at:
   819 ;;		line 286 in file "main.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;  data            1    wreg     unsigned char 
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  data            1    1[COMRAM] unsigned char 
   824 ;; Return value:  Size  Location     Type
   825 ;;		None               void
   826 ;; Registers used:
   827 ;;		wreg, status,2, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   833 ;;      Params:         0       0       0       0
   834 ;;      Locals:         1       0       0       0
   835 ;;      Temps:          1       0       0       0
   836 ;;      Totals:         2       0       0       0
   837 ;;Total ram usage:        2 bytes
   838 ;; Hardware stack levels used:    1
   839 ;; This function calls:
   840 ;;		Nothing
   841 ;; This function is called by:
   842 ;;		_nrfConfig
   843 ;;		_nrfSetTXAddr
   844 ;;		_nrfSetRXAddr
   845 ;;		_nrfTX
   846 ;;		_getSTATUS
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           	psect	text7
   851  003E4A                     __ptext7:
   852                           	opt stack 0
   853  003E4A                     _spiWrite:
   854                           	opt stack 29
   855                           
   856                           ;incstack = 0
   857                           ;spiWrite@data stored from wreg
   858  003E4A  6E0F               	movwf	spiWrite@data,c
   859                           
   860                           ;main.c: 288: LATAbits.LATA2 = 1;
   861  003E4C  8489               	bsf	3977,2,c	;volatile
   862                           
   863                           ;main.c: 289: SSP1BUF = data;
   864  003E4E  C00F  FFC9         	movff	spiWrite@data,4041	;volatile
   865                           
   866                           ;main.c: 290: LATAbits.LATA2 = 0;
   867  003E52  9489               	bcf	3977,2,c	;volatile
   868                           
   869                           ;main.c: 291: _delay((unsigned long)((500)*(64000000/4000000.0)));
   870  003E54  0E0B               	movlw	11
   871  003E56  6E0E               	movwf	??_spiWrite& (0+255),c
   872  003E58  0E62               	movlw	98
   873  003E5A                     u107:
   874  003E5A  2EE8               	decfsz	wreg,f,c
   875  003E5C  D7FE               	goto	u107
   876  003E5E  2E0E               	decfsz	??_spiWrite& (0+255),f,c
   877  003E60  D7FC               	goto	u107
   878  003E62  D000               	nop2	
   879  003E64  0012               	return	
   880  003E66                     __end_of_spiWrite:
   881                           	opt stack 0
   882                           tblptru	equ	0xFF8
   883                           tblptrh	equ	0xFF7
   884                           tblptrl	equ	0xFF6
   885                           tablat	equ	0xFF5
   886                           postinc0	equ	0xFEE
   887                           wreg	equ	0xFE8
   888                           postdec1	equ	0xFE5
   889                           fsr1l	equ	0xFE1
   890                           indf2	equ	0xFDF
   891                           fsr2h	equ	0xFDA
   892                           fsr2l	equ	0xFD9
   893                           status	equ	0xFD8
   894                           
   895 ;; *************** function _delay10ms *****************
   896 ;; Defined at:
   897 ;;		line 332 in file "main.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  ms_multi        2    0[COMRAM] int 
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  i               2    3[COMRAM] int 
   902 ;; Return value:  Size  Location     Type
   903 ;;		None               void
   904 ;; Registers used:
   905 ;;		wreg, status,2, status,0
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   911 ;;      Params:         2       0       0       0
   912 ;;      Locals:         2       0       0       0
   913 ;;      Temps:          1       0       0       0
   914 ;;      Totals:         5       0       0       0
   915 ;;Total ram usage:        5 bytes
   916 ;; Hardware stack levels used:    1
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text8
   925  003EE2                     __ptext8:
   926                           	opt stack 0
   927  003EE2                     _delay10ms:
   928                           	opt stack 30
   929                           
   930                           ;main.c: 333: int i = 0;
   931                           
   932                           ;incstack = 0
   933  003EE2  0E00               	movlw	0
   934  003EE4  6E12               	movwf	delay10ms@i+1,c
   935  003EE6  0E00               	movlw	0
   936  003EE8  6E11               	movwf	delay10ms@i,c
   937                           
   938                           ;main.c: 334: for (i=0;i<ms_multi;i++) {
   939  003EEA  0E00               	movlw	0
   940  003EEC  6E12               	movwf	delay10ms@i+1,c
   941  003EEE  0E00               	movlw	0
   942  003EF0  6E11               	movwf	delay10ms@i,c
   943  003EF2  D009               	goto	l100
   944  003EF4                     l747:
   945                           
   946                           ;main.c: 335: _delay((unsigned long)((10)*(64000000/4000.0)));
   947  003EF4  0ED0               	movlw	208
   948  003EF6  6E10               	movwf	??_delay10ms& (0+255),c
   949  003EF8  0ECA               	movlw	202
   950  003EFA                     u117:
   951  003EFA  2EE8               	decfsz	wreg,f,c
   952  003EFC  D7FE               	goto	u117
   953  003EFE  2E10               	decfsz	??_delay10ms& (0+255),f,c
   954  003F00  D7FC               	goto	u117
   955  003F02  4A11               	infsnz	delay10ms@i,f,c
   956  003F04  2A12               	incf	delay10ms@i+1,f,c
   957  003F06                     l100:
   958  003F06  5012               	movf	delay10ms@i+1,w,c
   959  003F08  0A80               	xorlw	128
   960  003F0A  6E10               	movwf	??_delay10ms& (0+255),c
   961  003F0C  500E               	movf	delay10ms@ms_multi,w,c
   962  003F0E  5C11               	subwf	delay10ms@i,w,c
   963  003F10  500F               	movf	delay10ms@ms_multi+1,w,c
   964  003F12  0A80               	xorlw	128
   965  003F14  5810               	subwfb	??_delay10ms& (0+255),w,c
   966  003F16  B0D8               	btfsc	status,0,c
   967  003F18  0012               	return	
   968  003F1A  D7EC               	goto	l747
   969  003F1C                     __end_of_delay10ms:
   970                           	opt stack 0
   971  0000                     tblptru	equ	0xFF8
   972                           tblptrh	equ	0xFF7
   973                           tblptrl	equ	0xFF6
   974                           tablat	equ	0xFF5
   975                           postinc0	equ	0xFEE
   976                           wreg	equ	0xFE8
   977                           postdec1	equ	0xFE5
   978                           fsr1l	equ	0xFE1
   979                           indf2	equ	0xFDF
   980                           fsr2h	equ	0xFDA
   981                           fsr2l	equ	0xFD9
   982                           status	equ	0xFD8
   983                           tblptru	equ	0xFF8
   984                           tblptrh	equ	0xFF7
   985                           tblptrl	equ	0xFF6
   986                           tablat	equ	0xFF5
   987                           postinc0	equ	0xFEE
   988                           wreg	equ	0xFE8
   989                           postdec1	equ	0xFE5
   990                           fsr1l	equ	0xFE1
   991                           indf2	equ	0xFDF
   992                           fsr2h	equ	0xFDA
   993                           fsr2l	equ	0xFD9
   994                           status	equ	0xFD8
   995                           
   996                           	psect	rparam
   997  0000                     tblptru	equ	0xFF8
   998                           tblptrh	equ	0xFF7
   999                           tblptrl	equ	0xFF6
  1000                           tablat	equ	0xFF5
  1001                           postinc0	equ	0xFEE
  1002                           wreg	equ	0xFE8
  1003                           postdec1	equ	0xFE5
  1004                           fsr1l	equ	0xFE1
  1005                           indf2	equ	0xFDF
  1006                           fsr2h	equ	0xFDA
  1007                           fsr2l	equ	0xFD9
  1008                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      24
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    sp__spiRead	PTR int  size(2) Largest target is 32
		 -> spiRead@data(COMRAM[32]), 

    nrfSetRXAddr@addr	PTR unsigned char  size(2) Largest target is 4
		 -> RX_ADDRESS(COMRAM[4]), 

    nrfSetTXAddr@addr	PTR unsigned char  size(2) Largest target is 4
		 -> TX_ADDRESS(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _nrfTX->_spiWrite
    _nrfConfig->_nrfSetRXAddr
    _nrfSetTXAddr->_spiWrite
    _nrfSetRXAddr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     399
                                              7 COMRAM     2     2      0
                          _delay10ms
                          _nrfConfig
                              _nrfTX
                         _portConfig
                        _spiConfig_1
 ---------------------------------------------------------------------------------
 (1) _spiConfig_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _portConfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nrfTX                                                1     1      0      30
                                              2 COMRAM     1     1      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _nrfConfig                                            0     0      0     266
                       _nrfSetRXAddr
                       _nrfSetTXAddr
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _nrfSetTXAddr                                         4     2      2     118
                                              2 COMRAM     4     2      2
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _nrfSetRXAddr                                         5     3      2     133
                                              2 COMRAM     5     3      2
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _delay10ms                                            5     3      2      73
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay10ms
   _nrfConfig
     _nrfSetRXAddr
       _spiWrite
     _nrfSetTXAddr
       _spiWrite
     _spiWrite
   _nrfTX
     _spiWrite
   _portConfig
   _spiConfig_1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      9      18       1       25.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18       8        0.0%
DATA                 0      0      18      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Sep 17 11:13:41 2014

                     u97 3E78             spiWrite@data 000F               _RX_ADDRESS 0006  
            __CFG_LVP$ON 000000                      l100 3F06                      l747 3EF4  
                    l755 3F62                      u107 3E5A                      u117 3EFA  
                    wreg 000FE8               _TX_ADDRESS 000A                     _LATA 000F89  
                   _LATB 000F8A                     _LATC 000F8B                     _main 3F56  
                   fsr1l 000FE1                     indf2 000FDF                     fsr2l 000FD9  
          __CFG_BORV$190 000000                     start 0000            __CFG_IESO$OFF 000000  
                  ?_main 000E                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94           __CFG_FCMEN$OFF 000000                    _count 0017  
                  _nrfTX 3E66       __CFG_MCLRE$EXTMCLR 000000                    main@i 0015  
                  tablat 000FF5                    status 000FD8           __CFG_HFOFST$ON 000000  
         __CFG_FOSC$HSHP 000000          __initialization 3E82             __end_of_main 3FA2  
                 ??_main 0015            __activetblptr 000000           __CFG_PLLCFG$ON 000000  
          nrfSetRXAddr@i 0013                   ?_nrfTX 000E            nrfSetTXAddr@i 0012  
         __CFG_WDTEN$OFF 000000             ?_spiConfig_1 000E           __CFG_PWRTEN$ON 000000  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000             __pdataCOMRAM 0001  
       __end_of_spiWrite 3E66                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 3EA6  
        __CFG_PBADEN$OFF 000000            ?_nrfSetRXAddr 0010            ?_nrfSetTXAddr 0010  
         __pcstackCOMRAM 000E       __size_of_delay10ms 003A            __end_of_nrfTX 3E82  
         _EN_RXADDR_INIT 0002                  ??_nrfTX 0010           ??_nrfSetRXAddr 0012  
         ??_nrfSetTXAddr 0012       __size_of_nrfConfig 005E       __CFG_CCP2MX$PORTC1 000000  
     __CFG_CCP3MX$PORTB5 000000                  _SSP1ADD 000FC8                  _SSP1BUF 000FC9  
      __end_of_delay10ms 3F1C         nrfSetRXAddr@addr 0010                  __Hparam 0000  
                __Lparam 0000     __size_of_spiConfig_1 0016               delay10ms@i 0011  
              ?_spiWrite 000E                  __pcinit 3E82         nrfSetTXAddr@addr 0010  
                __ramtop 0300                  __ptext0 3F56                  __ptext1 3E1A  
                __ptext2 3E30                  __ptext3 3E66                  __ptext4 3FA2  
                __ptext5 3EAC                  __ptext6 3F1C                  __ptext7 3E4A  
                __ptext8 3EE2        __end_of_nrfConfig 4000     end_of_initialization 3EA6  
             ??_spiWrite 000E                  postdec1 000FE5                  postinc0 000FEE  
             _portConfig 3E30     __end_of_nrfSetRXAddr 3F56     __end_of_nrfSetTXAddr 3EE2  
     nrfSetRXAddr@addrXX 0012            __pidataCOMRAM 3E0D      start_initialization 3E82  
            ?_portConfig 000E              __pbssCOMRAM 0017                _delay10ms 3EE2  
            _CONFIG_INIT 0001            _SETUP_AW_INIT 0005    __size_of_nrfSetRXAddr 003A  
  __size_of_nrfSetTXAddr 0036        __size_of_spiWrite 001C         __CFG_PRICLKEN$ON 000000  
         __size_of_nrfTX 001C                _nrfConfig 3FA2      __size_of_portConfig 001A  
               _LATAbits 000F89               ?_delay10ms 000E            ??_spiConfig_1 000E  
           _nrfSetRXAddr 3F1C             _nrfSetTXAddr 3EAC         __CFG_WDTPS$32768 000000  
          _RF_SETUP_INIT 0004        delay10ms@ms_multi 000E                copy_data0 3E9A  
             ?_nrfConfig 000E                 __Hrparam 0000                 __Lrparam 0000  
     __CFG_BOREN$SBORDIS 000000        __CFG_P2BMX$PORTB5 000000      __end_of_spiConfig_1 3E30  
              nrfTX@data 0010             _SSP1CON1bits 000FC6            __size_of_main 004C  
            ??_delay10ms 0010                 _spiWrite 3E4A             _SSP1STATbits 000FC7  
           ??_portConfig 000E              ??_nrfConfig 0015       __end_of_portConfig 3E4A  
            _spiConfig_1 3E1A               _RF_CH_INIT 0003        __CFG_T3CMX$PORTC0 000000  
